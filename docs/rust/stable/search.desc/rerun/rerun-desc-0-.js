searchState.loadedDescShard("rerun", 0, "Rerun - Visualize streams of multimodal data.\nRefer to all instances in a batch.\nAll features disabled.\n<strong>Component</strong>: A color multiplier, usually applied to a whole …\n<strong>Datatype</strong>: Angle in radians.\n<strong>Archetype</strong>: The annotation context provides additional …\n<strong>Datatype</strong>: Annotation info annotating a class id or …\nThe user-chosen name of the application doing the logging.\nAn archetype is a high-level construct that represents a …\nThe fully-qualified name of an <code>Archetype</code>, e.g. …\nE.g. too many values (overflows i32).\n<strong>Archetype</strong>: 2D arrows with optional colors, radii, labels, …\n<strong>Archetype</strong>: 3D arrows with optional colors, radii, labels, …\nDescribes the interface for interpreting an object as a …\n<strong>Archetype</strong>: A prepacked 3D asset (<code>.gltf</code>, <code>.glb</code>, <code>.obj</code>, <code>.stl</code>, …\n<strong>Archetype</strong>: A video binary.\nRotation defined with an axis and an angle.\nX=Back, Y=Down, Z=Left\nX=Back, Y=Down, Z=Right\nBlue, Green, Red\nBlue, Green, Red, Alpha\nBlack and opaque.\nBlack and opaque.\nX=Back, Y=Left, Z=Down\nX=Back, Y=Left, Z=Up\nX=Back, Y=Right, Z=Down\nX=Back, Y=Right, Z=Up\nX=Back, Y=Up, Z=Left\nX=Back, Y=Up, Z=Right\n<strong>Archetype</strong>: A bar chart.\nData associated with the blueprint state.\nData associated with the blueprint state.\n<strong>Archetype</strong>: 2D boxes with half-extents and optional center, …\n<strong>Archetype</strong>: 3D boxes with half-extents and optional center, …\n<code>Self::DEFAULT</code>, but with changelog disabled.\n<code>Self::DEFAULT</code>, but with compaction entirely disabled.\nDesignates catastrophic failures.\nWhere are we calling <code>run</code> from?\n<strong>Archetype</strong>: 3D capsules; cylinders with hemispherical caps.\n<strong>Datatype</strong>: The innermost datatype of an image.\nThe transform describes how to transform into the child …\nError within the underlying chunk batcher.\nError within the underlying chunk batcher.\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. A …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s.\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. A …\nEverything needed to build custom <code>ChunkStoreSubscriber</code>s. A …\n<strong>Datatype</strong>: The description of a semantic Class.\n<strong>Archetype</strong>: Empties all the components of an entity.\nCalled from a command-line-input (the terminal).\n<strong>Component</strong>: An RGBA color with unmultiplied/separate alpha, …\n<strong>Datatype</strong>: Specified what color components are present in …\nA <code>Component</code> describes semantic data that can be used by …\nA <code>ComponentBatch</code> represents an array’s worth of <code>Component</code>…\nA <code>ComponentDescriptor</code> fully describes the semantics of a …\nThe fully-qualified name of a <code>Component</code>, e.g. …\nX=Down, Y=Back, Z=Left\nX=Down, Y=Back, Z=Right\nDesignates lower priority information.\nDefault configuration, applicable to most use cases, …\nCamera orientation used when there’s no camera …\nX=Down, Y=Forward, Z=Left\nX=Down, Y=Forward, Z=Right\nX=Down, Y=Left, Z=Back\nX=Down, Y=Left, Z=Forward\nX=Down, Y=Right, Z=Back\nX=Down, Y=Right, Z=Forward\nA <code>DataLoader</code> loads data from a file path and/or a file’s …\nErrors that might happen when loading data through a …\nAn error occurred while attempting to use a …\nRecommended settings for the <code>DataLoader</code>.\nThe fully-qualified name of a [<code>Datatype</code>], e.g. …\nCreate a new angle from degrees.\nMany lines are drawn to represent the surface of the shape …\n<strong>Archetype</strong>: A depth image, i.e. as captured by a depth …\nEnvironment variable to configure <code>Self::chunk_max_bytes</code>.\nEnvironment variable to configure <code>Self::chunk_max_rows</code>.\nEnvironment variable to configure …\nEnvironment variable to configure <code>Self::enable_changelog</code>.\nDesignates very serious errors.\nWhen an external <code>DataLoader</code> is asked to load some data …\nTo register a new external data loader, simply add an …\n<strong>Archetype</strong>: 3D ellipsoids or spheres.\n<strong>Archetype</strong>: An image encoded as e.g. a JPEG or PNG.\nThe unique identifier of an entity, e.g. <code>camera/3/points</code>\nThe different parts that make up an <code>EntityPath</code>.\nContains the error value\nContains the error value\nContains the error value\nReturn an error if the versions aren’t compatible.\nFailed to find Rerun Viewer executable at explicit path.\nFailed to find Rerun Viewer executable in PATH.\n16-bit IEEE-754 floating point, also known as <code>half</code>.\n16bit IEEE-754 floating point, also known as <code>half</code>.\n32-bit IEEE-754 floating point, also known as <code>float</code> or …\n32bit IEEE-754 floating point, also known as <code>float</code> or …\n64-bit IEEE-754 floating point, also known as <code>double</code>.\n64bit IEEE-754 floating point, also known as <code>double</code>.\nX=Forward, Y=Down, Z=Left\nX=Forward, Y=Down, Z=Right\nX=Forward, Y=Left, Z=Down\nX=Forward, Y=Left, Z=Up\nX=Forward, Y=Right, Z=Down\nX=Forward, Y=Right, Z=Up\nX=Forward, Y=Up, Z=Left\nX=Forward, Y=Up, Z=Right\nError within the underlying file sink.\n<strong>Component</strong>: How a geometric shape is drawn and colored.\n<strong>Datatype</strong>: A single-precision 32-bit IEEE 754 floating …\nBinary <code>glTF</code>.\n<code>glTF</code>.\nA generic indicator component that can be specialized for …\n<strong>Archetype</strong>: Geospatial line strings with positions …\n<strong>Archetype</strong>: Geospatial points with positions expressed in …\n<strong>Archetype</strong>: A list of edges in a graph.\n<strong>Archetype</strong>: A list of nodes in a graph with optional …\n<strong>Component</strong>: Half-size (radius) of a 2D box.\n<strong>Component</strong>: Half-size (radius) of a 3D box.\n16-bit signed integer.\n16bit signed integer.\n32-bit signed integer.\n32bit signed integer.\n64-bit signed integer.\n64bit signed integer.\n8-bit signed integer.\n8bit signed integer.\nThe identity transform.\nThe identity matrix.\nThe identity quaternion representing no rotation.\nThe identity rotation, representing no rotation.\nThe identity rotation, expressed as a quaternion\nDesignates useful information.\nA quaternion that represents an invalid transform.\nA rotation that represents an invalid transform.\n<strong>Archetype</strong>: A monochrome or color image.\n<strong>Component</strong>: The metadata describing the contents of a …\nThe associated indicator component, whose presence …\nA unique numeric index for each individual instance within …\n<strong>Archetype</strong>: One or more transforms between the current …\nOther I/O error.\nJPEG image: <code>image/jpeg</code>.\n<strong>Datatype</strong>: A connection between two <code>datatypes::KeypointId</code>s.\nGrayscale luminance intencity/brightness/value, sometimes …\nX=Left, Y=Back, Z=Down\nX=Left, Y=Back, Z=Up\nX=Left, Y=Down, Z=Back\nX=Left, Y=Down, Z=Forward\nX=Down, Y=Right, Z=Forward\nX=Up, Y=Right, Z=Back\nX=Right, Y=Down, Z=Back\nX=Right, Y=Up, Z=Forward\nX=Right, Y=Forward, Z=Down\nX=Right, Y=Back, Z=Up\nX=Left, Y=Forward, Z=Down\nX=Left, Y=Forward, Z=Up\nX=Left, Y=Up, Z=Back\nX=Left, Y=Up, Z=Forward\n<strong>Component</strong>: A line strip in 2D space.\n<strong>Component</strong>: A line strip in 3D space.\n<strong>Archetype</strong>: 2D line strips with positions and optional …\n<strong>Archetype</strong>: 3D line strips with positions and optional …\nWhat <code>DataLoader</code>s load.\nA <code>Loggable</code> represents a single instance in an array of …\nA <code>LoggableBatch</code> represents an array’s worth of <code>Loggable</code> …\nMarkdown.\nMP4 video: <code>video/mp4</code>.\nA token that (almost) proves we are on the main thread.\nLines are drawn around the parts of the shape which …\n<strong>Datatype</strong>: A 3x3 Matrix.\n<strong>Component</strong>: A standardized media type (RFC2046, formerly …\nRepresents a limit in how much RAM to use for the entire …\n<strong>Archetype</strong>: A 3D triangle mesh as specified by its per-mesh …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 2 …\nThe total number of components in the archetype: 2 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 2 …\nThe total number of components in the archetype: 0 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 2 …\nThe total number of components in the archetype: 0 …\nThe total number of components in the archetype: 0 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 0 …\nThe total number of components in the archetype: 1 …\nThe total number of components in the archetype: 1 …\n<code>NV12</code> (aka <code>Y_UV12</code>) is a YUV 4:2:0 chroma downsampled form …\nAn arbitrary named indicator component.\nWavefront .obj.\n<code>[1, 1]</code>, i.e. the multiplicative identity.\n<code>[1, 1, 1]</code>, i.e. the multiplicative identity.\nThe unit vector <code>[1, 1]</code>, i.e. the multiplicative identity.\n<code>[1, 1, 1]</code>, i.e. the multiplicative identity.\nRadius of length 1 in ui points.\nContains the success value\nContains the success value\nContains the success value\nPNG image: <code>image/png</code>.\nThe transform describes how to transform into the parent …\n<strong>Archetype</strong>: Camera perspective projection (a.k.a. …\n<strong>Datatype</strong>: Specifieds a particular format of an …\n<strong>Archetype</strong>: A 2D point cloud with positions and optional …\n<strong>Archetype</strong>: A 3D point cloud with positions and optional …\n<strong>Component</strong>: A position in 2D space.\n<strong>Component</strong>: A position in 3D space.\n<strong>Datatype</strong>: A Quaternion represented by 4 real numbers.\nRotation defined by a quaternion.\nX=Right, Y=Back, Z=Down\nX=Right, Y=Back, Z=Up\nX=Right, Y=Down, Z=Back\nX=Right, Y=Down, Z=Forward\nX=Right, Y=Forward, Z=Down\nX=Right, Y=Forward, Z=Up\nRed, Green, Blue\nRed, Green, Blue, Alpha\nX=Down, Y=Right, Z=Back\nX=Up, Y=Right, Z=Forward\nX=Right, Y=Down, Z=Forward\nX=Right, Y=Up, Z=Back\nX=Right, Y=Back, Z=Down\nX=Right, Y=Forward, Z=Up\nX=Right, Y=Up, Z=Back\nX=Right, Y=Up, Z=Forward\nCreate a new angle from radians.\n<strong>Component</strong>: The radius of something, e.g. a point.\nA recording of user-data.\nA recording of user-data.\nA <code>RecordingStream</code> handles everything related to logging …\nConstruct a <code>RecordingStream</code>.\nErrors that can occur when creating/manipulating a …\nResults that can occur when creating/manipulating a …\n<strong>Datatype</strong>: An RGBA color with unmultiplied/separate alpha, …\nA 3D rotation.\n<strong>Datatype</strong>: 3D rotation represented by a rotation around a …\nStereolithography Model <code>stl</code>: <code>model/stl</code>.\n<strong>Archetype</strong>: A double-precision scalar, e.g. for use for …\n<strong>Component</strong>: A 3D scale factor.\n<strong>Archetype</strong>: An image made up of integer <code>components::ClassId</code>…\nError within the underlying serializer.\nThe serialized contents of a <code>ComponentBatch</code> with …\nA column’s worth of component data.\n<strong>Archetype</strong>: Define the style properties for a line series …\n<strong>Archetype</strong>: Define the style properties for a point series …\nApproximations of stack and heap size for both internal …\nThe surface of the shape is filled in with a solid color. …\nErrors that can occur when <code>spawn</code>ing a Rerun Viewer.\nOptions to control the behavior of <code>spawn</code>.\nError spawning one of the background threads.\nError spawning a Rerun Viewer process.\nA unique id per store.\nWhat kind of Store this is.\nWhat kind of Store this is.\nPlain text.\nDesignates very low priority, often extremely verbose, …\nFully transparent (invisible).\nFully transparent (invisible).\n<strong>Archetype</strong>: An N-dimensional array of numbers.\n<strong>Datatype</strong>: The underlying storage for <code>archetypes::Tensor</code>.\n<strong>Datatype</strong>: An N-dimensional array of numbers.\n<strong>Component</strong>: A string of text, e.g. for labels and text …\n<strong>Archetype</strong>: A text element intended to be displayed in its …\n<strong>Archetype</strong>: A log entry in a text log, comprised of a text …\n<strong>Component</strong>: The severity level of a text log message.\nScale individually along each axis.\nA date-time represented as nanoseconds since unix epoch\nA point in time on any number of <code>Timeline</code>s.\nA time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …\n<strong>Archetype</strong>: A transform between two 3D spaces, i.e. a pose.\n<strong>Component</strong>: Specifies relation a spatial transform …\n<strong>Component</strong>: The three indices of a triangle in a triangle …\n16-bit unsigned integer.\n16bit unsigned integer.\n32-bit unsigned integer.\n32bit unsigned integer.\n64-bit unsigned integer.\n64bit unsigned integer.\n8-bit unsigned integer.\n8bit unsigned integer.\nX=Up, Y=Back, Z=Left\nX=Up, Y=Back, Z=Right\nX=Up, Y=Forward, Z=Left\nX=Up, Y=Forward, Z=Right\nX=Up, Y=Left, Z=Back\nX=Up, Y=Left, Z=Forward\nNo limit.\nX=Up, Y=Right, Z=Back\nX=Up, Y=Right, Z=Forward\nScale the same amount along all axis.\n<strong>Datatype</strong>: A vector in 2D space.\n<strong>Datatype</strong>: A vector in 3D space.\n<strong>Datatype</strong>: A vector in 4D space.\n<strong>Component</strong>: A vector in 2D space.\n<strong>Component</strong>: A vector in 3D space.\nHow to handle version mismatches during decoding.\n<strong>Archetype</strong>: References a single video frame.\n<strong>Archetype</strong>: How we interpret the coordinate system of an …\nDesignates hazardous situations.\nWhite and opaque.\nWhite and opaque.\nWarn if the versions don’t match, but continue loading.\nFailure to host a web viewer and/or Rerun server.\nMonochrome Y plane only, essentially a YUV 4:0:0 planar …\nMonochrome Y plane only, essentially a YUV 4:0:0 planar …\n<code>YUY2</code> (aka ‘YUYV’, ‘YUYV16’ or ‘NV21’), is a …\n<code>Y_U_V12</code> is a YUV 4:2:0 fully planar YUV format without …\n<code>Y_U_V12</code> is a YUV 4:2:0 fully planar YUV format without …\n<code>Y_U_V16</code> is a YUV 4:2:2 fully planar YUV format without …\n<code>Y_U_V16</code> is a YUV 4:2:2 fully planar YUV format without …\n<code>Y_U_V24</code> is a YUV 4:4:4 fully planar YUV format without …\n<code>Y_U_V24</code> is a YUV 4:4:4 fully planar YUV format without …\nThe origin.\nThe origin.\nZero radius.\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nZero angle, often used for representing no rotation.\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nConfigures the zoom-dependent scalar aggregation.\nA color multiplier applied to the whole asset.\nA color multiplier applied to the whole mesh.\nOptional albedo texture.\nThe format of the <code>albedo_texture_buffer</code>, if any.\nReturns all component descriptors that must, should and …\nRetrieve all <code>ComponentName</code>s in the store.\nRetrieve all the <code>ComponentName</code>s that have been written to …\nRetrieve all the <code>ComponentName</code>s that have been written to …\nRetrieve all the <code>ComponentName</code>s that have been written to …\nRetrieve all the <code>ComponentName</code>s that have been written to …\nRetrieve all <code>ComponentName</code>s in the store.\nRetrieve all <code>EntityPath</code>s in the store.\nRetrieve all <code>EntityPath</code>s in the store.\nRetrieve all <code>Timeline</code>s in the store.\nRetrieve all <code>Timeline</code>s in the store.\nHow much to rotate around the axis.\nThe recommended <code>re_log_types::ApplicationId</code> to log the …\nReturns a copy of <code>self</code>, overriding existing fields with …\nOptional name of the field within <code>Archetype</code> associated …\nOptional name of the <code>Archetype</code> associated with this data.\nArchetype are the high-level things you can log, like <code>Image</code>…\nThe underlying <code>arrow::datatypes::DataType</code>, excluding …\nWorkaround for downcasting support, simply return <code>self</code>:\nWorkaround for downcasting support, simply return <code>self</code>:\nExposes the object’s contents as a set of …\nReturns the media type as a string slice, e.g. “…\nThe text as a string slice.\nThe log level as a string slice, e.g. “INFO”.\nWidth/height ratio of the camera sensor.\nAxis to rotate around.\nVisual length of the 3 axes.\nReturns the <em>unresolved</em> backtrace associated with this …\nReturns the <em>unresolved</em> backtrace associated with this …\nSpecifies the configuration of the internal data batching …\nSwaps the underlying sink for a …\nNumber of bits used to represent this element type.\nThe asset’s bytes.\nThe asset’s bytes.\nThe encoded content of some image file, e.g. a PNG or JPEG.\nReturns the maximum of a box with these half-extents and a …\nReturns the maximum of a box with these half-extents and a …\nReturns the min position of a box with these half-extents …\nReturns the min position of a box with these half-extents …\nThe raw depth image data.\nThe raw image data.\nThe raw image data.\nThe content/data.\nCreates a new <code>RecordingStream</code> that starts in a buffering …\nThe version of the Rerun SDK.\nSets the view coordinates for the camera.\nOptional center positions of the boxes.\nOptional center positions of the boxes.\nOptional center positions of the ellipsoids.\nGet a chunk based on its ID.\nThe chunk that was added or removed.\nWhat is the threshold, in bytes, after which a <code>Chunk</code> …\nWhat is the threshold, in rows, after which a <code>Chunk</code> cannot …\nWhat is the threshold, in rows, after which a <code>Chunk</code> cannot …\nIntegration with integration with the <code>clap</code> command line …\nOptional class Ids for the points.\nOptional class Ids for the points.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional class ID for the ellipsoids.\nOptional class ID for the ellipsoids.\nOptional class Ids for the points.\nOptional <code>components::ClassId</code>s for the lines.\nOptional <code>components::ClassId</code>s for the lines.\nOptional class Ids for the vertices.\nOptional class Ids for the points.\nOptional class Ids for the points.\nCheck whether we are the child of a fork.\nClear all the fields of a <code>Transform3D</code>.\nClear all the fields of a <code>Clear</code>.\nClear all the fields of a <code>AnnotationContext</code>.\nClear all the fields of a <code>Arrows2D</code>.\nClear all the fields of a <code>Arrows3D</code>.\nClear all the fields of a <code>Asset3D</code>.\nClear all the fields of a <code>AssetVideo</code>.\nClear all the fields of a <code>BarChart</code>.\nClear all the fields of a <code>Boxes2D</code>.\nClear all the fields of a <code>Boxes3D</code>.\nClear all the fields of a <code>Capsules3D</code>.\nClear all the fields of a <code>DepthImage</code>.\nClear all the fields of a <code>Ellipsoids3D</code>.\nClear all the fields of a <code>EncodedImage</code>.\nClear all the fields of a <code>GeoLineStrings</code>.\nClear all the fields of a <code>GeoPoints</code>.\nClear all the fields of a <code>GraphEdges</code>.\nClear all the fields of a <code>GraphNodes</code>.\nClear all the fields of a <code>Image</code>.\nClear all the fields of a <code>InstancePoses3D</code>.\nClear all the fields of a <code>LineStrips2D</code>.\nClear all the fields of a <code>LineStrips3D</code>.\nClear all the fields of a <code>Mesh3D</code>.\nClear all the fields of a <code>Pinhole</code>.\nClear all the fields of a <code>Points2D</code>.\nClear all the fields of a <code>Points3D</code>.\nClear all the fields of a <code>Scalar</code>.\nClear all the fields of a <code>SegmentationImage</code>.\nClear all the fields of a <code>SeriesLine</code>.\nClear all the fields of a <code>SeriesPoint</code>.\nClear all the fields of a <code>Tensor</code>.\nClear all the fields of a <code>TextDocument</code>.\nClear all the fields of a <code>TextLog</code>.\nClear all the fields of a <code>Transform3D</code>.\nClear all the fields of a <code>VideoFrameReference</code>.\nClear all the fields of a <code>ViewCoordinates</code>.\nClones the <code>RecordingStream</code> without incrementing the …\nReturns the matrix column for the given <code>index</code>.\nThe color of the bar chart\nColor for the corresponding series.\nColor for the corresponding series.\nOptional color to use for the log line in the Rerun Viewer.\nThe color that will be applied to the annotated entity.\nThe color model represented by this image format.\nThe color model derived from this pixel format.\nColormap to use for rendering the depth image.\nOptional colors for the points.\nOptional colors for the points.\nOptional colors for the boxes.\nOptional colors for the boxes.\nOptional colors for the capsules.\nOptional colors for the ellipsoids.\nOptional colors for the line strings.\nOptional colors for the points.\nOptional colors for the boxes.\nOptional colors for the line strips.\nOptional colors for the line strips.\nOptional colors for the points.\nOptional colors for the points.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nPartitions the component data into multiple sub-batches.\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nHelper to partition the component data into unit-length …\nReturns the first common ancestor of two paths.\nReturns the first common ancestor of a list of entity …\nReports which <code>Chunk</code>s were merged into a new <code>Chunk</code> during a …\nSemantic name associated with this data.\nComponents are the basic building blocks of <code>archetypes</code>.\nSee <code>ChunkStoreConfig</code> for more information about …\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::log_sink::TcpSink</code> …\nResolves the final connect address value.\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::log_sink::TcpSink</code> …\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nList of class descriptions, mapping class indices to class …\nCoordinate system helpers, for use with …\nThe tensor data\nReturns the name of the <code>DataLoader</code> that generated this …\nAll the types required by the dataframe API.\nReturns the appropriate arrow datatype to represent this …\nThe datatype represented by this image format.\nThe datatype that this decodes into.\nThe low-level datatypes that <code>components</code> are built from.\nChecks the <code>RERUN</code> environment variable. If not found, …\nRandom-access decoding of a specific pixel of an image.\nRandom-access decoding of a specific pixel of an image.\nSet whether or not Rerun is enabled by default.\nThe default amount of time to wait for the TCP connection …\nGet <code>RUST_LOG</code> environment variable or <code>info</code>, if not set.\nThe default address of a Rerun TCP server which an SDK …\nAngle in degrees (converts from radians).\n<code>-1</code> for deletions, <code>+1</code> for additions.\nThis module contains utilities to support Rerun examples.\nHeight of a box using this half-extent.\nCreate a new depth image format with the given resolution …\nThe expected range of depth values.\nReturns the complete <code>ComponentDescriptor</code> for this <code>Component</code>…\nReturns the complete <code>ComponentDescriptor</code> for this …\nReturns the <code>ComponentDescriptor</code> for …\nReturns the <code>ComponentDescriptor</code> for <code>Self::albedo_factor</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::albedo_factor</code>.\nReturns the <code>ComponentDescriptor</code> for …\nReturns the <code>ComponentDescriptor</code> for …\nReturns the <code>ComponentDescriptor</code> for <code>Self::axis_length</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::blob</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::blob</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::blob</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::buffer</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::buffer</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::buffer</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::camera_xyz</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::centers</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::centers</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::centers</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::class_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::color</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::color</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::color</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::color</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colormap</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::context</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::data</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::depth_range</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::draw_order</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::draw_order</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::draw_order</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::draw_order</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::draw_order</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::draw_order</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::draw_order</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::draw_order</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::edges</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::fill_mode</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::fill_mode</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::format</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::format</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::format</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::graph_type</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::half_sizes</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::half_sizes</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::half_sizes</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::image_from_camera</code>…\nReturns the <code>ComponentDescriptor</code> for …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for the associated …\nReturns the <code>ComponentDescriptor</code> for <code>Self::is_recursive</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::keypoint_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::keypoint_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::lengths</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::level</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::line_radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::line_strings</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::marker</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::marker_size</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::mat3x3</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::mat3x3</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::media_type</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::media_type</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::media_type</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::media_type</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::meter</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::name</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::name</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::node_ids</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::opacity</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::opacity</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::opacity</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::origins</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::origins</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::point_fill_ratio</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::positions</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::positions</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::positions</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::positions</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::quaternion</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::quaternions</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::quaternions</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::quaternions</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::quaternions</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::radii</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::relation</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::resolution</code>.\nReturns the <code>ComponentDescriptor</code> for …\nReturns the <code>ComponentDescriptor</code> for …\nReturns the <code>ComponentDescriptor</code> for …\nReturns the <code>ComponentDescriptor</code> for …\nReturns the <code>ComponentDescriptor</code> for …\nReturns the <code>ComponentDescriptor</code> for <code>Self::scalar</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::scale</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::scales</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::show_labels</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::strips</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::strips</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::text</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::text</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::timestamp</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::translation</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::translations</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::translations</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::triangle_indices</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::value_range</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::values</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::vectors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::vectors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::vertex_colors</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::vertex_normals</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::vertex_positions</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::vertex_texcoords</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::video_reference</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::width</code>.\nReturns the <code>ComponentDescriptor</code> for <code>Self::xyz</code>.\nWhat actually changed?\nGet the name of a specific dimension.\nClears out the current time of the recording for the …\nCreates a new no-op <code>RecordingStream</code> that drops all logging …\nSwaps the underlying sink for a <code>crate::sink::BufferedSink</code>.\nReadable name for displaying in UI.\nWeb URL to the Rerun documentation for this component.\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nUnconditionally drops all the data for a given <code>entity_path</code>.\nNotifies all <code>PerStoreChunkSubscriber</code>s that a store was …\nDrop all events that are in the given range on the given …\nThe underlying data type of the buffer.\nThe datatype of the tensor.\nA list of node tuples.\nIf <code>true</code> (the default), the store will emit events when its …\nSet whether or not Rerun is enabled.\nCheck whether an entity has a static component or a …\nCheck whether an entity has a static component or a …\nCheck whether an entity has any static data or any …\nCheck whether an entity has any data on a specific …\nCheck whether an entity has a specific static component.\nCheck whether an entity has any static data.\nCheck whether an entity has a temporal component on any …\nCheck whether an entity has a temporal component on a …\nCheck whether an entity has any temporal data.\nCheck whether an entity has any temporal data.\nFind the earliest time at which something was logged for a …\nBuild an <code>EntityPath</code> from parts that are <em>not</em> escaped:\nWhat should the logged entity paths be prefixed with?\nStats about all the chunks that has data for an entity on …\nStats about all chunks with static data for an entity.\nReturns the min and max times at which data was logged for …\nUse this when it is part of a full entity path.\nMonotonically increasing ID of the event.\nSpecifies the name of the Rerun executable.\nResolves the final executable path.\nEnforce a specific executable to use instead of searching …\nRe-exports of other crates.\nExtra arguments that will be passed as-is to the Rerun …\nExtra environment variables that will be passed as-is to …\nReturn e.g. “jpg” for <code>image/jpeg</code>.\nOptionally choose whether the boxes are drawn with lines …\nOptionally choose whether the ellipsoids are drawn with …\nReturns a non-recursive clear.\nInitiates a flush of the pipeline and returns immediately.\nInitiates a flush the batching pipeline and waits for it …\nX &amp; Y focal length in pixels.\nWhether <code>SetStoreInfo</code>s should be sent, regardless of the …\nReturns path for force sink if private environment …\nForgets the currently active recording of the specified …\nForgets the currently active recording of the specified …\nHuman-readable formatting\nThe format of the image.\nThe format of the image.\nThe format of the image.\nUseful when showing dates/times on a timeline and you want …\nReturns a formatted string of <code>time_range</code> on this <code>Timeline</code>.\nReturns a formatted string of <code>time_range</code> on this <code>Timeline</code>.\nField of View on the Y axis, i.e. the angle between top …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Instance</code> that identifies a 2D coordinate.\nGiven an iterator of Arrow arrays and their respective …\nGiven an Arrow array, deserializes it into a collection of …\nGiven an iterator of Arrow arrays and their respective …\nGiven an Arrow array, deserializes it into a collection of …\nSet the limit to some number of bytes.\nCreates new <code>Boxes2D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nCreates new <code>Boxes3D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nCreates a new <code>Ellipsoids3D</code> with <code>Self::centers</code> and …\nCreates a new <code>Ellipsoids3D</code> for spheres with the given …\nCreates new <code>Boxes2D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nCreates new <code>Boxes3D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nCreate a new image format from a color model and datatype.\nConstruct an image from a byte buffer given its …\nTry to construct an <code>Image</code> from a color model (L, RGB, …\nConstruct a depth image from a byte buffer given its …\nCreate a new angle from degrees.\nConstruct an image from <code>image::DynamicImage</code>.\nConstruct a tensor from <code>image::DynamicImage</code>.\nConstruct a tensor from <code>image::DynamicImage</code>.\nWe <em>should</em> only create an <code>egui::Ui</code> on the main thread, so …\nConstruct an image from a byte buffer given its …\nCreates a new <code>Capsules3D</code> where each capsule extends …\nCreates a new <code>ChunkStoreConfig</code> using the default values, …\nCreates a new <code>Asset3D</code> from the file contents at <code>path</code>.\nCreates a new image from the file contents at <code>path</code>.\nCreates a new <code>Asset3D</code> from the given <code>contents</code>.\nCreates a new <code>AssetVideo</code> from the given <code>contents</code>.\nConstruct an image given the encoded content of some image …\nCreates a new <code>Image</code> from the contents of a file.\nCreates a new <code>Points3D</code> from the contents of a <code>.ply</code> file.\nCreates a new <code>TextDocument</code> from the contents of a utf8 …\nTreat the file path as an entity path hierarchy.\nCreates a new <code>AssetVideo</code> from the file contents at <code>path</code>.\nCreates a new <code>Image</code> from a file.\nCreates a new <code>Points3D</code> from a <code>.ply</code> file.\nCreates a new <code>TextDocument</code> from a utf8 file.\nTreat the file path as one opaque string.\nCreates a pinhole from the camera focal length and …\nCreates a pinhole from the camera vertical field of view …\nSet the limit to some fraction (0-1) of the total …\nFrom an 16-bit grayscale image.\nCreates new <code>Boxes2D</code> with <code>Self::half_sizes</code> centered around …\nCreates new <code>Boxes3D</code> with <code>Self::half_sizes</code> centered around …\nCreates a new <code>Ellipsoids3D</code> with <code>Self::half_sizes</code>.\nConstruct an image from something that can be turned into …\nConstruct a tensor from something that can be turned into …\nConstruct a tensor from something that can be turned into …\nConstruct an image from the contents of an image file.\nConstruct a tensor from the contents of an image file.\nConstruct a tensor from the contents of an image file on …\nCreate a new line strip from a list of positions.\nConstruct a line strip from a sequence of points.\nFrom an 8-bit grayscale image.\nCreate a new <code>GeoLineStrings</code> from EPSG:4326 latitude and …\nCreate a new <code>GeoPoints</code> from EPSG:4326 latitude and …\nCreates a new <code>Capsules3D</code> with the given axis-aligned …\nFrom linear-space sRGB values in 0-1 range, with a …\nInstantiate a new <code>ChunkStore</code> with the given …\nCreates a new <code>TextDocument</code> containing Markdown.\nFrom a 3x3 matrix, clearing all other fields.\nCreates new <code>Boxes2D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nCreates new <code>Boxes3D</code> with <code>Self::centers</code> and <code>Self::half_sizes</code>…\nConstruct an image from a byte buffer given its resolution …\nFrom a specific pixel format.\nCreate a new angle from radians.\nCreates a new <code>Ellipsoids3D</code> for spheres with the given …\nFrom gamma-space sRGB values.\nFrom gamma-space sRGB values.\nAssumes RGB, 8-bit per channel, interleaved as <code>RGBRGBRGB</code>.\nAssumes RGBA, 8-bit per channel, with separate alpha.\nFrom a rotation, clearing all other fields.\nFrom a rotation &amp; scale, clearing all other fields.\nInstantiate a new <code>ChunkStore</code> with the given …\nFrom a scale, clearing all other fields.\nTreat the string as one opaque string, NOT splitting on …\nCreates new <code>Boxes2D</code> with <code>Self::half_sizes</code> created from …\nCreates new <code>Boxes3D</code> with <code>Self::half_sizes</code> created from …\nFrom a translation, clearing all other fields.\nFrom a translation applied after a 3x3 matrix, clearing …\nFrom a translation applied after a rotation, known as a …\nFrom a translation, applied after a rotation &amp; scale, …\nFrom a translation applied after a scale, clearing all …\nMost significant byte is <code>r</code>, least significant byte is <code>a</code>.\nMost significant byte is <code>r</code>, least significant byte is <code>a</code>.\nInstantiate a new <code>FillMode</code> from a u8 value.\nFrom gamma-space sRGB values, with a separate/unmultiplied …\nFrom gamma-space sRGB values, with a separate/unmultiplied …\nCreates new 2D arrows pointing in the given directions, …\nCreates new 3D arrows pointing in the given directions, …\nFrom WXYZ.\nFrom XYZW.\nReturns the fully-qualified name, e.g. …\nReturns the fully-qualified name, e.g. …\nReturns the fully-qualified name, e.g. …\nReturns the fully-qualified name, e.g. …\nTriggers a garbage collection according to the desired …\nReturn the current <code>ChunkStoreGeneration</code>. This can be used …\nReturns <code>overrides</code> if it exists, otherwise returns the most …\nGet a specific element.\nGet the value of the element at the given index.\n<code>model/gltf-binary</code>\nReturns the currently active recording of the specified …\n<code>model/gltf+json</code>\nSpecifies if the graph is directed or undirected.\nTries to guess the media type of the file at <code>path</code> based on …\nTries to guess the media type of the file at <code>path</code> based on …\nAll half-extents that make up the batch of boxes.\nAll half-extents that make up the batch of boxes.\nFor each ellipsoid, half of its size on its three axes.\nInstantiate a new <code>ChunkStore</code> with the given …\nDetermine if the image format has an alpha channel.\nDo we have an alpha channel?\nDo we have an alpha channel?\nPrecomputed hash of the string.\nPrecomputed hash of the string.\nPrecomputed hash of the string.\nPrecomputed 64-bit hash.\nReturns how many bytes <code>self</code> uses on the heap.\nHeight of a box using this half-extent.\nHeight of a box using this half-extent.\nHide the welcome screen.\nOnly call this from <code>fn main</code>, or you may get weird runtime …\n<code>datatypes::ClassId</code> or <code>datatypes::KeypointId</code> to which this …\nCamera projection, from image coordinates to view …\nDeserializes the pinhole projection from the …\nThe distance from the camera origin to the image plane …\nHelper function to iterate over all incremental <code>EntityPath</code>…\nColumn-major order matrix coefficients.\nCreates a <code>ComponentBatch</code> out of the associated …\nIf this is an indicator component, for which archetype?\nThe <code>datatypes::AnnotationInfo</code> for the class.\nInserts a <code>Chunk</code> in the store.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether or not logging is enabled, a <code>StoreInfo</code> and …\nPack the data into a <code>LogMsg</code>.\nIf true, this time is likely relative to unix epoch.\nAre we referring to all instances of the entity (e.g. all …\nIs this a direct child of the other path.\nIs this a strict descendant of the given path.\nIs this buffer empty?\nCheck if logging is enabled on this <code>RecordingStream</code>.\nReturns how large fraction of memory we should free to go …\nDetermine if the image format represents floating point …\nIs this datatype a floating point number?\nIs this pixel format floating point?\nDetermine whether a fork has happened since creating this …\nReturns <code>true</code> if this is an image media type.\nIs this an indicator component for an archetype?\nIs this datatype an integer?\nReturns true if the format is a YUV format using limited …\nIs <code>Self</code> just plain old data?\nAre we referring to a specific instance of the entity …\nReturns true if either all dimensions have size 1 or only …\nReturns <code>true</code> if this is an video media type.\nIterate over all chunks in the store, in ascending <code>ChunkId</code> …\n<code>image/jpeg</code>\nThe first point of the pair.\nThe second point of the pair.\nThe <code>datatypes::AnnotationInfo</code> for all of the keypoints.\nThe connections between keypoints.\nOptional keypoint IDs for the points, identifying them …\nOptional keypoint IDs for the points, identifying them …\nAddition or deletion?\nThe label that will be shown in the UI.\nOptional text labels for the arrows.\nOptional text labels for the arrows.\nOptional text labels for the boxes.\nOptional text labels for the boxes.\nOptional text labels for the capsules, which will be …\nOptional text labels for the ellipsoids.\nOptional text labels for the node.\nOptional text labels for the line strips.\nOptional text labels for the line strips.\nOptional text labels for the points.\nOptional text labels for the points.\nReturns the most-relevant chunk(s) for the given …\nReturns the most-relevant <em>temporal</em> chunk(s) for the given …\nNumber of parts\nLengths of the capsules, defined as the distance between …\nThe verbosity level of the message.\nOptional radii for the lines used when the ellipsoid is …\nThe line strings, expressed in EPSG:4326 coordinates …\nResolves the final listen address value.\nLoads data from in-memory file contents and sends it to <code>tx</code>.\nLoads data from a file on the local filesystem and sends …\nThings directly related to logging.\nLog data to Rerun.\nLogs a single <code>Chunk</code>.\nLogs the given <code>contents</code> using all …\nLogs the file at the given <code>path</code> using all …\nIntegrates the Rerun SDK with the <code>log</code> crate.\nLogs a set of <code>SerializedComponentBatch</code>es into Rerun.\nLog data to Rerun.\nThe log tick timeline to which all API functions will …\nThe log time timeline to which all API functions will …\nLogs the contents of a component bundle into Rerun.\nLookup the <code>ColumnMetadata</code> for a specific <code>EntityPath</code> and …\nLookup the <em>latest</em> arrow <code>ArrowDataType</code> used by a specific …\n<code>text/markdown</code>\nWhat shape to use to represent the point\nSize of the marker.\n3x3 transformation matrices.\n3x3 transformation matrix.\nDetermine if component matches a string\nLimit in bytes.\nWhat is the maximum finite value representable by this …\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the text.\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::sink::MemorySink</code> …\nAn upper limit on how much memory the Rerun Viewer should …\nAn optional floating point value that specifies how long a …\nWhat is the minimum finite value representable by this …\n<code>video/mp4</code>\nThe fully-qualified name of this archetype, e.g. …\nName of the <code>DataLoader</code>.\nArbitrary name for the subscriber.\nThe fully-qualified name of this component, e.g. …\nThe fully-qualified name of this component batch, e.g. …\nDisplay name of the series.\nDisplay name of the series.\nThe names of the dimensions of the tensor (optional).\nMethods for spawning the native viewer and streaming the …\nCreate a new <code>RecordingStreamBuilder</code> with the given …\nCreates a new <code>RecordingStream</code> with a given <code>StoreInfo</code> and …\nInstantiate a new empty <code>ChunkStore</code> with the given …\nThe given string is expected to be unescaped, i.e. any <code>\\</code> …\nCreate a new <code>Clear</code>.\nCreate a new <code>AnnotationContext</code>.\nCreate a new <code>Asset3D</code>.\nCreate a new <code>AssetVideo</code>.\nCreate a new <code>BarChart</code>.\nCreate a new <code>DepthImage</code>.\nCreate a new <code>EncodedImage</code>.\nCreate a new <code>GraphEdges</code>.\nCreate a new <code>GraphNodes</code>.\nCreate a new <code>Image</code>.\nCreate a new <code>InstancePoses3D</code>.\nCreate a new <code>LineStrips2D</code>.\nCreate a new <code>LineStrips3D</code>.\nCreate a new <code>Mesh3D</code>.\nCreate a new <code>Pinhole</code>.\nCreate a new <code>Points2D</code>.\nCreate a new <code>Points3D</code>.\nCreate a new <code>Scalar</code>.\nCreate a new <code>SegmentationImage</code>.\nCreate a new <code>SeriesLine</code>.\nCreate a new <code>SeriesPoint</code>.\nCreate a new <code>Tensor</code>.\nCreate a new <code>TextDocument</code>.\nCreate a new <code>TextLog</code>.\nCreate a new <code>VideoFrameReference</code>.\nCreate a new <code>ViewCoordinates</code>.\nCreate a new color.\nCreate a new half-extent from half-width and half-height.\nCreate a new half-extent from half-width, half-height, …\nCreate a new position.\nCreate a new position.\nCreate a new rotation from an axis and an angle.\nCreate a new tensor.\nCreate a new vector.\nCreate a new vector.\nCreate a new vector.\nCreate an array of indicator components of this type with …\nInstantiate a new empty <code>ChunkStore</code> with the given …\nCreates a new radius in scene units.\nFor things like camera frames or iteration count.\nCreates a new <code>re_log_types::StoreInfo</code> which can be used …\nFor absolute or relative time.\nCreates a new radius in ui points.\nA list of node IDs.\nReturns the current time of the recording on the current …\nNumber of bytes for the whole image.\nNumber of bytes needed to represent an image of the given …\n1 for grayscale, 3 for RGB, etc.\nGet the number of chunks.\nThe number of dimensions of the tensor.\nReturns the number of static events logged for an entity …\nReturns the number of temporal events logged for an entity …\nReturns the number of temporal events logged for an entity …\nThe total number of triangles.\nThe total number of vertices.\n<code>model/obj</code>\nNotifies a subscriber that an entire store was dropped.\nThe core of this trait: get notified of changes happening …\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering the segmentation …\nThe <code>re_log_types::ApplicationId</code> that is currently opened …\nThe <code>re_log_types::StoreId</code> that is currently opened in the …\nReturns all component descriptors that <em>may</em> be provided by …\nReturns <code>opt</code> if not <code>None</code>, otherwise tries to guess a media …\nReturns <code>opt</code> if not <code>None</code>, otherwise tries to guess a media …\nSets <code>Self::archetype_field_name</code> to the given one iff it’…\nSets the descriptor’s <code>archetype_field_name</code> to the given …\nSets <code>Self::archetype_name</code> to the given one iff it’s not …\nSets the descriptor’s <code>archetype_name</code> to the given one …\nAll the origin (base) positions for each arrow in the …\nAll the origin (base) positions for each arrow in the …\nReturn <code>None</code> if root.\nThe limit can either be absolute (e.g. “16GB”) or …\nParses an entity path, handling any malformed input with a …\nUnescape the string, forgiving any syntax error with a …\nUnescape the string, forgiving any syntax error with a …\nParse an entity path from a string, with strict checks for …\nUnescape the string, returning errors on wrongly escaped …\nPartitions the component data into multiple sub-batches.\n<code>text/plain</code>\n<code>image/png</code>\nScale the radii of the points in the point cloud generated …\nThe port to listen on.\nThe EPSG:4326 coordinates for the points …\nOptional center positions of the nodes.\nAll the 2D positions at which the point cloud shows points.\nAll the 3D positions at which the point cloud shows points.\nPrincipal point of the pinhole camera, i.e. the …\nProject camera-space coordinates into pixel coordinates, …\nRotation via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nAngle in radians.\nAngle in radians. One turn is equal to 2π (or τ) radians.\nOptional radii for the arrows.\nOptional radii for the arrows.\nOptional radii for the lines that make up the boxes.\nOptional radii for the lines that make up the boxes.\nRadii of the capsules.\nOptional radii for the line strings.\nOptional radii for the points, effectively turning them …\nOptional radii for nodes.\nOptional radii for the line strips.\nOptional radii for the line strips.\nOptional radii for the points, effectively turning them …\nOptional radii for the points, effectively turning them …\nReturns the most-relevant chunk(s) for the given <code>RangeQuery</code>…\nReturns the most-relevant <em>temporal</em> chunk(s) for the given …\nDetermines the presentation timestamps of all frames …\nReturns all component descriptors that <em>should</em> be provided …\nRecords an arbitrary <code>LogMsg</code>.\nRecords a single <code>PendingRow</code>.\nSet the <code>RecordingId</code> for this context.\nReturns a recursive clear.\nRegisters a <code>PerStoreChunkSubscriber</code> type so it gets …\nRegisters a <code>ChunkStoreSubscriber</code> so it gets automatically …\nSpecifies the relation this transform establishes between …\nRepartitions the component data into multiple sub-batches, …\nReturns all component descriptors that <em>must</em> be provided by …\nClears out the current time of the recording, for the …\nThe resolution of the camera sensor in pixels.\nPixel resolution (usually integers) of child image space. …\nDeserializes the resolution from the <code>resolution</code> field.\nGiven a <code>ComponentColumnSelector</code>, returns the corresponding …\nGiven a set of <code>ColumnSelector</code>s, returns the corresponding …\nGiven a <code>TimeColumnSelector</code>, returns the corresponding …\nCreate a new rgb image format with 8 bit per channel with …\nCreate a new rgba image format with 8 bit per channel with …\nRotation via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRun the Rerun application and return an exit code.\nCheck that this is a valid mesh, e.g. that the vertex …\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::sink::FileSink</code> at …\nSwaps the underlying sink for a <code>crate::sink::FileSink</code> at …\nThe scalar value to log.\nScaling factor.\nScaling factors.\nIf this radius is in scene units, returns the radius in …\nReturns the full schema of the store.\nReturns the filtered schema for the given <code>QueryExpression</code>.\nCreate a new segmentation image format with the given …\nSend a blueprint through this recording stream\nRecords a single <code>Chunk</code>.\nLower-level logging API to provide data spanning multiple …\nSerializes the contents of this <code>ComponentBatch</code>.\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSet a specific element.\nReplaces the currently active recording of the specified …\nSwaps the underlying sink for a new one.\nReplaces the currently active recording of the specified …\nSet the current time of the recording, for the current …\nSet the current time of the recording, for the current …\nSet the current time of the recording, for the current …\nSet the current time of the recording, for the current …\nThe shape of the tensor.\nThe shape of the tensor, i.e. the length of each dimension.\nReturns the shape of the tensor with all leading &amp; …\nReturns the unqualified name, e.g. <code>Points3D</code>.\nReturns the unqualified name, e.g. …\nReturns the unqualified name, e.g. <code>Position2D</code>.\nReturns the unqualified name, e.g. <code>Vec2D</code>.\nReturns short names for a collection of entities based on …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nDifferent destinations for log messages.\nThe size of the buffer in bytes.\nThe size of the tensor data, in bytes.\nSpawns a new Rerun Viewer process ready to listen for TCP …\nSpawns a new Rerun Viewer process from an executable …\nSpawns a new Rerun Viewer process from an executable …\nSpawns a new Rerun Viewer process from an executable …\nSpawns a new Rerun Viewer process from an executable …\nReturns <code>None</code> if <code>ALL</code>, otherwise the index.\nCreate a new half-extent with all the same sizes (a …\nReturns the total size of <code>self</code> on the stack, in bytes.\nIs this equals to, or a descendant of, the given path.\nCreates a new <code>RecordingStream</code> that is pre-configured to …\nSwaps the underlying sink for a <code>crate::sink::FileSink</code> …\nSwaps the underlying sink for a <code>crate::sink::FileSink</code> …\n<code>model/stl</code>\nWhat was the store’s generation when it sent that event?\nSet the <code>StoreId</code> for this context.\nWhich <code>ChunkStore</code> sent this event?\nThe recommended <code>re_log_types::StoreId</code> to log the data to, …\nThe <code>StoreInfo</code> associated with this <code>RecordingStream</code>.\nAll the actual 2D line strips that make up the batch.\nAll the actual 3D line strips that make up the batch.\nContents of the text document.\nThe body of the message.\nReturns the currently active recording of the specified …\nTime-related types.\nReturns the min and max times at which data was logged on …\nAt what time(s) should the data be logged to?\nReferences the closest video frame to this timestamp.\nRetrieves 2D image coordinates (x, y) encoded in an …\n<code>[r, g, b, a]</code>\n<code>[r, g, b, a]</code>\nSerializes the batch into an Arrow array.\nSerializes all non-null <code>Component</code>s of this bundle into …\nGiven an iterator of owned or reference values to the …\nSerializes the batch into an Arrow list array with a …\nGiven an iterator of options of owned or reference values …\nGenerates CLI flags from these settings, for external data …\nReturns the absolute datetime if applicable.\nMost significant byte is <code>r</code>, least significant byte is <code>a</code>.\nMost significant byte is <code>r</code>, least significant byte is <code>a</code>.\nReturns the total size of <code>self</code> in bytes, accounting for …\nTransform helpers, for use with <code>archetypes::Transform3D</code>.\nTranslation vector.\nOptional translations of the capsules.\nTranslation vectors.\nOptional indices for the triangles that make up the mesh.\nTry to construct a <code>DepthImage</code> from anything that can be …\nTry to construct a <code>SegmentationImage</code> from anything that …\nTry to construct a <code>Tensor</code> from anything that can be …\nSerializes the contents of this <code>ComponentBatch</code>.\nIf this radius is in ui points, returns the radius in ui …\nThe style of string to use in a UI\nThe unescaped string.\nScale the same amount along all axis.\nComputes the union of two <code>TimePoint</code>s, keeping the maximum …\nThe default <code>ApplicationId</code> if the user hasn’t set one.\nGiven pixel coordinates and a world-space depth, return a …\nUpdate only some specific fields of a <code>Clear</code>.\nUpdate only some specific fields of a <code>AnnotationContext</code>.\nUpdate only some specific fields of a <code>Arrows2D</code>.\nUpdate only some specific fields of a <code>Arrows3D</code>.\nUpdate only some specific fields of a <code>Asset3D</code>.\nUpdate only some specific fields of a <code>AssetVideo</code>.\nUpdate only some specific fields of a <code>BarChart</code>.\nUpdate only some specific fields of a <code>Boxes2D</code>.\nUpdate only some specific fields of a <code>Boxes3D</code>.\nUpdate only some specific fields of a <code>Capsules3D</code>.\nUpdate only some specific fields of a <code>DepthImage</code>.\nUpdate only some specific fields of a <code>Ellipsoids3D</code>.\nUpdate only some specific fields of a <code>EncodedImage</code>.\nUpdate only some specific fields of a <code>GeoLineStrings</code>.\nUpdate only some specific fields of a <code>GeoPoints</code>.\nUpdate only some specific fields of a <code>GraphEdges</code>.\nUpdate only some specific fields of a <code>GraphNodes</code>.\nUpdate only some specific fields of a <code>Image</code>.\nUpdate only some specific fields of a <code>InstancePoses3D</code>.\nUpdate only some specific fields of a <code>LineStrips2D</code>.\nUpdate only some specific fields of a <code>LineStrips3D</code>.\nUpdate only some specific fields of a <code>Mesh3D</code>.\nUpdate only some specific fields of a <code>Pinhole</code>.\nUpdate only some specific fields of a <code>Points2D</code>.\nUpdate only some specific fields of a <code>Points3D</code>.\nUpdate only some specific fields of a <code>Scalar</code>.\nUpdate only some specific fields of a <code>SegmentationImage</code>.\nUpdate only some specific fields of a <code>SeriesLine</code>.\nUpdate only some specific fields of a <code>SeriesPoint</code>.\nUpdate only some specific fields of a <code>Tensor</code>.\nUpdate only some specific fields of a <code>TextDocument</code>.\nUpdate only some specific fields of a <code>TextLog</code>.\nUpdate only some specific fields of a <code>Transform3D</code>.\nUpdate only some specific fields of a <code>VideoFrameReference</code>.\nUpdate only some specific fields of a <code>ViewCoordinates</code>.\nThe expected range of values.\nThe values. Should always be a 1-dimensional tensor (i.e. …\nCreate a vector of <code>KeypointPair</code> from an array of tuples.\nAll the vectors for each arrow in the batch.\nAll the vectors for each arrow in the batch.\nAn optional color for each vertex.\nAn optional normal for each vertex.\nThe positions of each vertex.\nAn optional uv texture coordinate for each vertex.\nOptional reference to an entity with a …\nThe w-coordinate, i.e. index 3.\nIf <code>true</code>, the call to <code>spawn</code> will block until the Rerun …\nMethods for spawning the web viewer and streaming the SDK …\nWidth of a box using this half-extent.\nWidth of a box using this half-extent.\nStroke width for the corresponding series.\nConfigures the zoom-dependent scalar aggregation.\nA color multiplier applied to the whole asset.\nA color multiplier applied to the whole mesh.\nUse this image as the albedo texture.\nOptional albedo texture.\nThe format of the <code>albedo_texture_buffer</code>, if any.\nUse this image as the albedo texture.\nUnconditionally sets <code>Self::archetype_field_name</code> to the …\nUnconditionally sets the descriptor’s …\nUnconditionally sets <code>Self::archetype_name</code> to the given one.\nUnconditionally sets the descriptor’s <code>archetype_name</code> to …\nVisual length of the 3 axes.\nThe asset’s bytes.\nThe asset’s bytes.\nThe encoded content of some image file, e.g. a PNG or JPEG.\nThe raw depth image data.\nThe raw image data.\nThe raw image data.\nSets the view coordinates for the camera.\nOptional center positions of the boxes.\nOptional center positions of the boxes.\nOptional center positions of the ellipsoids.\nOptional class Ids for the points.\nOptional class Ids for the points.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional class ID for the ellipsoids.\nOptional class ID for the ellipsoids.\nOptional class Ids for the points.\nOptional <code>components::ClassId</code>s for the lines.\nOptional <code>components::ClassId</code>s for the lines.\nOptional class Ids for the vertices.\nOptional class Ids for the points.\nOptional class Ids for the points.\nThe color of the bar chart\nColor for the corresponding series.\nColor for the corresponding series.\nOptional color to use for the log line in the Rerun Viewer.\nColormap to use for rendering the depth image.\nOptional colors for the points.\nOptional colors for the points.\nOptional colors for the boxes.\nOptional colors for the boxes.\nOptional colors for the capsules.\nOptional colors for the ellipsoids.\nOptional colors for the line strings.\nOptional colors for the points.\nOptional colors for the boxes.\nOptional colors for the line strips.\nOptional colors for the line strips.\nOptional colors for the points.\nOptional colors for the points.\nList of class descriptions, mapping class indices to class …\nThe tensor data\nThe expected range of depth values.\nUpdate the <code>names</code> of the contained <code>TensorData</code> dimensions.\nSet the names of the dimensions to the provided names.\nCreates a graph with directed edges.\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nA list of node tuples.\nOptionally choose whether the boxes are drawn with lines …\nOptionally choose whether the ellipsoids are drawn with …\nThe format of the image.\nThe format of the image.\nThe format of the image.\nSpecifies if the graph is directed or undirected.\nAll half-extents that make up the batch of boxes.\nAll half-extents that make up the batch of boxes.\nFor each ellipsoid, half of its size on its three axes.\nCamera projection, from image coordinates to view …\nThe distance from the camera origin to the image plane …\nOptional keypoint IDs for the points, identifying them …\nOptional keypoint IDs for the points, identifying them …\nOptional text labels for the arrows.\nOptional text labels for the arrows.\nOptional text labels for the boxes.\nOptional text labels for the boxes.\nOptional text labels for the capsules, which will be …\nOptional text labels for the ellipsoids.\nOptional text labels for the node.\nOptional text labels for the line strips.\nOptional text labels for the line strips.\nOptional text labels for the points.\nOptional text labels for the points.\nLengths of the capsules, defined as the distance between …\nThe verbosity level of the message.\nOptional radii for the lines used when the ellipsoid is …\nThe line strings, expressed in EPSG:4326 coordinates …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nThis method makes it possible to pack multiple …\nWhat shape to use to represent the point\nSize of the marker.\n3x3 transformation matrices.\n3x3 transformation matrix.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the text.\nAn optional floating point value that specifies how long a …\nDisplay name of the series.\nDisplay name of the series.\nA list of node IDs.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering the segmentation …\nAll the origin (base) positions for each arrow in the …\nAll the origin (base) positions for each arrow in the …\nPasses a reference to the downcasted per-store subscriber …\nPasses a mutable reference to the downcasted per-store …\nPasses a reference to the downcasted per-store subscriber …\nScale the radii of the points in the point cloud generated …\nThe EPSG:4326 coordinates for the points …\nOptional center positions of the nodes.\nAll the 2D positions at which the point cloud shows points.\nAll the 3D positions at which the point cloud shows points.\nPrincipal point of the pinhole camera, i.e. the …\nRotation via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nOptional radii for the arrows.\nOptional radii for the arrows.\nOptional radii for the lines that make up the boxes.\nOptional radii for the lines that make up the boxes.\nRadii of the capsules.\nOptional radii for the line strings.\nOptional radii for the points, effectively turning them …\nOptional radii for nodes.\nOptional radii for the line strips.\nOptional radii for the line strips.\nOptional radii for the points, effectively turning them …\nOptional radii for the points, effectively turning them …\nSpecifies the relation this transform establishes between …\nPixel resolution (usually integers) of child image space. …\nConvenience method that takes any kind of (single) …\nRotation via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nThe scalar value to log.\nScaling factor.\nScaling factors.\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nAll the actual 2D line strips that make up the batch.\nAll the actual 3D line strips that make up the batch.\nPasses a reference to the downcasted subscriber to the …\nPasses a mutable reference to the downcasted subscriber to …\nPasses a reference to the downcasted subscriber to the …\nContents of the text document.\nThe body of the message.\nReferences the closest video frame to this timestamp.\nTranslation vector.\nOptional translations of the capsules.\nTranslation vectors.\nOptional indices for the triangles that make up the mesh.\nCreates a graph with undirected edges.\nThe expected range of values.\nThe values. Should always be a 1-dimensional tensor (i.e. …\nAll the vectors for each arrow in the batch.\nAll the vectors for each arrow in the batch.\nAn optional color for each vertex.\nAn optional normal for each vertex.\nThe positions of each vertex.\nAn optional uv texture coordinate for each vertex.\nOptional reference to an entity with a …\nStroke width for the corresponding series.\nThe directions of the [x, y, z] axes.\nThe source of the error, without any <code>Self::Context</code>.\nThe x coordinate, i.e. index 0\nThe x coordinate, i.e. index 0\nThe x-coordinate, i.e. index 0.\nThe x-coordinate, i.e. index 0.\nThe x-coordinate, i.e. index 0.\nThe directions of the [x, y, z] axes.\nThe components of the quaternion in X,Y,Z,W order.\nThe y coordinate, i.e. index 1\nThe y coordinate, i.e. index 1\nThe y-coordinate, i.e. index 1.\nThe y-coordinate, i.e. index 1.\nThe y-coordinate, i.e. index 1.\nYuv matrix coefficients used by this format.\nThe z coordinate, i.e. index 2\nThe z-coordinate, i.e. index 2.\nThe z-coordinate, i.e. index 2.\nInner error explaining why the thread failed to spawn.\nName of the thread\nName used for the executable search.\nExplicit path of the executable (specified by the caller).\nHigh-level error message meant to be printed to the user …\nValue of the <code>PATH</code> environment variable, if any.\n<strong>Archetype</strong>: The annotation context provides additional …\n<strong>Archetype</strong>: 2D arrows with optional colors, radii, labels, …\n<strong>Archetype</strong>: 3D arrows with optional colors, radii, labels, …\n<strong>Archetype</strong>: A prepacked 3D asset (<code>.gltf</code>, <code>.glb</code>, <code>.obj</code>, <code>.stl</code>, …\n<strong>Archetype</strong>: A video binary.\n<strong>Archetype</strong>: A bar chart.\n<strong>Archetype</strong>: 2D boxes with half-extents and optional center, …\n<strong>Archetype</strong>: 3D boxes with half-extents and optional center, …\n<strong>Archetype</strong>: 3D capsules; cylinders with hemispherical caps.\n<strong>Archetype</strong>: Empties all the components of an entity.\n<strong>Archetype</strong>: A depth image, i.e. as captured by a depth …\n<strong>Archetype</strong>: 3D ellipsoids or spheres.\n<strong>Archetype</strong>: An image encoded as e.g. a JPEG or PNG.\n<strong>Archetype</strong>: Geospatial line strings with positions …\n<strong>Archetype</strong>: Geospatial points with positions expressed in …\n<strong>Archetype</strong>: A list of edges in a graph.\n<strong>Archetype</strong>: A list of nodes in a graph with optional …\n<strong>Archetype</strong>: A monochrome or color image.\n<strong>Archetype</strong>: One or more transforms between the current …\n<strong>Archetype</strong>: 2D line strips with positions and optional …\n<strong>Archetype</strong>: 3D line strips with positions and optional …\n<strong>Archetype</strong>: A 3D triangle mesh as specified by its per-mesh …\n<strong>Archetype</strong>: Camera perspective projection (a.k.a. …\n<strong>Archetype</strong>: A 2D point cloud with positions and optional …\n<strong>Archetype</strong>: A 3D point cloud with positions and optional …\n<strong>Archetype</strong>: A double-precision scalar, e.g. for use for …\n<strong>Archetype</strong>: An image made up of integer <code>components::ClassId</code>…\n<strong>Archetype</strong>: Define the style properties for a line series …\n<strong>Archetype</strong>: Define the style properties for a point series …\n<strong>Archetype</strong>: An N-dimensional array of numbers.\n<strong>Archetype</strong>: A text element intended to be displayed in its …\n<strong>Archetype</strong>: A log entry in a text log, comprised of a text …\n<strong>Archetype</strong>: A transform between two 3D spaces, i.e. a pose.\n<strong>Archetype</strong>: References a single video frame.\n<strong>Archetype</strong>: How we interpret the coordinate system of an …\nConfigures the zoom-dependent scalar aggregation.\nA color multiplier applied to the whole asset.\nA color multiplier applied to the whole mesh.\nOptional albedo texture.\nThe format of the <code>albedo_texture_buffer</code>, if any.\nVisual length of the 3 axes.\nThe asset’s bytes.\nThe asset’s bytes.\nThe encoded content of some image file, e.g. a PNG or JPEG.\nThe raw depth image data.\nThe raw image data.\nThe raw image data.\nSets the view coordinates for the camera.\nOptional center positions of the boxes.\nOptional center positions of the boxes.\nOptional center positions of the ellipsoids.\nOptional class Ids for the points.\nOptional class Ids for the points.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional <code>components::ClassId</code>s for the boxes.\nOptional class ID for the ellipsoids.\nOptional class ID for the ellipsoids.\nOptional class Ids for the points.\nOptional <code>components::ClassId</code>s for the lines.\nOptional <code>components::ClassId</code>s for the lines.\nOptional class Ids for the vertices.\nOptional class Ids for the points.\nOptional class Ids for the points.\nThe color of the bar chart\nColor for the corresponding series.\nColor for the corresponding series.\nOptional color to use for the log line in the Rerun Viewer.\nColormap to use for rendering the depth image.\nOptional colors for the points.\nOptional colors for the points.\nOptional colors for the boxes.\nOptional colors for the boxes.\nOptional colors for the capsules.\nOptional colors for the ellipsoids.\nOptional colors for the line strings.\nOptional colors for the points.\nOptional colors for the boxes.\nOptional colors for the line strips.\nOptional colors for the line strips.\nOptional colors for the points.\nOptional colors for the points.\nList of class descriptions, mapping class indices to class …\nThe tensor data\nThe expected range of depth values.\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nAn optional floating point value that specifies the 2D …\nA list of node tuples.\nOptionally choose whether the boxes are drawn with lines …\nOptionally choose whether the ellipsoids are drawn with …\nThe format of the image.\nThe format of the image.\nThe format of the image.\nSpecifies if the graph is directed or undirected.\nAll half-extents that make up the batch of boxes.\nAll half-extents that make up the batch of boxes.\nFor each ellipsoid, half of its size on its three axes.\nCamera projection, from image coordinates to view …\nThe distance from the camera origin to the image plane …\nOptional keypoint IDs for the points, identifying them …\nOptional keypoint IDs for the points, identifying them …\nOptional text labels for the arrows.\nOptional text labels for the arrows.\nOptional text labels for the boxes.\nOptional text labels for the boxes.\nOptional text labels for the capsules, which will be …\nOptional text labels for the ellipsoids.\nOptional text labels for the node.\nOptional text labels for the line strips.\nOptional text labels for the line strips.\nOptional text labels for the points.\nOptional text labels for the points.\nLengths of the capsules, defined as the distance between …\nThe verbosity level of the message.\nOptional radii for the lines used when the ellipsoid is …\nThe line strings, expressed in EPSG:4326 coordinates …\nWhat shape to use to represent the point\nSize of the marker.\n3x3 transformation matrices.\n3x3 transformation matrix.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the asset.\nThe Media Type of the text.\nAn optional floating point value that specifies how long a …\nDisplay name of the series.\nDisplay name of the series.\nA list of node IDs.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering several images.\nOpacity of the image, useful for layering the segmentation …\nAll the origin (base) positions for each arrow in the …\nAll the origin (base) positions for each arrow in the …\nScale the radii of the points in the point cloud generated …\nThe EPSG:4326 coordinates for the points …\nOptional center positions of the nodes.\nAll the 2D positions at which the point cloud shows points.\nAll the 3D positions at which the point cloud shows points.\nRotation via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nRotations via quaternion.\nOptional radii for the arrows.\nOptional radii for the arrows.\nOptional radii for the lines that make up the boxes.\nOptional radii for the lines that make up the boxes.\nRadii of the capsules.\nOptional radii for the line strings.\nOptional radii for the points, effectively turning them …\nOptional radii for nodes.\nOptional radii for the line strips.\nOptional radii for the line strips.\nOptional radii for the points, effectively turning them …\nOptional radii for the points, effectively turning them …\nSpecifies the relation this transform establishes between …\nPixel resolution (usually integers) of child image space. …\nRotation via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nRotations via axis + angle.\nThe scalar value to log.\nScaling factor.\nScaling factors.\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nOptional choice of whether the text labels should be shown …\nAll the actual 2D line strips that make up the batch.\nAll the actual 3D line strips that make up the batch.\nContents of the text document.\nThe body of the message.\nReferences the closest video frame to this timestamp.\nTranslation vector.\nOptional translations of the capsules.\nTranslation vectors.\nOptional indices for the triangles that make up the mesh.\nThe expected range of values.\nThe values. Should always be a 1-dimensional tensor (i.e. …\nAll the vectors for each arrow in the batch.\nAll the vectors for each arrow in the batch.\nAn optional color for each vertex.\nAn optional normal for each vertex.\nThe positions of each vertex.\nAn optional uv texture coordinate for each vertex.\nOptional reference to an entity with a …\nStroke width for the corresponding series.\nThe directions of the [x, y, z] axes.\nThis struct implements a <code>clap::Parser</code> that defines all the …\nWhat bind address IP to use.\nConnects and sends the logged data to a remote Rerun …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>RecordingStream</code> according to the CLI …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSaves the data to an rrd file rather than visualizing it …\nConnects and sends the logged data to a web-based Rerun …\nAn upper limit on how much memory the WebSocket server …\nStart a new Rerun Viewer process and feed it data in …\nLog data to standard output, to be piped into a Rerun …\nWhere are we calling <code>run</code> from?\nCalled from a command-line-input (the terminal).\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDeletes everything related to analytics.\nPrints the current configuration.\nPrints extra information about analytics.\nDisable analytics.\nAssociate an email address with the current user.\nEnable analytics.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConfigure the behavior of our analytics.\nGenerates the Rerun CLI manual (markdown).\nReset the memory of the Rerun Viewer.\nWhat bind address IP to use.\nSet a maximum input latency, e.g. “200ms” or “10s”.\nThis is a hint that we expect a recording to stream in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nHide the normal Rerun welcome screen.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhat TCP port do we listen to for SDKs to connect to.\nStart with the puffin profiler running.\nOverride the default graphics backend and for a specific …\nRun the Rerun application and return an exit code.\nStream incoming log events to an .rrd file at the given …\nTake a screenshot of the app and quit. We use this to …\nDeprecated: use <code>--serve-web</code> instead.\nServe the recordings over WebSocket to one or more Rerun …\nIngest data and then quit once the goodbye message has …\nThe number of compute threads to use.\nPrint version and quit.\nOverwrites hardware acceleration option for video decoding.\nStart the viewer in the browser (instead of locally).\nWhat port do we listen to for hosting the web viewer over …\nSet the screen resolution (in logical points), e.g. “…\nWhat port do we listen to for incoming websocket …\nCompacts the contents of one or more .rrd/.rbl …\nCompares the data between 2 .rrd files, returning a …\nFilters out data from .rrd/.rbl files/streams, and writes …\nMerges the contents of multiple .rrd/.rbl files/streams, …\nPrint the contents of one or more .rrd/.rbl files/streams.\nManipulate the contents of .rrd and .rbl files.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGiven a path to an rrd file, builds up a <code>ChunkStore</code> and …\nReturns the argument unchanged.\nIf specified, dumps both .rrd files as tables.\nCalls <code>U::from(self)</code>.\nChecks whether two .rrd files are <em>similar</em>, i.e. not equal …\nIf specified, the comparison will focus purely on …\nIf set, will try to proceed even in the face of IO and/or …\nPaths of the entities to be filtered out.\nNames of the timelines to be filtered out.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPaths to read from. Reads from standard input if none are …\nPath to write to. Writes to standard output if unspecified.\nIf set, will try to proceed even in the face of IO and/or …\nIf set, will try to proceed even in the face of IO and/or …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhat is the threshold, in bytes, after which a Chunk …\nWhat is the threshold, in rows, after which a Chunk cannot …\nWhat is the threshold, in rows, after which a Chunk cannot …\nPaths to read from. Reads from standard input if none are …\nPaths to read from. Reads from standard input if none are …\nPath to write to. Writes to standard output if unspecified.\nPath to write to. Writes to standard output if unspecified.\nIf set, will try to proceed even in the face of IO and/or …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPaths to read from. Reads from standard input if none are …\nIf set, print out table contents.\nAsynchronously decodes potentially multiplexed RRD streams …\n<strong>Component</strong>: Policy for aggregation of multiple scalar plot …\n<strong>Component</strong>: A color multiplier, usually applied to a whole …\n<strong>Component</strong>: The annotation context provides additional …\n<code>*</code>\nAverage all points in the range together.\n<strong>Component</strong>: The length of an axis in local units of the …\nX=Back, Y=Down, Z=Left\nX=Back, Y=Down, Z=Right\nX=Back, Y=Left, Z=Down\nX=Back, Y=Left, Z=Up\nX=Back, Y=Right, Z=Down\nX=Back, Y=Right, Z=Up\nX=Back, Y=Up, Z=Left\nX=Back, Y=Up, Z=Right\n<strong>Component</strong>: A binary blob of data.\nThe transform describes how to transform into the child …\n<code>⏺</code>\n<strong>Component</strong>: A 16-bit ID representing a type of semantic …\n<strong>Component</strong>: Configures how a clear operation should behave …\n<strong>Component</strong>: An RGBA color with unmultiplied/separate alpha, …\n<strong>Component</strong>: Colormap for mapping scalar values within a …\n<code>x</code>\nRasmusgo’s Cyan to Yellow colormap\nX=Down, Y=Back, Z=Left\nX=Down, Y=Back, Z=Right\nDraw order used for 2D boxes if no draw order was …\nDraw order used for depth image when they’re not shown …\nDraw order used for images if no draw order was specified.\nDraw order used for 2D lines if no draw order was …\nDraw order used for 2D points if no draw order was …\nDraw order used for segmentation images if no draw order …\nX=Down, Y=Forward, Z=Left\nX=Down, Y=Forward, Z=Right\nX=Down, Y=Left, Z=Back\nX=Down, Y=Left, Z=Forward\nX=Down, Y=Right, Z=Back\nX=Down, Y=Right, Z=Forward\nMany lines are drawn to represent the surface of the shape …\n<strong>Component</strong>: The world-&gt;depth map scaling factor.\n<code>◆</code>\nThe graph has directed edges.\n<code>▼</code>\n<strong>Component</strong>: Draw order of 2D elements. Higher values are …\n<strong>Component</strong>: A path to an entity, usually to reference some …\nX=Forward, Y=Down, Z=Left\nX=Forward, Y=Down, Z=Right\nX=Forward, Y=Left, Z=Down\nX=Forward, Y=Left, Z=Up\nX=Forward, Y=Right, Z=Down\nX=Forward, Y=Right, Z=Up\nX=Forward, Y=Up, Z=Left\nX=Forward, Y=Up, Z=Right\n<strong>Component</strong>: How a geometric shape is drawn and colored.\n<strong>Component</strong>: How much a primitive fills out the available …\n<strong>Component</strong>: A gamma correction value to be used with a …\n<strong>Component</strong>: A geospatial line string expressed in EPSG:4326 …\n<strong>Component</strong>: An edge in a graph connecting two nodes.\n<strong>Component</strong>: A string-based ID representing a node in a …\n<strong>Component</strong>: Specifies if a graph has directed or undirected …\nA simple black to white gradient.\n<strong>Component</strong>: Half-size (radius) of a 2D box.\n<strong>Component</strong>: Half-size (radius) of a 3D box.\nThe identity rotation, representing no rotation.\nThe identity rotation, representing no rotation.\nThe identity rotation, representing no rotation.\nThe identity rotation, representing no rotation.\nA rotation that represents an invalid transform.\nA rotation that represents an invalid transform.\n<strong>Component</strong>: A buffer that is known to store image data.\n<strong>Component</strong>: The metadata describing the contents of a …\n<strong>Component</strong>: The distance from the camera origin to the …\nThe Inferno colormap from Matplotlib.\n<strong>Component</strong>: A 16-bit ID representing a type of semantic …\nX=Left, Y=Back, Z=Down\nX=Left, Y=Back, Z=Up\nX=Left, Y=Down, Z=Back\nX=Left, Y=Down, Z=Forward\nX=Down, Y=Right, Z=Forward\nX=Up, Y=Right, Z=Back\nX=Right, Y=Down, Z=Back\nX=Right, Y=Up, Z=Forward\nX=Right, Y=Forward, Z=Down\nX=Right, Y=Back, Z=Up\nX=Left, Y=Forward, Z=Down\nX=Left, Y=Forward, Z=Up\nX=Left, Y=Up, Z=Back\nX=Left, Y=Up, Z=Forward\n<strong>Component</strong>: A geospatial position expressed in EPSG:4326 …\n<code>◀</code>\n<strong>Component</strong>: Length, or one-dimensional size.\n<strong>Component</strong>: A line strip in 2D space.\n<strong>Component</strong>: A line strip in 3D space.\nLinearly interpolate the nearest neighbors, creating a …\nThe Magma colormap from Matplotlib.\n<strong>Component</strong>: Filter used when magnifying an image/texture …\nLines are drawn around the parts of the shape which …\n<strong>Component</strong>: The visual appearance of a point in e.g. a 2D …\n<strong>Component</strong>: Radius of a marker of a point in e.g. a 2D …\nKeep only the maximum values in the range.\n<strong>Component</strong>: A standardized media type (RFC2046, formerly …\nKeep only the minimum values in the range.\nKeep both the minimum and maximum values in the range.\nFind both the minimum and maximum values in the range, …\n<strong>Component</strong>: A display name, typically for an entity or a …\nShow the nearest pixel value.\nThe corner opposite the origin.\nNo aggregation.\n<strong>Component</strong>: Degree of transparency ranging from 0.0 (fully …\nThe transform describes how to transform into the parent …\n<strong>Component</strong>: Camera projection, from image coordinates to …\n<strong>Component</strong>: An infinite 3D plane represented by a unit …\nThe Plasma colormap from Matplotlib.\n<code>+</code>\n<strong>Component</strong>: 3D rotation represented by a rotation around a …\n<strong>Component</strong>: A 3D rotation expressed as a quaternion that …\n<strong>Component</strong>: A 3D scale factor that doesn’t propagate in …\n<strong>Component</strong>: A 3x3 transformation matrix Matrix that doesn’…\n<strong>Component</strong>: A translation vector in 3D space that doesn’t …\n<strong>Component</strong>: A position in 2D space.\n<strong>Component</strong>: A position in 3D space.\nX=Right, Y=Back, Z=Down\nX=Right, Y=Back, Z=Up\nX=Right, Y=Down, Z=Back\nX=Right, Y=Down, Z=Forward\nX=Right, Y=Forward, Z=Down\nX=Right, Y=Forward, Z=Up\nX=Down, Y=Right, Z=Back\nX=Up, Y=Right, Z=Forward\nX=Right, Y=Down, Z=Forward\nX=Right, Y=Up, Z=Back\nX=Right, Y=Back, Z=Down\nX=Right, Y=Forward, Z=Up\nX=Right, Y=Up, Z=Back\nX=Right, Y=Up, Z=Forward\n<strong>Component</strong>: The radius of something, e.g. a point.\n<strong>Component</strong>: A 1D range, specifying a lower and upper bound.\n<strong>Component</strong>: A recording URI (Uniform Resource Identifier).\n<strong>Component</strong>: Pixel resolution width &amp; height, e.g. of a …\n<code>▶</code>\n<strong>Component</strong>: 3D rotation represented by a rotation around a …\n<strong>Component</strong>: A 3D rotation expressed as a quaternion.\n<strong>Component</strong>: A scalar value, encoded as a 64-bit floating …\n<strong>Component</strong>: A 3D scale factor.\n<strong>Component</strong>: Whether the entity’s <code>components::Text</code> label …\nThe surface of the shape is filled in with a solid color. …\n<code>◼️</code>\n<strong>Component</strong>: The width of a stroke specified in UI points.\n<strong>Component</strong>: An N-dimensional array of numbers.\n<strong>Component</strong>: Specifies a concrete index on a tensor …\n<strong>Component</strong>: Specifies which dimension to use for height.\n<strong>Component</strong>: Specifies which dimension to use for width.\n<strong>Component</strong>: A 2D texture UV coordinate.\n<strong>Component</strong>: A string of text, e.g. for labels and text …\n<strong>Component</strong>: The severity level of a text log message.\n<strong>Component</strong>: A 3x3 transformation matrix Matrix.\n<strong>Component</strong>: Specifies relation a spatial transform …\n<strong>Component</strong>: A translation vector in 3D space.\n<strong>Component</strong>: The three indices of a triangle in a triangle …\nGoogle’s Turbo colormap map.\nX=Up, Y=Back, Z=Left\nX=Up, Y=Back, Z=Right\nX=Up, Y=Forward, Z=Left\nX=Up, Y=Forward, Z=Right\nX=Up, Y=Left, Z=Back\nX=Up, Y=Left, Z=Forward\nX=Up, Y=Right, Z=Back\nX=Up, Y=Right, Z=Forward\nThe graph has undirected edges.\n<code>▲</code>\n<strong>Component</strong>: Range of expected or valid values, specifying a …\n<strong>Component</strong>: A vector in 2D space.\n<strong>Component</strong>: A vector in 3D space.\n<strong>Component</strong>: Timestamp inside a <code>archetypes::AssetVideo</code>.\n<strong>Component</strong>: How we interpret the coordinate system of an …\nThe Viridis colormap from Matplotlib\nThe X^Y plane with normal = +Z.\nThe Y^Z plane with normal = +X.\nNo translation.\nThe origin.\nNo translation.\nThe Z^X plane with normal = +Y.\nReturns the string slice of the graph node.\nReturns the name as a string slice.\nWidth/height ratio.\nA long description of the coordinate system, explicitly …\nDescribe using three letters, e.g. <code>RDF</code> for X=Right, …\nThe end of the range.\nThe end of the range.\nThe end of the range.\nThe end of the range.\nX &amp; Y focal length in pixels.\nThe forward-axis.\nField of View on the Y axis, i.e. the angle between top …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct an image buffer &amp; image format from …\nCreate a new pinhole projection matrix from a focal length …\nConstruct an image buffer &amp; image format from something …\nCreate a new line string from a list of positions.\nCreate new timestamp from milliseconds since video start.\nCreate new timestamp from nanoseconds since video start.\nReturns a matrix that transforms from another coordinate …\nReturns a matrix that transforms from RDF to this …\nReturns a matrix that transforms from RUB to this …\nReturns a quaternion that rotates from RUB to this …\nCreate new timestamp from seconds since video start.\nInstantiate a new <code>Colormap</code> from a u8 value.\nChooses a coordinate system based on just an up-axis.\nReturns whether or not this coordinate system is left or …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe latitude.\nThe longitude.\nCreate a new position.\nCreate a new plane from a normal and distance.\nCreate a new rotation from an axis and an angle.\nCreate a new translation.\nCreate a new range.\nCreate a new rotation from an axis and an angle.\nCreates a new <code>TensorDimensionIndexSelection</code> from the given …\nCreate a new texture coordinate.\nCreate a new translation.\nCreate a new range.\nConstruct a new <code>ViewCoordinates</code> from an array of <code>ViewDir</code>s.\nPrincipal point of the pinhole camera, i.e. the …\nProject camera-space coordinates into pixel coordinates, …\nThe right-axis.\nReturns an error if this does not span all three …\nThe start of the range.\nThe start of the range.\nThe start of the range.\nThe start of the range.\nReturns a matrix that transforms this coordinate system to …\nReturns a matrix that transforms this coordinate system to …\nThe first coordinate, i.e. index 0.\nScale the same amount along all axis.\nGiven pixel coordinates and a world-space depth, return a …\nThe up-axis.\nReturn the Recording URI contained in this component.\nThe second coordinate, i.e. index 1.\nPrincipal point of the pinhole camera, i.e. the …\nThe x coordinate, i.e. index 0\nThe x coordinate, i.e. index 0\nThe y coordinate, i.e. index 1\nThe y coordinate, i.e. index 1\nThe z coordinate, i.e. index 2\nThe z coordinate, i.e. index 2\nOne of <code>X</code>, <code>Y</code>, <code>Z</code>.\nLeft or right handedness. Used to describe a coordinate …\nLeft-handed coordinate system.\n-X\n-Y\n-Z\n+X\n+Y\n+Z\nRight-handed coordinate system.\nPositive (<code>+</code>) or Negative (<code>-</code>).\nOne of: <code>+X</code>, <code>-X</code>, <code>+Y</code>, <code>-Y</code>, <code>+Z</code>, <code>-Z</code>, i.e. one of the six …\nConvert to a unit-length 3D vector.\nOne of <code>X</code>, <code>Y</code>, <code>Z</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a dimension index to an axis.\nCreate a <code>Handedness</code> from a boolean.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPositive or negative.\nData associated with the blueprint state.\nA ref-counted, inner-mutable handle to a <code>ChunkStore</code>.\nDescribes a column selection to return as part of a query.\nSelect a component based on its <code>EntityPath</code> and …\nThe fully-qualified name of a <code>Component</code>, e.g. …\nThe unique identifier of an entity, e.g. <code>camera/3/points</code>\nA way to filter a set of <code>EntityPath</code>s.\nA set of substitutions for entity paths.\nFill null values using global-scope latest-at semantics.\nNo sparse filling. Nulls stay nulls.\nA ref-counted, inner-mutable handle to a <code>QueryCache</code>.\nA handle to our user-facing query engine.\nDescribes a complete query for Rerun’s dataframe API.\nA handle to a dataframe query, ready to be executed.\nA recording of user-data.\nAn <code>EntityPathFilter</code> with all variables Resolved.\nSpecifies how null values should be filled in the returned …\nKeeps track of handles towards a <code>ChunkStore</code> and its …\nWhat kind of Store this is.\nSelect a time column.\nA 64-bit number describing either nanoseconds, sequence …\nA time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …\nA <code>Chunk</code> that is ready for transport. Obtained by calling …\nThe view contents specify which subset of the database …\nReturns an iterator backed by <code>Self::next_row_batch</code>.\nWhat is the threshold, in bytes, after which a <code>Chunk</code> …\nWhat is the threshold, in rows, after which a <code>Chunk</code> cannot …\nWhat is the threshold, in rows, after which a <code>Chunk</code> cannot …\nSemantic name associated with this data.\nIf <code>true</code> (the default), the store will emit events when its …\nThe path of the entity.\nThe index used to filter out <em>rows</em> from the view contents.\nThe range of index values used to filter out <em>rows</em> from the …\nThe specific index values used to filter out <em>rows</em> from the …\nThe component column used to filter out <em>rows</em> from the view …\nReturns the argument unchanged.\nReturns the argument unchanged.\nLike <code>ChunkStore::from_rrd_filepath</code>, but automatically …\nThis will automatically instantiate a new empty <code>QueryCache</code>.\nWhether the <code>view_contents</code> should ignore columns …\nWhether the <code>view_contents</code> should ignore semantically empty …\nWhether the <code>view_contents</code> should ignore columns …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator backed by <code>Self::next_row_batch</code>.\nReturns an iterator backed by <code>Self::next_row</code>.\nReturns an iterator backed by <code>Self::next_row</code>.\nReturns an iterator over all the <code>EntityPath</code>s present in …\nReturns the next row’s worth of data.\nAsynchronously returns the next row’s worth of data.\nCalls <code>Self::next_row</code> and wraps the result in a …\nHow many rows of data will be returned?\nThe query used to instantiate this handle.\nStarts a new query by instantiating a <code>QueryHandle</code>.\nAll results returned by this handle will strictly follow …\nReturns the full schema of the store.\nReturns the filtered schema for the given <code>QueryExpression</code>.\nAdvance all internal cursors so that the next row yielded …\nDescribes the columns that make up this selection.\nThe specific <em>columns</em> to sample from the final view …\nSpecifies how null values should be filled in the returned …\nThe name of the timeline.\nThe specific index values used to sample <em>rows</em> from the …\nDescribes the columns that make up this view.\nThe subset of the database that the query will run on: a …\nThe name of an <code>Archetype</code>’s field, e.g. <code>positions</code>.\nThe fully-qualified name of an <code>Archetype</code>, e.g. …\nAn array in the arrow columnar format\nDense arrow-based storage of N rows of multi-component …\nImplements an asynchronous batcher that coalesces …\nDefines the different thresholds of the associated …\nErrors that can occur when creating/manipulating a …\nHelper to incrementally build a <code>Chunk</code>.\nThe actual iterator implementation for …\nThe underlying item type for <code>ChunkComponentIter</code>.\nA <code>ChunkComponentSlicer</code> knows how to efficiently slice …\nErrors that can occur when creating/manipulating a <code>Chunk</code>s, …\nA unique ID for a <code>Chunk</code>.\nA simple type alias for an <code>Arc&lt;Chunk&gt;</code>.\nThe fully-qualified name of a <code>Component</code>, e.g. …\nThe unique identifier of an entity, e.g. <code>camera/3/points</code>\nContains the error value\nContains the error value\nA query at a given time, for a given timeline.\nContains the success value\nContains the success value\nError when parsing configuration from environment.\nA single row’s worth of data (i.e. a single log call).\nA query over a time range, for a given timeline.\nA unique ID for a row’s worth of data within a chunk.\nError spawning one of the background threads.\nHelper to incrementally build a <code>TimeColumn</code>.\nErrors when deserializing/parsing/reading a column of time …\nA 64-bit number describing either nanoseconds, sequence …\nA point in time on any number of <code>Timeline</code>s.\nA time frame/space, e.g. <code>log_time</code> or <code>frame_nr</code>, coupled …\nThe name of a timeline. Often something like <code>&quot;log_time&quot;</code> or …\nA <code>Chunk</code> that is ready for transport. Obtained by calling …\nA <code>ChunkShared</code> that is guaranteed to always contain a …\nReturns the array as <code>Any</code> so that it can be downcasted to a …\nSplit a chunk if it contains &gt;= rows than this threshold …\nThe component data.\nReturns a reference to the <code>DataType</code> of this array.\nFlush if the accumulated payload has a size in bytes equal …\nFlush if the accumulated payload has a number of rows …\nDuration of the periodic tick.\nReturns the total number of bytes of memory occupied …\nReturns the total number of bytes of memory pointed to by …\nCallbacks you can install on the <code>ChunkBatcher</code>.")