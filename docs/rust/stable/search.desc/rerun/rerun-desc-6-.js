searchState.loadedDescShard("rerun", 6, "Casts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u64</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>u32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nCasts all elements of <code>self</code> to <code>f32</code>.\nReturns a bitmask with the lowest 2 bits set from the …\nReturns a bitmask with the lowest 3 bits set from the …\nReturns a bitmask with the lowest 4 bits set from the …\nReturns a bitmask with the lowest 3 bits set from the …\nReturns a bitmask with the lowest 4 bits set from the …\n<code>bool</code> vector mask types.\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nReturns a vector containing the smallest integer greater …\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f32::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>f64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i16::clamp</code>.\nComponent-wise clamping of values, similar to <code>i16::clamp</code>.\nComponent-wise clamping of values, similar to <code>i16::clamp</code>.\nComponent-wise clamping of values, similar to <code>u16::clamp</code>.\nComponent-wise clamping of values, similar to <code>u16::clamp</code>.\nComponent-wise clamping of values, similar to <code>u16::clamp</code>.\nComponent-wise clamping of values, similar to <code>i32::clamp</code>.\nComponent-wise clamping of values, similar to <code>i32::clamp</code>.\nComponent-wise clamping of values, similar to <code>i32::clamp</code>.\nComponent-wise clamping of values, similar to <code>u32::clamp</code>.\nComponent-wise clamping of values, similar to <code>u32::clamp</code>.\nComponent-wise clamping of values, similar to <code>u32::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>i64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nComponent-wise clamping of values, similar to <code>u64::clamp</code>.\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no less than <code>min</code> and no …\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no more than <code>max</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector with a length no less than <code>min</code>.\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>==</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;=</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&gt;</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;=</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>&lt;</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns a vector mask containing the result of a <code>!=</code> …\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns the matrix column for the given <code>index</code>.\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns a mutable reference to the matrix column for the …\nReturns the quaternion conjugate of <code>self</code>. For a unit …\nReturns the quaternion conjugate of <code>self</code>. For a unit …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nReturns a vector with signs of <code>rhs</code> and the magnitudes of …\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nComputes the cross product of <code>self</code> and <code>rhs</code>.\nDefault <code>YXZ</code> as yaw (y-axis), pitch (x-axis), roll (z-axis).\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nReturns the determinant of <code>self</code>.\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nComputes the Euclidean distance between two points in …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nCompute the squared euclidean distance between two points …\nDivides a quaternion by a scalar value. The quotient is …\nDivides a quaternion by a scalar value. The quotient is …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nReturns the element-wise quotient of [Euclidean division] …\nDivides a 3x3 matrix by a scalar.\nDivides a 2x2 matrix by a scalar.\nDivides a 3x3 matrix by a scalar.\nDivides a 4x4 matrix by a scalar.\nDivides a 2x2 matrix by a scalar.\nDivides a 3x3 matrix by a scalar.\nDivides a 4x4 matrix by a scalar.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>. The dot product …\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>. The dot product …\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nComputes the dot product of <code>self</code> and <code>rhs</code>.\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nReturns a vector where every component is the dot product …\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the product of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns the sum of all elements of <code>self</code>.\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nReturns a vector containing <code>e^self</code> (the exponential …\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\nCreates a 3D vector from <code>self</code> and the given <code>z</code> value.\nCreates a 4D vector from <code>self</code> and the given <code>w</code> value.\n<code>f32</code> vector, quaternion and matrix types.\n<code>f64</code> vector, quaternion and matrix types.\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the largest integer less than …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns a vector containing the fractional part of the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a quaternion from a 3x3 rotation matrix inside a …\nCreates a quaternion from a 3x3 rotation matrix inside a …\nCreates an affine transform from the given rotation <code>angle</code>.\nCreates an affine transformation matrix from the given 2D …\nCreates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …\nCreates a 2x2 matrix containing a rotation of <code>angle</code> (in …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given rotation <code>angle</code>.\nCreates a 2x2 matrix containing a rotation of <code>angle</code> (in …\nCreates an affine transformation matrix from the given 2D …\nCreates a 2D vector containing <code>[angle.cos(), angle.sin()]</code>. …\nCreates an affine transform from the given 2D rotation …\nCreates an affine transform from the given 2D rotation …\nCreates a new vector mask from a bool array.\nCreates a new vector mask from a bool array.\nCreates a new vector mask from a bool array.\nCreates a new vector mask from a bool array.\nCreates a new vector mask from a bool array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a rotation quaternion from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a rotation quaternion from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates a new vector from an array.\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates an affine transformation matrix containing a 3D …\nCreate a quaternion for a normalized rotation <code>axis</code> and …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from a normalized rotation …\nCreates an affine transformation matrix containing a 3D …\nCreate a quaternion for a normalized rotation <code>axis</code> and …\nCreates an affine transform from three column vectors.\nCreates an affine transform from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates an affine transform from three column vectors.\nCreates an affine transform from three column vectors.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates an affine transform from a <code>[f32; 6]</code> array stored …\nCreates an affine transform from a <code>[f32; 12]</code> array stored …\nCreates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …\nCreates a 2x2 matrix from a <code>[f32; 4]</code> array stored in …\nCreates a 3x3 matrix from a <code>[f32; 9]</code> array stored in …\nCreates a 4x4 matrix from a <code>[f32; 16]</code> array stored in …\nCreates an affine transform from a <code>[f64; 6]</code> array stored …\nCreates an affine transform from a <code>[f64; 12]</code> array stored …\nCreates a 2x2 matrix from a <code>[f64; 4]</code> array stored in …\nCreates a 3x3 matrix from a <code>[f64; 9]</code> array stored in …\nCreates a 4x4 matrix from a <code>[f64; 16]</code> array stored in …\nCreates an affine transform from a <code>[[f32; 2]; 3]</code> 2D array …\nCreates an affine transform from a <code>[[f32; 3]; 4]</code> 3D array …\nCreates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …\nCreates a 2x2 matrix from a <code>[[f32; 2]; 2]</code> 2D array stored …\nCreates a 3x3 matrix from a <code>[[f32; 3]; 3]</code> 3D array stored …\nCreates a 4x4 matrix from a <code>[[f32; 4]; 4]</code> 4D array stored …\nCreates an affine transform from a <code>[[f64; 2]; 3]</code> 2D array …\nCreates an affine transform from a <code>[[f64; 3]; 4]</code> 3D array …\nCreates a 2x2 matrix from a <code>[[f64; 2]; 2]</code> 2D array stored …\nCreates a 3x3 matrix from a <code>[[f64; 3]; 3]</code> 3D array stored …\nCreates a 4x4 matrix from a <code>[[f64; 4]; 4]</code> 4D array stored …\nCreates an affine transform from the first 6 values in …\nCreates an affine transform from the first 12 values in …\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates a 2x2 matrix from the first 4 values in <code>slice</code>.\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates a 4x4 matrix from the first 16 values in <code>slice</code>.\nCreates an affine transform from the first 6 values in …\nCreates an affine transform from the first 12 values in …\nCreates a 2x2 matrix from the first 4 values in <code>slice</code>.\nCreates a 3x3 matrix from the first 9 values in <code>slice</code>.\nCreates a 4x4 matrix from the first 16 values in <code>slice</code>.\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 2x2 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3x3 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 4x4 matrix with its diagonal set to <code>diagonal</code> and …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a affine transformation matrix containing a …\nCreates a quaternion from the given Euler rotation …\nCreates a 3D rotation matrix from the given euler rotation …\nCreates a affine transformation matrix containing a …\nCreates a quaternion from the given Euler rotation …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transformation matrix from the given 2x2 …\nCreates an affine transform from a 2x2 matrix (expressing …\nCreates an affine transform from a 2x2 matrix (expressing …\nThe given <code>Mat3</code> must be an affine transform,\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 rotation matrix.\nThe given <code>DMat3</code> must be an affine transform,\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 rotation matrix.\nCreates an affine transform from a 3x3 matrix (expressing …\nCreates an affine transform from a 3x3 matrix (expressing …\nThe given <code>Mat3A</code> must be an affine transform,\nCreates a 2x2 matrix from a 3x3 matrix, discarding the 2nd …\nCreates an affine transformation matrix from the given 3x3 …\nCreates a quaternion from a 3x3 SIMD aligned rotation …\nThe given <code>Mat4</code> must be an affine transform, i.e. contain …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nCreates a quaternion from a 3x3 rotation matrix inside a …\nThe given <code>DMat4</code> must be an affine transform, i.e. contain …\nCreates a 3x3 matrix from a 4x4 matrix, discarding the 4th …\nCreates a quaternion from a 3x3 rotation matrix inside a …\nCreates an affine transform from the given <code>rotation</code> …\nCreates a 3D rotation matrix from the given quaternion.\nCreates a 3D rotation matrix from the given quaternion.\nCreates an affine transformation matrix from the given …\nCreates an affine transform from the given <code>rotation</code> …\nCreates a 3D rotation matrix from the given quaternion.\nCreates an affine transformation matrix from the given …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to <code>to</code>.  …\nGets the minimal rotation for transforming <code>from</code> to either …\nGets the minimal rotation for transforming <code>from</code> to either …\nCreates an affine transform from the given 3D <code>rotation</code> and …\nCreates an affine transformation matrix from the given 3D …\nCreates an affine transform from the given 3D <code>rotation</code> and …\nCreates an affine transformation matrix from the given 3D …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform containing a 3D rotation …\nCreates a 3D rotation matrix from <code>angle</code> (in radians) …\nCreates an affine transformation matrix containing a 3D …\nCreates a quaternion from the <code>angle</code> (in radians) around …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transformation matrix from the given …\nCreates an affine transformation matrix from the given …\nCreates an affine transformation matrix containing the …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transform that changes scale. Note that …\nCreates an affine transformation matrix from the given …\nCreates an affine transformation matrix containing the …\nCreates a 2x2 matrix containing the combining non-uniform …\nCreates a 2x2 matrix containing the combining non-uniform …\nCreates an affine transform from the given 2D <code>scale</code>, …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given 2D <code>scale</code>, …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transform from the given 3D <code>scale</code>, …\nCreates an affine transformation matrix from the given 3D …\nCreates an affine transform from the given 3D <code>scale</code>, …\nCreates an affine transformation matrix from the given 3D …\nCreate a quaternion that rotates <code>v.length()</code> radians around …\nCreate a quaternion that rotates <code>v.length()</code> radians around …\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a rotation quaternion from a slice.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a rotation quaternion from a slice.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates a vector from the first 2 values in <code>slice</code>.\nCreates a vector from the first 3 values in <code>slice</code>.\nCreates a vector from the first 4 values in <code>slice</code>.\nCreates an affine transformation from the given 2D …\nCreates an affine transformation from the given 3D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 3D …\nCreates an affine transformation from the given 2D …\nCreates an affine transformation from the given 3D …\nCreates an affine transformation matrix from the given 2D …\nCreates an affine transformation matrix from the given 3D …\nCreates a new rotation quaternion from a 4D vector.\nCreates a <code>Vec3A</code> from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code> …\nCreates a new rotation quaternion from a 4D vector.\nCreates a new rotation quaternion.\nCreates a new rotation quaternion.\n<code>i16</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\n<code>i32</code> vector types.\n<code>i64</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn the inverse of this transform.\nReturn the inverse of this transform.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of a normalized quaternion.\nReturn the inverse of this transform.\nReturn the inverse of this transform.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of <code>self</code>.\nReturns the inverse of a normalized quaternion.\nReturns <code>v</code> normalized to the range <code>[a, b]</code>.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite.\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite. If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if, and only if, all elements are finite.  If …\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nReturns <code>true</code> if any elements are <code>NaN</code>.\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nPerforms <code>is_nan</code> on each element of self, returning a …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns a bitmask with the lowest 2 bits set to the sign …\nReturns a bitmask with the lowest 3 bits set to the sign …\nReturns a bitmask with the lowest 4 bits set to the sign …\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> of length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> of length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nReturns whether <code>self</code> is length <code>1.0</code> or not.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes the length of <code>self</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes <code>1.0 / length()</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nComputes the squared length of <code>self</code>.\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nPerforms a linear interpolation between <code>self</code> and <code>rhs</code> based …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a left-handed view transform using a camera …\nCreates a left-handed view matrix using a camera position, …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a right-handed view transform using a camera …\nCreates a right-handed view matrix using a camera …\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns a vector containing the maximum values for each …\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nReturns the horizontal maximum of <code>self</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nCalculates the midpoint between <code>self</code> and <code>rhs</code>.\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns a vector containing the minimum values for each …\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nReturns the horizontal minimum of <code>self</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMoves towards <code>rhs</code> based on the value <code>d</code>.\nMultiplies a quaternion and a 3D vector, returning the …\nMultiplies a quaternion by a scalar value.\nMultiplies two quaternions. If they each represent a …\nMultiplies a quaternion by a scalar value.\nMultiplies two quaternions. If they each represent a …\nMultiplies a quaternion and a 3D vector, returning the …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nFused multiply-add. Computes <code>(self * a) + b</code> element-wise …\nMultiplies two quaternions. If they each represent a …\nMultiplies two quaternions. If they each represent a …\nMultiplies two 2x2 matrices.\nMultiplies two 2x2 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 3x3 matrices.\nMultiplies two 4x4 matrices.\nMultiplies two 4x4 matrices.\nMultiplies two quaternions. If they each represent a …\nMultiplies two quaternions. If they each represent a …\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 2x2 matrix by a scalar.\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 4x4 matrix by a scalar.\nMultiplies a 2x2 matrix by a scalar.\nMultiplies a 3x3 matrix by a scalar.\nMultiplies a 4x4 matrix by a scalar.\nTransforms a 2D vector.\nTransforms a 2D vector.\nTransforms a 3D vector.\nTransforms a 3D vector.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a 3D vector.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a <code>Vec3A</code>.\nTransforms a <code>Vec3A</code>.\nMultiplies a quaternion and a 3D vector, returning the …\nTransforms a 4D vector.\nTransforms a 4D vector.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector mask.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nCreates a new vector.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0.\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nCreates a left-handed orthographic projection matrix with …\nCreates a left-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nCreates a right-handed orthographic projection matrix with …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nReturns a vector that is equal to <code>self</code> rotated by 90 …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nThe perpendicular dot product of <code>self</code> and <code>rhs</code>. Also known …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite left-handed perspective projection …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite reverse right-handed perspective …\nCreates an infinite right-handed perspective projection …\nCreates an infinite right-handed perspective projection …\nCreates a left-handed perspective projection matrix with …\nCreates a left-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with …\nCreates a right-handed perspective projection matrix with […\nCreates a right-handed perspective projection matrix with […\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns a vector containing each element of <code>self</code> raised to …\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nReturns the vector projection of <code>self</code> onto <code>rhs</code>.\nTransforms the given 3D vector as a point, applying …\nTransforms the given 3D vector as a point, applying …\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns a vector containing the reciprocal <code>1.0/n</code> of each …\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the vector rejection of <code>self</code> from <code>rhs</code>.\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nReturns the element-wise remainder of Euclidean division …\nRemap <code>self</code> from the input range to the output range.\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nReturns <code>rhs</code> rotated by the angle of <code>self</code>. If <code>self</code> is …\nRotates towards <code>rhs</code> up to <code>max_angle</code> (in radians).\nRotates towards <code>rhs</code> up to <code>max_angle</code> (in radians).\nRotates towards <code>rhs</code> up to <code>max_angle</code> (in radians).\nRotates towards <code>rhs</code> up to <code>max_angle</code> (in radians).\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns a vector containing the nearest integer to a …\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns the matrix row for the given <code>index</code>.\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nReturns a vector containing the saturating addition of <code>self</code>…\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nIn other words this computes …\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating division of <code>self</code>…\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating multiplication …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nReturns a vector containing the saturating subtraction of …\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nCreates a vector from the elements in <code>if_true</code> and <code>if_false</code>…\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nSets the element at <code>index</code>.\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nReturns a vector with elements representing the sign of …\nPerforms a spherical linear interpolation between <code>self</code> and …\nPerforms a spherical linear interpolation between <code>self</code> and …\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector mask with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nCreates a vector with all elements set to <code>v</code>.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nSubtracts the <code>rhs</code> quaternion from <code>self</code>.\nSubtracts two 2x2 matrices.\nSubtracts two 2x2 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 3x3 matrices.\nSubtracts two 4x4 matrices.\nSubtracts two 4x4 matrices.\nTraits adding swizzle methods to all vector types.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nTests the value at <code>index</code>.\nReturns the angle (in radians) of this vector in the range …\nReturns the angle (in radians) of this vector in the range …\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\n<code>[x, y]</code>\n<code>[x, y, z]</code>\n<code>[x, y, z, w]</code>\nReturns the rotation axis (normalized) and angle (in …\nReturns the rotation axis (normalized) and angle (in …\nCreates a <code>[f32; 6]</code> array storing data in column major …\nCreates a <code>[f32; 12]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 4]</code> array storing data in column major …\nCreates a <code>[f32; 9]</code> array storing data in column major …\nCreates a <code>[f32; 16]</code> array storing data in column major …\nCreates a <code>[f64; 6]</code> array storing data in column major …\nCreates a <code>[f64; 12]</code> array storing data in column major …\nCreates a <code>[f64; 4]</code> array storing data in column major …\nCreates a <code>[f64; 9]</code> array storing data in column major …\nCreates a <code>[f64; 16]</code> array storing data in column major …\nCreates a <code>[[f32; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f32; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f32; 4]; 4]</code> 4D array storing data in column …\nCreates a <code>[[f64; 2]; 3]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 4]</code> 3D array storing data in column …\nCreates a <code>[[f64; 2]; 2]</code> 2D array storing data in column …\nCreates a <code>[[f64; 3]; 3]</code> 3D array storing data in column …\nCreates a <code>[[f64; 4]; 4]</code> 4D array storing data in column …\nReturns the rotation angles for the given euler rotation …\nReturns the rotation angles for the given euler rotation …\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>angle</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>.\nExtracts <code>scale</code>, <code>rotation</code> and <code>translation</code> from <code>self</code>. The …\nReturns the rotation axis scaled by the rotation in …\nReturns the rotation axis scaled by the rotation in …\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 2D vector as a point.\nTransforms the given 2D point, applying shear, scale, …\nTransforms the given 2D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given 3D points, applying shear, scale, …\nTransforms the given 3D vector as a point.\nTransforms the given <code>Vec3A</code>, applying shear, scale, …\nTransforms the given <code>Vec3A</code> as 3D point.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nRotates the given 2D vector.\nTransforms the given 2D vector, applying shear, scale and …\nRotates the given 2D vector.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given 3D vector, applying shear, scale and …\nTransforms the give 3D vector as a direction.\nTransforms the given <code>Vec3A</code>, applying shear, scale and …\nTransforms the give <code>Vec3A</code> as 3D vector.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns the transpose of <code>self</code>.\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nFor element <code>i</code> of <code>self</code>, return <code>v[i].trunc()</code>\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nReturns a vector containing the integer part each element …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nCreates a 2D vector from the <code>x</code> and <code>y</code> elements of <code>self</code>, …\nCreates a 3D vector from the <code>x</code>, <code>y</code> and <code>z</code> elements of <code>self</code>, …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\nReturns <code>self</code> normalized to length 1.0 if possible, else …\n<code>u16</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\n<code>u32</code> vector types.\n<code>u64</code> vector types.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>w</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>x</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 2D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>y</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 3D vector from <code>self</code> with the given value of <code>z</code>.\nCreates a 4D vector from <code>self</code> with the given value of <code>z</code>.\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping addition of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping division of <code>self</code> …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping multiplication of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nReturns a vector containing the wrapping subtraction of …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the columns of <code>self</code> to the first 6 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 12 elements in …\nWrites the columns of <code>self</code> to the first 4 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 9 elements in <code>slice</code>…\nWrites the columns of <code>self</code> to the first 16 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the quaternion to an unaligned slice.\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nWrites the elements of <code>self</code> to the first 2 elements in …\nWrites the elements of <code>self</code> to the first 3 elements in …\nWrites the elements of <code>self</code> to the first 4 elements in …\nReturns the vector part of the quaternion.\nReturns the vector part of the quaternion.\nA 2-dimensional <code>bool</code> vector mask.\nA 3-dimensional <code>bool</code> vector mask.\nA 3-dimensional SIMD vector mask.\nA 4-dimensional <code>bool</code> vector mask.\nA 4-dimensional SIMD vector mask.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2D affine transform, which can represent translation, …\nA 3D affine transform, which can represent translation, …\nA 2x2 column major matrix.\nA 3x3 column major matrix.\nA 4x4 column major matrix.\nA quaternion representing an orientation.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2x2 matrix from two column vectors.\nCreates a 3x3 matrix from three column vectors.\nCreates a 4x4 matrix from four column vectors.\nCreates a quaternion from <code>x</code>, <code>y</code>, <code>z</code> and <code>w</code> values.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nA 2-dimensional vector.\nA 3-dimensional vector.\nA 4-dimensional vector.\nCreates a 2-dimensional vector.\nCreates a 3-dimensional vector.\nCreates a 4-dimensional vector.\nPixel is 8-bit alpha\n<code>AnimationDecoder</code> trait\nAn Image in AVIF Format\nPixel contains 8-bit B, G and R channels\nPixel is 8-bit BGR with an alpha channel\nAn Image in BMP Format\nThe number of channels of this pixel type.\nA string that can help to interpret the meaning each …\nThis pixel has the format of one of the predefined …\nPixel is 8-bit CMYK\nAn enumeration over supported color types and bit depths\nThe maximum value for this type of primitive within the …\nThe minimum value for this type of primitive within the …\nAn Image in DDS Format\nAn error was encountered while decoding.\nThe delay of a frame relative to the previous one.\nA Dynamic Image\nTypes which are safe to treat as an immutable byte slice …\nAn error was encountered while encoding.\nContains the error value\nAn enumeration of color types encountered in image formats.\nAn Image in farbfeld Format\nA flat buffer over a (multi channel) image.\nA single animation frame\nAn implementation dependent iterator, reading the frames …\nA trait for manipulating images.\nTrait to inspect an image.\nAn Image in GIF Format\nSendable grayscale + alpha channel image buffer\nSendable grayscale image buffer\nAn Image in Radiance HDR Format\nAn Image in ICO Format\nGeneric image buffer\nThe trait that all decoders implement\nSpecialized image decoding not be supported by all formats\nThe trait all encoders implement\nThe generic error type for image operations.\nAn enumeration of supported image formats. Not all formats …\nEach pixel in this image is 16-bit Luma\nEach pixel in this image is 8-bit Luma\nEach pixel in this image is 16-bit Luma with alpha\nEach pixel in this image is 8-bit Luma with alpha\nA multi-format image reader.\nResult of an image decoding/encoding process\nEach pixel in this image is 16-bit Rgb\nEach pixel in this image is 32-bit float Rgb\nEach pixel in this image is 8-bit Rgb\nEach pixel in this image is 16-bit Rgb with alpha\nEach pixel in this image is 32-bit float Rgb with alpha\nEach pixel in this image is 8-bit Rgb with alpha\nAn error occurred while interacting with the environment.\nAn Image in JPEG Format\nPixel is 1-bit luminance\nPixel is 16-bit luminance\nPixel is 16-bit luminance\nPixel is 2-bit luminance\nPixel is 4-bit luminance\nPixel is 8-bit luminance\nPixel is 8-bit luminance\nPixel is 1-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 16-bit luminance with an alpha channel\nPixel is 2-bit luminance with an alpha channel\nPixel is 4-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nPixel is 8-bit luminance with an alpha channel\nSet of supported strict limits for a decoder.\nResource limits for decoding.\nCompleting the operation would have required more …\nGrayscale colors.\nGrayscale colors + alpha channel\nContains the success value\nAn Image in OpenEXR Format\nAn error was encountered in input arguments.\nA generalized pixel.\nThe type of pixel.\nThe pixel with an associated <code>ColorType</code>. Not all possible …\nImmutable pixel iterator\nAn Image in PNG Format\nAn Image in general PNM Format\nThe type of each channel in a pixel. For example, this can …\nAn Image in QOI Format\nRGB colors.\nPixel contains 1-bit R, G and B channels\nPixel is 16-bit RGB\nPixel contains 16-bit R, G and B channels\nPixel contains 2-bit R, G and B channels\nPixel is 32-bit float RGB\nPixel is 32-bit float RGB\nAn image buffer for 32-bit float RGB pixels, where the …\nPixel contains 4-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nPixel contains 8-bit R, G and B channels\nSendable Rgb image buffer\nRGB colors + alpha channel\nPixel is 1-bit RGB with an alpha channel\nPixel is 16-bit RGBA\nPixel is 16-bit RGB with an alpha channel\nPixel is 2-bit RGB with an alpha channel\nPixel is 32-bit float RGBA\nPixel is 32-bit float RGBA\nAn image buffer for 32-bit float RGBA pixels, where the …\nPixel is 4-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nPixel is 8-bit RGB with an alpha channel\nSendable Rgb + alpha channel image buffer\nA View into another image\nThe scalar type that is used to store each channel in this …\nAn Image in TGA Format\nAn Image in TIFF Format\nPixel is of unknown color type with the specified bits per …\nAn operation can not be completed by the chosen …\nAn Image in WEBP Format\nAdjust the contrast of this image. <code>contrast</code> is the amount …\nReturn all <code>ImageFormat</code>s\nApply the function <code>f</code> to each channel of this pixel.\nApply the function <code>f</code> to each channel of this pixel and …\nRotates and/or flips the image as indicated by Orientation.\nApply the function <code>f</code> to each channel except the alpha …\nApply the function <code>f</code> to each channel except the alpha …\nGet the bytes of this value.\nReturn this image’s pixels as a native endian byte slice.\nReturn a view on the raw sample buffer.\nReturn a view on the raw sample buffer for 32bit per …\nReturn a mutable view on the raw sample buffer.\nReturn a view on the raw sample buffer for 16 bit per …\nReturn a view on the raw sample buffer for 8 bit per …\nReturn a reference to an 16bit Grayscale image\nReturn a reference to an 8bit Grayscale image\nReturn a reference to an 16bit Grayscale image with an …\nReturn a reference to an 8bit Grayscale image with an …\nGet a mutable reference based version.\nReturn a mutable reference to an 16bit Grayscale image\nReturn a mutable reference to an 8bit Grayscale image\nReturn a mutable reference to an 16bit Grayscale image …\nReturn a mutable reference to an 8bit Grayscale image with …\nReturn a mutable reference to an 16bit RGB image\nReturn a mutable reference to an 32bit RGB image\nReturn a mutable reference to an 8bit RGB image\nReturn a mutable reference to an 16bit RGBA image\nReturn a mutable reference to an 16bit RGBA image\nReturn a mutable reference to an 8bit RGBA image\nView the samples as a slice.\nReturns the underlying raw buffer\nGet a reference based version.\nReturn a reference to an 16bit RGB image\nReturn a reference to an 32bit RGB image\nReturn a reference to an 8bit RGB image\nReturn a reference to an 16bit RGBA image\nReturn a reference to an 32bit RGBA image\nReturn a reference to an 8bit RGBA image\nView the samples as a slice.\nView this buffer as an image over some type of pixel.\nInterpret this buffer as a mutable image.\nView this buffer but keep mutability at a sample level.\nReturns the number of bits contained in a pixel of …\nReturns the number of bits per pixel for this color type.\nBlend the color of a given pixel into ourself, taking into …\nPut a pixel at location (x, y), taking into account alpha …\nPut a pixel at location (x, y), taking into account alpha …\nPerforms a Gaussian blur on this image. <code>sigma</code> is a measure …\nTuple of bounds in the order of coordinate inputs.\nBrighten the pixels of this image. <code>value</code> is the amount to …\nIterators and other auxiliary structure for the <code>ImageBuffer</code>…\nReturns the image buffer\nReturns a mutable image buffer\nReturns the number of bytes contained in a pixel of …\nReturn if the <code>ImageFormat</code> can be decoded by the lib.\nReturn if the <code>ImageFormat</code> can be encoded by the lib.\nChange the coordinates of this subimage.\nReturns the number of color channels that make up this …\nGet the number of channels for colors of this type.\nReturns the components as a slice.\nReturns the channels of this pixel as a 4 tuple. If the …\nReturns the components as a mutable slice\nThis function checks the <code>max_image_width</code> and …\nThis function checks that all currently set strict limits …\nRemove the current information on the image format.\nEncoding and decoding for various image file formats.\nSteps through the iterator from the current frame until …\nReturn this image’s color type.\nSupplementary color information.\nReturns the color type of the image data produced by this …\nExamples\nCopies all of the pixels from another image into this …\nCopies all of the pixels from one part of this image to …\nReturn a cut-out of this image delimited by the bounding …\nReturn a cut-out of this image delimited by the bounding …\nRead the image (replaces <code>load</code>).\nDelay of this frame\nReturns a tuple containing the width and height of the …\nThe width and height of this image.\nThe width and height of this image.\nEnumerates over the pixels of the image. The iterator …\nEnumerates over the pixels of the image. The iterator …\nEnumerates over the rows of the image. The iterator yields …\nEnumerates over the rows of the image. The iterator yields …\nContains detailed error representation.\nReturns the raw Exif chunk, if it is present. A …\nExpands a color palette by re-using the existing buffer. …\nReturn a list of applicable extensions for this format.\nGet the dimensions <code>(channels, width, height)</code>.\nPerforms a fast blur on this image. <code>sigma</code> is the standard …\nFilters this image with the specified 3x3 kernel.\nCheck if a buffer of length <code>len</code> is large enough.\nImage representations for ffi.\nFlip this image horizontally\nFlip this image vertically\nGet the currently determined format.\nThis function increases the <code>max_alloc</code> limit with amount. …\nThis function acts identically to <code>free</code>, but takes a <code>usize</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a pixel from the 4 channels a, b, c and d. If …\nDecodes an encoded image into a dynamic image.\nReturn the image format specified by a path’s file …\nConstructs a new <code>ImageBuffer</code> by repeated application of …\nReturn the image format specified by a MIME type.\nCreate a delay from a ratio of milliseconds.\nConstructs a new frame\nReturn the image format specified by the path’s file …\nConstructs a new <code>ImageBuffer</code> by copying a pixel\nConstructs a buffer from a generic container (for example …\nConvert from a duration, clamped between 0 and an …\nReturns a view into a slice.\nReturns mutable view into a mutable slice.\nCreates an image buffer out of an existing buffer. Returns …\nGet a mutable reference to a single sample.\nReturns the pixel located at (x, y). Indexed from top left.\nGets a reference to the pixel at location <code>(x, y)</code>\nGets a reference to the pixel at location <code>(x, y)</code> or …\nGets a reference to the mutable pixel at location <code>(x, y)</code>. …\nGets a reference to the mutable pixel at location <code>(x, y)</code>\nDo not use is function: It is unimplemented!\nGets a reference to the mutable pixel at location <code>(x, y)</code> …\nGet a reference to a single sample.\nReturn a grayscale version of this image. Returns <code>Luma</code> …\nGuess image format from memory block\nIf there are any samples aliasing each other.\nReturns if there is an alpha channel.\nReturns false if the color scheme is grayscale, true …\nThe height of this image.\nThe height of this image.\nReturns the height of the underlying image\nHue rotate the supplied image. <code>value</code> is the degrees to …\nReturns the ICC color profile embedded in the image, or …")