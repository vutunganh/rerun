searchState.loadedDescShard("rerun", 2, "<code>Y_U_V16</code> is a YUV 4:2:2 fully planar YUV format without …\n<code>Y_U_V24</code> is a YUV 4:4:4 fully planar YUV format without …\n<code>Y_U_V24</code> is a YUV 4:4:4 fully planar YUV format without …\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nThe zero vector, i.e. the additive identity.\nThe Z^X plane with normal = +Y.\nAbsolute length of the range.\nHow much to rotate around the axis.\nReturns the timestamp as nanoseconds.\nReturns the timestamp as seconds.\nAxis to rotate around.\nThe content/data.\nThe raw bytes representing the UUID.\nThe data type of each channel (e.g. the red channel) of …\nThe value: class name, color, etc.\nThe key: the <code>components::ClassId</code>.\nReturns the matrix column for the given <code>index</code>.\nThe color that will be applied to the annotated entity.\nThe color model represented by this image format.\nL, RGB, RGBA, …\nThe datatype represented by this image format.\nCreate a new depth image format with the given resolution …\nThe dimension number to select.\nThe dimension number to select.\nThe distance of the plane from the origin (in multiples of …\nHigh time boundary for sequence timeline.\nReturns the correct time assuming this boundary is an end …\nThe first string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new image format from a color model and datatype.\nCreate new timestamp from nanoseconds since video start.\nFrom a speicifc pixel format.\nDetermine if the image format has an alpha channel.\nThe height of the image in pixels.\n<code>datatypes::ClassId</code> or <code>datatypes::KeypointId</code> to which this …\nThe index along the dimension to use.\nThe <code>datatypes::AnnotationInfo</code> for the class.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInvert the direction of the dimension.\nDetermine if the image format represents floating point …\nThe first point of the pair.\nThe second point of the pair.\nThe <code>datatypes::AnnotationInfo</code> for all of the keypoints.\nThe connections between keypoints.\nThe label that will be shown in the UI.\nThe names of the dimensions of the tensor (optional).\nCreate a new vector.\nCreate a new plane from a normal and distance.\nCreate a new vector.\nCreate a new vector.\nCreate a new vector.\nThe normal of the plane (unnormalized if the plane is …\nNumber of bytes for the whole image.\nUsed mainly for chroma downsampled formats and differing …\nAngle in radians. One turn is equal to 2π (or τ) radians.\nTime range to use for this timeline.\nCreate a new rgb image format with 8 bit per channel with …\nCreate a new rgba image format with 8 bit per channel with …\nThe second string.\nCreate a new segmentation image format with the given …\nAssign a new x\nAssign a new y\nThe shape of the tensor, i.e. the length of each dimension.\nReturns a new <code>Blob</code> that is a slice of this buffer starting …\nLow time boundary for sequence timeline.\nReturns the time assuming this boundary is a start …\nName of the timeline this applies to.\nThe w-coordinate, i.e. index 3.\nThe width of the image in pixels.\nThe x-coordinate, i.e. index 0.\nThe x-coordinate, i.e. index 0.\nThe x-coordinate, i.e. index 0.\nThe x-coordinate, i.e. index 0.\nThe range of the X-axis (usually left and right bounds).\nThe y-coordinate, i.e. index 1.\nThe y-coordinate, i.e. index 1.\nThe y-coordinate, i.e. index 1.\nThe y-coordinate, i.e. index 1.\nThe range of the Y-axis (usually top and bottom bounds).\nThe z-coordinate, i.e. index 2.\nThe z-coordinate, i.e. index 2.\nA linear interpolator that bounces between <code>a</code> and <code>b</code> as <code>t</code> …\nCreate a spiral of points with colors along the Z axis.\nReturns sRGB polynomial approximation from Turbo color …\nGiven two 3D vectors <code>from</code> and <code>to</code>, linearly interpolates …\nLinear interpolator.\nLinearly interpolates from <code>a</code> through <code>b</code> in <code>n</code> steps, …\nAtomic types.\nCreates a new scope for spawning threads.\nSelects from a set of channel operations.\nThread synchronization primitives.\nThreads that can borrow variables from the stack.\nMiscellaneous utilities.\nA thread-safe mutable memory location.\nTrait which allows reading from primitive atomic types …\nType returned by <code>load_consume</code>.\nReturns a raw pointer to the underlying data in this …\nIf the current value equals <code>current</code>, stores <code>new</code> into the …\nIf the current value equals <code>current</code>, stores <code>new</code> into the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nIncrements the current value by <code>val</code> and returns the …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies logical “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nApplies bitwise “and” to the current value and returns …\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the maximum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nCompares and sets the minimum of the current value and <code>val</code>,\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies logical “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “nand” to the current value and …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies logical “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nApplies bitwise “or” to the current value and returns …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nDecrements the current value by <code>val</code> and returns the …\nFetches the value, and applies a function to it that …\nApplies logical “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nApplies bitwise “xor” to the current value and returns …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConsumes the atomic and returns the contained value.\nReturns <code>true</code> if operations on values of this type are …\nLoads a value from the atomic cell.\nLoads a value from the atomic using a “consume” memory …\nCreates a new atomic cell initialized with <code>val</code>.\nStores <code>val</code> into the atomic cell.\nStores <code>val</code> into the atomic cell and returns the previous …\nTakes the value of the atomic cell, leaving …\nThe message could not be sent because the channel is …\nThe message could not be sent because the channel is …\nThe message could not be received because the channel is …\nThe message could not be received because the channel is …\nA message could not be received because the channel is …\nThe message could not be sent because the channel is full.\nA blocking iterator over messages in a channel.\nA blocking iterator over messages in a channel.\nAn error returned from the <code>ready_timeout</code> method.\nThe receiving side of a channel.\nAn error returned from the <code>recv</code> method.\nAn error returned from the <code>recv_timeout</code> method.\nSelects from a set of channel operations.\nAn error returned from the <code>select_timeout</code> method.\nA selected operation that needs to be completed.\nAn error returned from the <code>send</code> method.\nAn error returned from the <code>send_timeout</code> method.\nThe sending side of a channel.\nThe message could not be sent because the channel is full …\nA message could not be received because the channel is …\nA non-blocking iterator over messages in a channel.\nAn error returned from the <code>try_ready</code> method.\nAn error returned from the <code>try_recv</code> method.\nAn error returned from the <code>try_select</code> method.\nAn error returned from the <code>try_send</code> method.\nCreates a receiver that delivers a message after a certain …\nCreates a receiver that delivers a message at a certain …\nCreates a channel of bounded capacity.\nIf the channel is bounded, returns its capacity.\nIf the channel is bounded, returns its capacity.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the index of the selected operation.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwraps the message.\nUnwraps the message.\nUnwraps the message.\nReturns <code>true</code> if the send operation failed because the …\nReturns <code>true</code> if the send operation failed because the …\nReturns <code>true</code> if the receive operation failed because the …\nReturns <code>true</code> if the receive operation failed because the …\nReturns <code>true</code> if the channel is empty.\nReturns <code>true</code> if the channel is empty.\nReturns <code>true</code> if the receive operation failed because the …\nReturns <code>true</code> if the channel is full.\nReturns <code>true</code> if the channel is full.\nReturns <code>true</code> if the send operation failed because the …\nReturns <code>true</code> if the send operation timed out.\nReturns <code>true</code> if the receive operation timed out.\nA blocking iterator over messages in the channel.\nReturns the number of messages in the channel.\nReturns the number of messages in the channel.\nCreates a receiver that never delivers messages.\nCreates an empty list of channel operations for selection.\nBlocks until one of the operations becomes ready.\nBlocks until a given deadline, or until one of the …\nBlocks for a limited time until one of the operations …\nBlocks the current thread until a message is received or …\nAdds a receive operation.\nCompletes the receive operation.\nWaits for a message to be received from the channel, but …\nWaits for a message to be received from the channel, but …\nRemoves a previously added operation.\nReturns <code>true</code> if senders belong to the same channel.\nReturns <code>true</code> if receivers belong to the same channel.\nBlocks until one of the operations becomes ready and …\nSelects from a set of channel operations.\nSelects from a set of channel operations.\nBlocks until a given deadline, or until one of the …\nBlocks for a limited time until one of the operations …\nBlocks the current thread until a message is sent or the …\nAdds a send operation.\nCompletes the send operation.\nWaits for a message to be sent into the channel, but only …\nWaits for a message to be sent into the channel, but only …\nCreates a receiver that delivers messages periodically.\nA non-blocking iterator over messages in the channel.\nAttempts to find a ready operation without blocking.\nAttempts to receive a message from the channel without …\nAttempts to select one of the operations without blocking.\nAttempts to send a message into the channel without …\nCreates a channel of unbounded capacity.\nThe queue was empty at the time of stealing.\nAn injector queue.\nThe steal operation needs to be retried.\nPossible outcomes of a steal operation.\nA stealer handle of a worker queue.\nAt least one task was successfully stolen.\nA worker queue.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConsumes items until a <code>Success</code> is found and returns it.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the queue is empty.\nReturns <code>true</code> if the queue is empty.\nReturns <code>true</code> if the queue is empty.\nReturns <code>true</code> if the queue was empty at the time of …\nReturns <code>true</code> if the steal operation needs to be retried.\nReturns <code>true</code> if at least one task was stolen.\nReturns the number of tasks in the deque.\nReturns the number of tasks in the deque.\nReturns the number of tasks in the queue.\nCreates a new injector queue.\nCreates a FIFO worker queue.\nCreates a LIFO worker queue.\nIf no task was stolen, attempts another steal operation.\nPops a task from the queue.\nPushes a task into the queue.\nPushes a task into the queue.\nSteals a task from the queue.\nSteals a task from the queue.\nSteals a batch of tasks and pushes them into another …\nSteals a batch of tasks and pushes them into a worker.\nSteals a batch of tasks, pushes them into another worker, …\nSteals a batch of tasks, pushes them into a worker, and …\nSteals no more than <code>limit</code> of tasks and pushes them into …\nSteals no more than of tasks and pushes them into a worker.\nSteals no more than <code>limit</code> of tasks, pushes them into …\nSteals no more than <code>limit</code> of tasks, pushes them into a …\nCreates a stealer for this queue.\nReturns the result of the operation, if successful.\nThe alignment of pointer.\nAn atomic pointer that can be safely shared between …\nAn epoch-based garbage collector.\nThe error returned on failed compare-and-set operation.\nMemory orderings for compare-and-set operations.\nThe error returned on failed compare-and-swap operation.\nA guard that keeps the current thread pinned.\nThe type for initializers.\nA handle to a garbage collector.\nAn owned heap-allocated object.\nTypes that are pointed to by a single word.\nA trait for either <code>Owned</code> or <code>Shared</code> pointers.\nA pointer to an object protected by the epoch GC.\nConverts the pointer to a raw pointer (without the tag).\nConverts the pointer to a reference.\nReturns a copy of the atomic value.\nCreates another reference to the same garbage collector.\nReturns the <code>Collector</code> associated with this handle.\nReturns the <code>Collector</code> associated with this guard.\nStores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …\nStores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …\nStores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …\nStores the pointer <code>new</code> (either <code>Shared</code> or <code>Owned</code>) into the …\nThe value in the atomic pointer at the time of the failed …\nThe value in the atomic pointer at the time of the failed …\nReturns the default global collector.\nStores a function so that it can be executed at some point …\nStores a destructor for an object so that it can be …\nStores a function so that it can be executed at some point …\nDereferences the given pointer.\nDereferences the pointer.\nMutably dereferences the given pointer.\nDereferences the pointer.\nDrops the object pointed to by the given pointer.\nChecks if both handles point to the same collector.\nThe ordering of the operation when it fails.\nBitwise “and” with the current tag.\nBitwise “or” with the current tag.\nFetches the pointer, and then applies a function to it …\nBitwise “xor” with the current tag.\nClears up the thread-local cache of deferred functions by …\nReturns the argument unchanged.\nReturns a new atomic pointer pointing to <code>ptr</code>.\nReturns the argument unchanged.\nReturns a new atomic pointer pointing to <code>owned</code>.\nReturns a new atomic pointer pointing to <code>raw</code>.\nReturns a new owned pointer pointing to <code>b</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new pointer pointing to <code>raw</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new owned pointer pointing to <code>raw</code>.\nReturns a new pointer pointing to the tagged pointer <code>data</code>.\nReturns a new pointer pointing to the tagged pointer <code>data</code>.\nInitializes a with the given initializer.\nAllocates <code>value</code> on the heap and returns a new atomic …\nAllocates <code>value</code> on the heap and returns a new owned …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts the owned pointer into a <code>Box</code>.\nTakes ownership of the pointee.\nTakes ownership of the pointee.\nConverts the owned pointer into a <code>Shared</code>.\nReturns the machine representation of the pointer.\nReturns <code>true</code> if the pointer is null.\nReturns <code>true</code> if the current thread is pinned.\nReturns <code>true</code> if the handle is pinned.\nLoads a <code>Shared</code> from the atomic pointer.\nLoads a <code>Shared</code> from the atomic pointer using a “consume…\nAllocates <code>value</code> on the heap and returns a new atomic …\nAllocates <code>value</code> on the heap and returns a new owned …\nCreates a new collector.\nThe new value, which the operation failed to store.\nThe new value, which the operation failed to store.\nReturns a new null atomic pointer.\nReturns a new null pointer.\nPins the current thread.\nPins the handle.\nRegisters a new handle for the collector.\nUnpins and then immediately re-pins the thread.\nTemporarily unpins the thread, executes the given function …\nStores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer.\nThe ordering of the operation when it succeeds.\nStores a <code>Shared</code> or <code>Owned</code> pointer into the atomic pointer, …\nReturns the tag stored within the pointer.\nReturns the tag stored within the pointer.\nTakes ownership of the pointee if it is non-null.\nTakes ownership of the pointee if it is not null.\nReturns a reference to a dummy guard that allows …\nReturns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …\nReturns the same pointer, but tagged with <code>tag</code>. <code>tag</code> is …\nA bounded multi-producer multi-consumer queue.\nAn unbounded multi-producer multi-consumer queue.\nReturns the capacity of the queue.\nPushes an element into the queue, replacing the oldest …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if the queue is empty.\nReturns <code>true</code> if the queue is empty.\nReturns <code>true</code> if the queue is full.\nReturns the number of elements in the queue.\nReturns the number of elements in the queue.\nCreates a new bounded queue with the given capacity.\nCreates a new unbounded queue.\nAttempts to pop an element from the queue.\nPops an element from the queue.\nAttempts to push an element into the queue.\nPushes an element into the queue.\nA thread parking primitive.\nA sharded reader-writer lock.\nA guard used to release the shared read access of a …\nA guard used to release the exclusive write access of a …\nUnparks a thread parked by the associated <code>Parker</code>.\nEnables threads to synchronize the beginning or end of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a raw pointer into a <code>Parker</code>.\nConverts a raw pointer into an <code>Unparker</code>.\nReturns a mutable reference to the underlying data.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this lock, returning the underlying data.\nConverts a <code>Parker</code> into a raw pointer.\nConverts an <code>Unparker</code> into a raw pointer.\nReturns <code>true</code> if the lock is poisoned.\nCreates a new <code>Parker</code>.\nCreates a new sharded reader-writer lock.\nCreates a new wait group and returns the single reference …\nBlocks the current thread until the token is made …\nBlocks the current thread until the token is made …\nBlocks the current thread until the token is made …\nLocks with shared read access, blocking the current thread …\nAttempts to acquire this lock with shared read access.\nAttempts to acquire this lock with exclusive write access.\nAtomically makes the token available if it is not already.\nReturns a reference to an associated <code>Unparker</code>.\nDrops this reference and waits until all other references …\nLocks with exclusive write access, blocking the current …\nA scope for spawning threads.\nA handle that can be used to join its scoped thread.\nConfigures the properties of a new thread.\nCreates a builder that can configure a thread before …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWaits for the thread to finish and returns its result.\nSets the name for the new thread.\nCreates a new scope for spawning threads.\nSpawns a scoped thread.\nSpawns a scoped thread with this configuration.\nSets the size of the stack for the new thread.\nReturns a handle to the underlying thread.\nPerforms exponential backoff in spin loops.\nPads and aligns a value to the length of a cache line.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the inner value.\nReturns <code>true</code> if exponential backoff has completed and …\nCreates a new <code>Backoff</code>.\nPads and aligns a value to the length of a cache line.\nResets the <code>Backoff</code>.\nBacks off in a blocking loop.\nBacks off in a lock-free loop.\nThis format is used for space-efficient color …\n3 hexadecimal digits, one for each of the r, g, b channels\n4 hexadecimal digits, one for each of the r, g, b, a …\n6 hexadecimal digits, two for each of the r, g, b channels\n8 hexadecimal digits, one for each of the r, g, b, a …\nA wrapper around Color32 that converts to and from a …\nHue, saturation, value, alpha. All in the range [0, 1]. No …\nLike Hsva but with the <code>v</code> value (brightness) being gamma …\nAn ugly color that is planned to be replaced before making …\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nalpha 0-1. A negative value signifies an additive color …\nalpha 0-1. A negative value signifies an additive color …\nReturns an additive version of self\nReturn an additive version of this color (alpha = 0)\nBlend two colors, so that <code>self</code> is behind the argument.\nRetrieves the inner <code>Color32</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nTransparent black\nParses a color from a hex string.\nFrom <code>sRGBA</code> with premultiplied alpha.\nFrom linear RGBA with premultiplied alpha\nFrom <code>sRGBA</code> WITHOUT premultiplied alpha.\nFrom linear RGBA without premultiplied alpha\nFrom <code>sRGBA</code> with premultiplied alpha\nFrom <code>sRGBA</code> without premultiplied alpha\nParses a string as a hex color without the leading <code>#</code> …\nTransparent white\nlinear [0, 1] -&gt; gamma [0, 1] (not clamped). Works for …\nMultiply with 0.5 to make color half as opaque, …\nMultiply with 127 to make color half as opaque, …\nlinear [0, 1] -&gt; gamma [0, 255] (clamped). Values outside …\nhue 0-1\nhue 0-1\nConstruct a <code>crate::Color32</code> from a hex RGB or RGBA string …\nAll ranges in 0-1, rgb is linear.\nHow perceptually intense (bright) is the color?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the alpha=0 ?\nIs the alpha=0 ?\nLerp this color towards <code>other</code> by <code>t</code> in gamma space.\ngamma [0, 255] -&gt; linear [0, 1].\nlinear [0, 255] -&gt; linear [0, 1]. Useful for alpha-channel.\ngamma [0, 1] -&gt; linear [0, 1] (not clamped). Works for …\nMultiply with 0.5 to make color half as opaque in linear …\nlinear [0, 1] -&gt; linear [0, 255] (clamped). Useful for …\nFast gamma-space multiplication.\nMultiply with e.g. 0.5 to make us half transparent\nAll ranges in 0-1, rgb is linear.\nsaturation 0-1\nsaturation 0-1\nCheap and ugly. Made for graying out disabled <code>Ui</code>s.\nPremultiplied RGBA\nPremultiplied RGBA\nFormats the color as a hex string.\nConverts to floating point values in the range 0-1 without …\nReturns an opaque version of self\nReturns an opaque version of self\nTo linear space rgba in 0-1 range.\nunmultiply the alpha\nTo gamma-space 0-255.\nunmultiply the alpha\nPremultiplied RGBA\nPremultiplied RGBA\nvalue 0-1, in gamma-space (~perceptually even)\nvalue 0-1\nMacro for converting a string literal containing …\n<code>Storage</code> key used for app\nA request related to <code>accesskit</code>.\nImplement this trait to write apps that can be compiled …\nSomething went wrong in user code when creating the app.\nThis is how your app is created.\nUse WebGL2 first.\nUse WebGL1 first\nData that is passed to <code>AppCreator</code> that can be used to …\nContains the error value\nThe different problems that can occur when trying to run …\nObject that allows building the event loop.\nHook into the building of an event loop before it is run\nRepresents the surroundings of your app.\nSelects the level of hardware graphics acceleration.\nInformation about the integration passed to the use app …\nOptions controlling the behavior of a native window.\nDo NOT use graphics acceleration.\nContains the success value\nPrefer graphics acceleration, but fall back to software.\nWhat rendering backend to use.\nA repaint is requested.\nRequire graphics acceleration.\nShort for <code>Result&lt;T, eframe::Error&gt;</code>.\nA place where you can store custom data in a way that …\nThe custom even <code>eframe</code> uses with the <code>winit</code> event loop.\nForce Use WebGL1.\nForce use WebGL2.\nWebGL Context options\nUse <code>egui_wgpu</code> renderer for <code>wgpu</code>.\nAn error from <code>wgpu</code>.\nAttributes used when creating a window.\nHook into the building of a the native window.\nAn error from <code>winit</code>.\nAn error from <code>winit::event_loop::EventLoop</code>.\nTime between automatic calls to <code>Self::save</code>\nBuilds a new event loop.\nOn desktop: make the window position to be centered at …\nBackground color values for the app, e.g. what is sent to …\nSeconds of cpu usage (in seconds) on the previous frame.\nSets the number of bits in the depth buffer.\nControls whether to apply dithering to minimize banding …\nThe egui Context.\nHook into the building of an event loop before it is run.\nwrite-to-disk or similar\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the value for the given key.\nGet and deserialize the RON stored at the given key.\nSpecify whether or not hardware acceleration is preferred, …\nHelpers for loading <code>egui::IconData</code>.\nInformation about the integration.\nInformation about the surrounding environment.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if you are in a web environment.\nSet the level of the multisampling anti-aliasing (MSAA).\nStart building a new event loop.\nInitializes new attributes with default values.\nCalled once on shutdown, after <code>Self::save</code>.\nGet the parent window stored on the attributes.\nControls whether or not the egui memory (window positions …\nControls whether or not the native window position and …\nThe folder where <code>eframe</code> will store the app state. If not …\nA hook for manipulating or filtering raw input before it …\nWhat rendering backend to use.\nThis controls what happens when you close the main eframe …\nThis is how you start a native (desktop) app.\nThe simplest way to get started when writing a native app.\nCalled on shutdown, and perhaps at regular intervals. …\nSet the value for the given key.\nSerialize the given value as RON and store with the given …\nSets the number of bits in the stencil buffer.\nA place where you can store custom data in a way that …\nYou can use the storage to restore app state(requires the …\nThe folder where <code>eframe</code> will store its state.\nA place where you can store custom data in a way that …\nGet whether the window will support transparency.\nCalled each time the UI needs repainting, which may be …\nControls the native window of the root viewport.\nTurn on vertical syncing, limiting the FPS to the display …\nConfigures wgpu instance/device/adapter/surface creation …\nThe underlying WGPU render state.\nThe underlying WGPU render state.\nHook into the building of a window.\nWhether the window will be initially focused or not.\nSets whether the background of the window should be …\nPrevents the window contents from being captured by other …\nModifies the cursor icon of the window.\nSets whether the window should have a border, a title bar, …\nSets the enabled window buttons.\nSets whether the window should be put into fullscreen upon …\nRequests the window to be of specific dimensions.\nSets the maximum dimensions a window can have.\nRequest that the window is maximized upon creation.\nSets the minimum dimensions a window can have.\nBuild window with parent window.\nSets a desired initial position for the window.\nSets whether the window is resizable or not.\nBuild window with resize increments hint.\nSets a specific theme for the window.\nSets the initial title of the window in the title bar.\nSets whether the background of the window should be …\nSets whether the window will be initially visible or …\nSets the window icon.\nSets the window level.\nWhat the cumulative pass number was when the repaint was …\nWhat to repaint.\nWhen to repaint.\nAll egui keys\nIndicate whether a popup will be shown above or below the …\nAn assistive technology (e.g. screen reader) requested an …\nIndicated an alias, e.g. a shortcut\nleft/center/right or top/center/bottom alignment for e.g. …\nTwo-dimension alignment, e.g. <code>Align2::LEFT_TOP</code>.\nSomething can be scrolled in any direction (panned).\nAlways clamp values, even existing ones.\nAn area on the screen that can be moved by dragging.\nState of an <code>Area</code> that is persisted between frames.\nConvenience for <code>Self::Max</code>\nPainted behind all floating windows\n<code>\\</code>\nAlso known as “backquote” or “grave”\nBegin resizing the viewport with the left mouse button …\nNormal labels. Easily readable, doesn’t take up too much …\nA bottom <code>crate::TopBottomPanel</code>.\nClickable button with text.\nButtons. Maybe slightly bigger than <code>Self::Body</code>.\nLoad the image from some raw bytes.\nButtons, sliders, windows, …\nOn Mac: ⌘ Command key, elsewhere: Ctrl key\nBackend-specific painting.\nTouch operation has been disrupted by something (various …\nCancel the closing that was signaled by …\nHover a cell in a table\nHorizontal or vertical center.\nA panel that covers the remainder of the screen, i.e. …\nA <code>crate::CentralPanel</code>.\nBoolean on/off control with text label.\nCircle with optional outline and fill.\nStretches the edge pixels to fill beyond the texture’s …\nA <code>Mesh</code> or <code>PaintCallback</code> within a clip rectangle.\nThe user clicked the close-button on the window, or …\nRequest this viewport to be closed.\nPopup will be closed on click anywhere, inside or outside …\nPopup will be closed if the click happened somewhere else …\nA header which can be collapsed/expanded, revealing a …\nThe response from showing a <code>CollapsingHeader</code>.\n<code>:</code>\nRGBA image.\nThis format is used for space-efficient color …\nA 2D RGBA color image in RAM.\nThis should be used on the windows that are popped up by …\nA drop-down selection menu with a descriptive label.\n<code>,</code>\nIME composition ended with this final result.\nYour handle to egui.\nA context menu is available\nThe integration detected a “copy” event (e.g. Cmd+C).\nIndicate that a copy will be made\nPut this image to the system clipboard.\nPut this text to the system clipboard.\nHow rounded the corners of things should be.\nRequest an elevated amount of animations and flair for the …\nFor precision work\nA cubic Bézier Curve.\nA mouse cursor icon.\nWill probably not work as expected!\nThe integration detected a “cut” event (e.g. Cmd+X).\n+Y\nSliders, windows, scroll bars, scroll areas, …\nDark mode: light text on a dark background.\nDark mode: light text on a dark background.\nDebug layer, always painted last / on top\nShow window decorations, i.e. the chrome around the content\nDefault text style - will use <code>TextStyle::Body</code>, unless …\nNormal cursor icon, whatever that is.\nA viewport run independently from the parent viewport.\nThe user-code that shows the ui in the viewport, used for …\nA desktop feature. This can include a single window …\nThis is a dialog window.\nLayout direction, one of <code>LeftToRight</code>, <code>RightToLeft</code>, <code>TopDown</code>…\nNotifies when the IME was disabled.\nThis indicates the window is being dragged. This property …\nA dock or panel feature. Typically a Window Manager would …\nTracking of drag-and-drop payload.\nA numeric value that you can change by dragging the …\nA dropdown menu that usually appears when the user clicks …\nA file dropped into egui.\nInfinite range that contains everything, from -∞ to …\nInfinite rectangle that contains every point.\nUsers cannot enter new values that are outside the range.\nEllipse with optional outline and fill.\nThe fallback, when the egui integration doesn’t support …\nSet which window buttons are enabled\nNotifies when the IME was enabled.\nUser lifted the finger or pen from the surface, or slid …\n<code>=</code>\nAn input event generated by the integration.\nControls which events that a focused widget will have …\nFit the image to an exact size.\nThe text should expand the <code>Ui</code> size when reaching its …\nThe first extra mouse button on some mice. In web …\nThe second extra mouse button on some mice. In web …\nThis widget wants focus.\nBring the window into focus (native only).\nUsed for the font texture.\nA <code>.ttf</code> or <code>.otf</code> file and a font face index.\nDescribes the font data and the sizes to use.\nFont of unknown size.\nHow to select a sized font.\nDirectly select size and font family\nA single-channel image designed for the font texture.\nA way to select <code>FontId</code>, either by picking one directly or …\nExtra scale and vertical tweak to apply to all text of a …\nPopups, menus etc that should always be painted on top of …\nFit the image to a fraction of the available size.\nA frame around some content, including margin, colors, etc.\nA <code>crate::Frame</code>.\nStores the durations between each frame of an animated …\nWhat egui emits each frame from <code>crate::Context::run</code>.\nTurn borderless fullscreen on/off.\nText that has been laid out, ready for painting.\nUse exactly this galley when painting the text.\nAn <code>crate::Area</code> that is not of any other kind.\nThe thing you are hovering can be grabbed\nYou are grabbing the thing you are hovering\nA simple grid layout.\nHeading. Probably larger than <code>Self::Body</code>.\nScale to height.\nQuestion mark\nA file about to be dropped into egui.\nA clickable hyperlink, e.g. to …\nSet the IME cursor editing area.\nThe window icon.\nImage data for an application icon.\nA function that paints the <code>ComboBox</code> icon\negui tracks widgets frame-to-frame using <code>Id</code>s.\n<code>IdMap&lt;V&gt;</code> is a <code>HashMap&lt;Id, V&gt;</code> optimized by knowing that <code>Id</code> …\nClicks will be ignored. Popup might be closed manually by …\nA widget which displays an image.\nA clickable image within a frame.\nAn image stored in RAM.\nThis type determines how the image should try to fit …\nThis type determines the constraints on how the size of an …\nThis type tells the <code>Ui</code> how to load an image.\nIME Event\nIME event.\nA viewport run inside the parent viewport.\nViewport for immediate rendering.\nRender the given viewport, calling the given ui callback.\nRequest a standard amount of attention-grabbing actions.\nReturned when we wrap some ui-code and want to return both …\nShould be bigger than 0\nInput state that egui updates each frame.\nThe stroke should be painted entirely inside of the shape\nKeyboard keys.\nA key was pressed or released.\nA keyboard shortcut, e.g. <code>Ctrl+Alt+W</code>.\nConvenience for <code>Self::Min</code>\n-X\nLinear magnification and minification.\nLinear magnification and minification, but with the …\nLinear magnification and minification, but with the …\nStatic text.\nAn identifier for a paint layer. Also acts as an …\nThe layout of a <code>Ui</code>, e.g. “vertical &amp; centered”.\nUse this <code>LayoutJob</code> when laying out the text.\nA left <code>crate::SidePanel</code>.\nLight mode: dark text on a light background.\nLight mode: dark text on a light background.\nNumber of lines\nA line between two points.\nLinearly interpolate the nearest neighbors, creating a …\nClickable text, that looks like a hyperlink.\ne.g. a hyperlink\nThe Mac ⌘ Command key\nTextures allocated using <code>TextureManager</code>.\nA value for all four sides of a rectangle, often used to …\nRight or bottom.\nShould be bigger than 0\nMaximize or unmaximize window.\nThe data that egui persists between frames.\nThe content of a regular menu.\nPinnable menu windows. “Torn off” from the main …\nTextured triangles in two dimensions.\nA general triangle mesh.\nThe stroke should be painted right on the edge of the …\nThe tertiary mouse button is usually the middle mouse …\nNormal moveable windows that you reorder by click\nLeft or top.\nShould be bigger than 0\n<code>-</code>\nMirrors the texture with each repetition, creating …\nA modal dialog. Similar to a <code>crate::Window</code> but centered …\nA modal <code>crate::Modal</code>.\nThe response of a modal dialog.\nNames of different modifier keys.\nState of the modifier keys. These must be fed to egui.\nA font where each character is the same width (<code>w</code> is the …\nSame size as <code>Self::Body</code>, but used when monospace is …\nThe mouse moved, the units are unspecified. Represents the …\nEnable mouse pass-through: mouse clicks pass through the …\nA raw mouse wheel event as sent by the backend.\nThe unit associated with the numeric value of a mouse …\nUser moves a touch point along the surface. This event is …\nOmnidirectional move icon (e.g. arrows in all cardinal …\nAll you probably need to know about a multi-touch gesture.\nAlt, Ctrl, Shift, Cmd\nAn invalid <code>Rangef</code> filled with <code>f32::NAN</code>.\nAn invalid <code>Rect</code> filled with <code>f32::NAN</code>.\nNearest magnification and minification.\nNearest magnification and minification, but with the …\nNearest magnification and minification, but with the …\nNo shadow at all.\nSame as <code>Stroke::default</code>.\nNo colors, no margins, no border.\nThe inverse of <code>Self::EVERYTHING</code>: stretches from positive …\nThe inverse of <code>Self::EVERYTHING</code>: stretches from positive …\nA special <code>Id</code>, in particular as a key to <code>crate::Memory::data</code>\nNumber of pointer buttons supported by egui, i.e. the …\nOne of the names in <code>FontDefinitions::families</code>.\nA user-chosen style, found in <code>Style::text_styles</code>.\nShow the nearest pixel value.\nValues are not clamped.\nCan’t drop here\nShow no cursor\nPaint nothing. This can be useful as a placeholder.\nThis is a normal, top-level window.\nForbidden\nThe window is a notification. This property is typically …\n<code>0</code> (from main row or numpad)\n<code>1</code> (from main row or numpad)\n<code>2</code> (from main row or numpad)\n<code>3</code> (from main row or numpad)\n<code>4</code> (from main row or numpad)\n<code>5</code> (from main row or numpad)\n<code>6</code> (from main row or numpad)\n<code>7</code> (from main row or numpad)\n<code>8</code> (from main row or numpad)\n<code>9</code> (from main row or numpad)\nExtends <code>f32</code>, <code>Vec2</code> etc with <code>at_least</code> and <code>at_most</code> as aliases …\nWhat URL to open, and how.\nOpen this url in a browser.\nSome global options that you can read and write.\nDifferent layer categories\nFit the image to its original size, scaled by some factor.\nIf you cannot fit any of the above slots.\nSet the outer position of the viewport, i.e. moves the …\nCommands that the egui integration should execute at the …\nThe stroke should be painted entirely outside of the shape\nNumber of pages\nIf you want to paint some 3D shapes inside an egui region, …\nInformation passed along with <code>PaintCallback</code> (…\nHelper to paint shapes and text to a specific region on a …\nThe integration detected a “paste” event (e.g. Cmd+V).\nA series of lines between points. The path can have a …\n<code>.</code>\nA picker, such as color picker.\n<code>|</code>, a vertical bar\nThe non-rendering part of what egui emits each frame.\n<code>+</code>\nNumber of ui points (logical pixels)\nMouse button (or similar for touch input)\nA mouse button was pressed or released (or a touch started …\nThe mouse left the screen, or the last/primary touch input …\nThe mouse or touch moved to a new place.\nMouse or touch state.\nPointing hand, used for e.g. web links\nThe content of a popup menu.\nDetermines popup’s close behavior\nA popup menu that usually appears when the user right …\nA position on screen.\nA new IME candidate is being suggested.\nThe primary mouse button is usually the left one.\nShows that processing is being done, but that the program …\nA simple progress bar.\nA font where some characters are wider than other (e.g. ‘…\nA quadratic Bézier Curve.\n<code>?</code>\n<code>&#39;</code>\nConvenience for <code>Self::Max</code>\n+X\nThe <code>ViewportId</code> of the root viewport.\nThe <code>ViewportIdPair</code> of the root viewport, which is its own …\nOne out of several alternatives, either selected or not.\nA group of radio buttons.\nInclusive range of floats, i.e. <code>min..=max</code>, but more …\nWhat the integrations provides to egui at the start of …\nA rectangular region of space.\nRectangle with optional outline and fill.\nWhat called <code>Context::request_repaint</code> or …\nTiles the texture across the surface, repeating it …\nRequest a copy of the current selection.\nRequest cut of the current selection\nRequest a paste from the clipboard to the current focused …\nInformation given to the backend about when it is time to …\nIf the window is unfocused, attract the user’s attention …\nReset the attention request and interrupt related …\nCan the window be resized?\nA region that can be resized by dragging the bottom right …\nA <code>crate::Resize</code>.\nResize a column\nResize something rightwards (e.g. when dragging the …\nHorizontal resize <code>-</code> to make something wider or more narrow …\nShould be bigger than 0\nDiagonal resize <code>/</code> (right-up to/from left-down)\nResize something up (e.g. when dragging the top edge of …\nResize something up and right (e.g. when dragging the …\nResize something up and left (e.g. when dragging the …\nDiagonal resize <code>\\</code> (left-up to/from right-down)\nResize a row\nResize something downwards (e.g. when dragging the bottom …\nResize something down and right (e.g. when dragging the …\nResize something down and left (e.g. when dragging the …\nVertical resize <code>|</code> (up-down or down-up)\nResize something leftwards (e.g. when dragging the left …\nThe result of adding a widget to a <code>Ui</code>.\n0-1 linear space <code>RGBA</code> color with premultiplied alpha.\nText and optional style choices for it.\nA right <code>crate::SidePanel</code>.\nThe root viewport; i.e. the original window.\n⌥ ⌃ ⇧ ⌘ - NOTE: not supported by the default egui …\nScale original size by some factor.\nA container that allows you to zoom and pan.\nThe reply of a screenshot requested with …\nTake a screenshot of the next frame after this.\nAdd vertical and/or horizontal scrolling to a contained <code>Ui</code>.\nA <code>crate::ScrollArea</code>.\nThe secondary mouse button is usually the right one, and …\nOne out of several alternatives, either selected or not. …\n<code>;</code>\nWhat sort of interaction is a widget sensitive to?\nA visual separator. A horizontal or vertical line …\nThe color and fuzziness of a fuzzy shape.\nA paint primitive such as a circle or a piece of text. …\nA panel that covers the entire left or right side of a <code>Ui</code> …\nPut some widgets on the left and right sides of a ui.\nScale to size.\nGiven as a hint for image loading requests.\n<code>/</code>\nControl a number with a slider.\nSpecifies how values in a <code>Slider</code> are clamped.\nSpecifies the orientation of a <code>Slider</code>.\nUsed when small text is needed.\nControls the sizes and distances between widgets.\nA spinner widget used to indicate loading.\nThe window is a splash screen displayed as an application …\nUser just placed a touch point on the touch surface\nMoves the window with the left mouse button until the …\nDescribes the width and color of a line.\nDescribes how the stroke of a shape should be painted.\nSpecifies the look and feel of egui.\nUse a <code>TextStyle</code> to look up the <code>FontId</code> in <code>Style::text_styles</code>…\nFollow the system’s theme preference.\nConvenience for <code>Self::Min</code>\nA table cell (from the <code>egui_extras</code> crate).\nText.\nText input, e.g. via keyboard.\nText caret, e.g. “Click here to edit text”\nTrait constraining what types <code>crate::TextEdit</code> may use as …\nA text region that the user can edit the contents of.\nFormatting option for a section of text.\nAlias for a <code>FontId</code> (font of a certain size).\nHow to wrap and elide text.\nLoad the image from an existing texture.\nHow the texture texels are filtered.\nUsed to paint images.\nWhat texture to use in a <code>Mesh</code> mesh.\nHow the texture texels are filtered.\nDefines how textures are wrapped around objects when …\nWhat has been allocated and freed during the last period.\nDark or Light theme.\nThe user’s theme preference.\nSet the window title.\nToolbar windows. “Torn off” from the main application.\nThings floating on top of everything else, like tooltips. …\nA tooltip, as shown by e.g. <code>crate::Response::on_hover_ui</code>.\nA tooltip window. Usually used to show additional …\nA panel that covers the entire top or bottom of a <code>Ui</code> or …\nA top <code>crate::TopBottomPanel</code>.\nOn touch screens, report this <em>in addition to</em> …\nthis is a <code>u64</code> as values of this kind can always be …\nUnique identification of a touch occurrence (finger or pen …\nIn what phase a touch event is in.\nTurn the window transparent or not.\nThe text should be elided using “…” when reaching …\n-Y\nThis is what you use to place widgets.\nBuild a <code>Ui</code> as the child of another <code>Ui</code>.\nWhat kind is this <code>crate::Ui</code>?\nInformation about a <code>crate::Ui</code> and its parents.\nInformation about a <code>crate::Ui</code> to be included in the …\nIterator that walks up a stack of <code>StackFrame</code>s.\nUser-chosen tags.\nLoad the image from a URI, e.g. …\nYour own texture, defined in any which way you want. The …\nTypes of attention to request from a user when a native …\nA wrapper around <code>dyn Any</code>, used for passing custom user data\nA small persistent utility window, such as a palette or …\nRecursively nest more shapes - sometimes a convenience to …\nA vector has a direction and length. A <code>Vec2</code> is often used …\nTwo bools, one for each axis (X and Y).\nVertical text caret, e.g. “Click here to edit vertical …\nControl the building of a new egui viewport (i.e. native …\nThe different types of viewports supported by egui.\nAn output viewport-command from egui to the backend, e.g. …\nAn input event from the backend into egui, about a …\nA unique identifier of a viewport.\nA fast hash map from <code>ViewportId</code> to <code>T</code>.\nA pair of <code>ViewportId</code>, used to identify a viewport and its …\nA fast hash set of <code>ViewportId</code>.\nInformation about the current viewport, given as input …\nDescribes a viewport, i.e. a native window.\nSet the visibility of the window.\nControls the visual style (colors etc) of egui.\nNot yet ready, try later.\nAnything implementing Widget can be added to a <code>Ui</code> with …\nDescribes a widget such as a <code>crate::Button</code> or a …\nUsed to store each widget’s Id, Rect and Sense each …\nStores the <code>WidgetRect</code>s of all widgets generated during a …\nThis is how you specify text for a widget.\nThe different types of built-in widgets in egui\nHelper so that you can do e.g. <code>TextEdit::State::load</code>.\nScale to width.\nBuilder for a floating window which can be dragged, …\nA <code>crate::Window</code>.\nThe native window gained or lost focused (e.g. the user …\nSet window to be always-on-top, always-on-bottom, or …\nThe text should wrap to the next line when reaching the <code>Ui</code> …\nRight\nDown\nThe zero position, the origin. The top left corner in a …\nA <code>Rect</code> filled with zeroes.\nNo rounding on any corner.\nZoom scale factor this frame (e.g. from a pinch gesture).\nEnhance!\nLet’s get a better overview\nFor use in tests; especially doctests.\nFor use in tests; especially doctests.\nIf AccessKit support is active for the current frame, get …\nThe difference in the widget tree since last frame.\nAdd a <code>Widget</code> to this <code>Ui</code> at a location dependent on the …\nIt is up to the caller to make sure there is room for this.\nAdd a new bytes loader.\nUniformly colored rectangle.\nAdd a single <code>Widget</code> that is possibly disabled, i.e. greyed …\nAdd a section that is possibly disabled, i.e. greyed out …\nTell <code>egui</code> which fonts to use.\nAdd a new image loader.\nRectangle with a texture and color.\nAdd a <code>Widget</code> to this <code>Ui</code> with a given size. The widget will …\nAdd extra space before the next widget.\nAdd a new texture loader.\nAdd a triangle.\nAdd a single <code>Widget</code> that is possibly invisible.\nAdd a section that is possibly invisible, i.e. greyed out …\nAllocate a rect without interacting with it.\nHow imprecise do we expect the mouse/touch input to be? …\nReturns a range of given size within a specified range.\ne.g. center a size within a given frame\nAre both <code>x</code> and <code>y</code> true?\nGet a flags value with all known bits set.\nMutate the <code>Style</code>s used by all subsequent windows, panels …\nAllocate at least as much space as needed, and interact …\nReturns a <code>Rect</code> with exactly what you asked for.\nAllocated space (<code>UiBuilder::max_rect</code>) and then add content …\nConvenience function to get a region to paint on.\nAllocate a specific part of the <code>Ui</code>.\nAllocate space for a widget and check for interaction in …\nReserve this much space and move the cursor. Returns where …\nAllocated the given space and then adds content to that …\nAllocated the given rectangle and then adds content to …\nAllocated the given space and then adds content to that …\nDoes this layer allow interaction? Returns true if\nEither of the alt keys are down (option ⌥ on Mac).\nSet alt text for the image. This will be shown when the …\nIf true and scrolling is enabled for only one direction, …\nSet anchor and distance.\nSet anchor and distance.\nUsed e.g. to anchor a piece of text to a part of the …\nUse this anchor to position something around <code>pos</code>, e.g. …\nMeasures the angle of the vector.\nCreate a unit vector with the given CW angle (in radians).\nWhether to display a loading animation when progress <code>&lt; 1</code>. …\nReturns a value in the range [0, 1], to indicate “how on…\nLike <code>Self::animate_bool</code>, but uses an easing function that …\nLike <code>Self::animate_bool</code> but allows you to control the …\nLike <code>Self::animate_bool</code> but allows you to control the …\nLike <code>Self::animate_bool</code> but allows you to control the …\nSmoothly animate an <code>f32</code> value.\nShould the scroll area animate <code>scroll_to_*</code> functions?\nHow many seconds a typical animation should last.\nWere there any type of click this frame?\nIs any pointer button currently down?\nTrue if any member is NaN.\nTrue if any member is NaN.\nTrue if any member is NaN.\nIs any popup open?\nIs there any popup open? We need to check this before the …\nWas any pointer button pressed (<code>!down -&gt; down</code>) this frame?\nWas any pointer button released (<code>down -&gt; !down</code>) this frame?\nTrue if there currently are any fingers touching egui.\nThis is wayland only. See <code>Self::with_app_id</code>.\nAppend all the indices and vertices of <code>other</code> to <code>self</code>.\nAdd on new input.\nAdd on new output.\nAdd on new output.\nAdd on new output.\nAppend all the indices and vertices of <code>other</code> to <code>self</code> …\nAppend to an existing <code>LayoutJob</code>\nSet the area of the modal.\nObtain the previous rectangle of an area.\nAccess memory of the <code>Area</code>s, such as <code>Window</code>s.\nAccess memory of the <code>Area</code>s, such as <code>Window</code>s.\nShow an arrow starting at <code>origin</code> and going in the …\nFlip <code>min</code> and <code>max</code> if needed, so that <code>min &lt;= max</code> after.\nA view of the underlying data as <code>&amp;[u8]</code>\nA view of the underlying data as <code>&amp;mut [u8]</code>\nThe argument is the rectangle of the shadow caster.\nReturns this buffer as a <code>str</code>.\nWidth / height\nwidth / height\nMore readable version of <code>self.max(lower_limit)</code>\nMake sure each corner has a rounding of at least this.\nMore readable version of <code>self.min(upper_limit)</code>\nMake sure each corner has a rounding of at most this.\nSame as <code>ui.next_auto_id().with(id_salt)</code>\nFor each axis, should the containing area shrink if the …\nNot resizable, just takes the size of its contents. Also …\nNot manually resizable, just takes the size of its …\nThe available height at the moment, given the current …\nHow much space is still available after panels has been …\nIn case of a wrapping layout, how much space is left on …\nThe available space at the moment, given the current …\nIn case of a wrapping layout, how much space is left on …\nThe available width at the moment, given the current …\nAverage rounding of the corners.\nSet the backdrop color of the modal.\nThe response of the modal backdrop.\nSet the background color of the <code>TextEdit</code>. The default is …\nFill-color behind the text.\nPrefer using <code>RichText</code> directly!\nWhen using this font’s metrics to layout a row, shift …\nCursor to the first character.\nBegin a dynamically colored frame.\nSee <code>Self::begin_pass</code>.\nAn alternative to calling <code>Self::run</code>.\nA solid color to put behind the image. Useful for …\nA solid color to put behind the image. Useful for …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe width of the blur, i.e. the width of the fuzzy …\nNone iff collapsed.\nNone iff collapsed.\nCreate a bi-directional (horizontal and vertical) scroll …\nThe id should be globally unique, e.g. …\n<code>max.y</code>\n<code>max.y</code>\nPlace elements vertically, bottom up.\nBottom margin, as <code>f32</code>\nThe window attrbiutes such as title, position, size, etc.\nList of all the builtin font names used by <code>epaint</code>.\nUsage: <code>if ui.button(&quot;Click me&quot;).clicked() { … }</code>\nWas the given pointer button given clicked this frame?\nWas the button given double clicked this frame?\nIs this button currently down?\nShow a background behind buttons.\nButton size is text size plus this on each side\nWas the button given pressed this frame?\nWas the button given released this frame?\nWas the button given triple clicked this frame?\n<code>width x height x bytes_per_pixel</code>\nSet by the <code>eframe</code> web backend.\nReturns the amount of memory used by the vertices and …\nCaches for preventing the same value from being recomputed …\nCan be used to cache computations from one frame to …\nCalculate a bounding rectangle.\nReturns the size the image will occupy in the final UI.\nCalculate the final on-screen size in points.\nPaint something custom (e.g. 3D stuff).\nA canvas to draw on.\nThe center of the range\nConstruct a command to center the viewport on the monitor, …\nCenter position of the current gesture (average of all …\nThis will make the next added widget centered and …\nFor when you want to add a single widget to a layout, and …\nWas the underlying data changed?\nSets the limit for the amount of characters can be entered\nReads the given character range.\nIf the given <code>Id</code> has been used previously the same pass at …\nShow a checkbox.\nCreate a new <code>Ui</code> at a specific region.\nCreate a new <code>Ui</code> at a specific region with a specific id.\nEquivalent to <code>x.clamp(min, max)</code>\nReturn the given points clamped to be inside the rectangle …\nIf set to <code>true</code>, existing values will be clamped to …\nSets valid range for the value.\nWhether clamp the window’s size to monitor’s size. The …\nControls when the values will be clamped to the range.\nWhat type of viewport are we?\nRestore to default state, but without freeing memory.\nClears all characters in this buffer\nClear the contents while retaining allocated memory.\nClear memory of any animations.\nClears the payload, setting it to <code>None</code>.\nSense clicks and hover, but not drags.\nSense both clicks, drags and hover (e.g. a slider or …\nReturns true if this widget was clicked this frame by the …\nReturns true if this widget was clicked this frame by the …\n<code>true</code> if there was a click <em>outside</em> the rect of this widget.\nScreen-space rectangle for clipping what we paint in this …\nEverything painted in this <code>Painter</code> will be clipped against …\nClip rectangle in points.\nClip / scissor rectangle. Only show the part of the <code>Mesh</code> …\nThe “scissor” or “clip” rectangle. This is what …\nAllow child widgets to be just on the border and still …\nWhen <code>true</code> (default), overflowing text will be clipped.\nControls the close behavior for the popup.\nClose the menu we are in (including submenus), if any.\nClose the open popup, if any.\nThis viewport has been told to close.\nA line that closes back to the start point again.\nChecks only cmd/ctrl, not alt/shift.\nShow text as monospace with a gray background.\nMonospace label with different background color.\nPrefer using <code>RichText</code> directly!\nBackground color behind code-styled monospaced labels.\nA <code>TextEdit</code> for code editing.\nBuild a <code>TextEdit</code> focused on code editing. By default it …\nCan the window be collapsed by clicking on its title?\nA <code>CollapsingHeader</code> that starts out collapsed.\nShow a background behind collapsing headers.\nOverride text color.\nOverride text color if, and only if, this is a <code>RichText</code>.\nSets the spinner’s color.\nColor of the opaque center of the shadow.\nText color\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShows a button with the given color. If the user clicks …\nShow colored text.\nAdd a colored vertex.\nTemporarily split a <code>Ui</code> into several columns.\nTemporarily split a <code>Ui</code> into several columns.\nHeight of a combo-box before showing scroll bars.\nDefault (minimum) width of a <code>ComboBox</code>.\nOn Windows and Linux, set this to the same value as <code>ctrl</code>. …\ntrue if only <code>Self::ctrl</code> or only <code>Self::mac_cmd</code> is pressed.\nCommands that the egui integration should execute at the …\nCommands to change the viewport, e.g. window title and …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhat goes between the names\nConstrains this window to <code>Context::screen_rect</code>.\nConstrains this area to <code>Context::screen_rect</code>?\nConstrain the movement of the window to the given …\nConstrain the movement of the window to the given …\nCheck for a key press. If found, <code>true</code> is returned and the …\nCheck if the given shortcut has been pressed.\nCheck if this node is or is contained in a <code>crate::Ui</code> of a …\nContainers are pieces of the UI which wraps other pieces …\nWhether another set of modifiers is contained in this set …\nWhether all set bits in a source flags value are also set …\nReturns true if the pointer is contained by the response …\nResponse to secondary clicks (right-clicks) by showing the …\nReturns whether a context menu is currently open for this …\nA convex polygon with a fill and optional stroke.\nIf set, put this text in the system clipboard. Ignore if …\nCopy the given image to the system clipboard.\nCopy the given text to the system clipboard.\nSet the rounding of the button.\nSet the rounding of the progress bar.\nThe rounding of the <em>outer</em> corner of the <code>Self::stroke</code> (or, …\nRound the corners of the image.\nSet rounding for the <code>ImageButton</code>.\nThe rounding of the <em>outer</em> corner of the <code>Self::stroke</code> (or, …\nRound the corners of the image.\nIf the pointer button is down, will it register as a click …\nCount presses of a key. If non-zero, the presses are …\nHow to align things on the cross axis. For vertical …\nJustify the cross axis? For vertical layouts justify mean …\nEither of the control keys are down. When checking for …\nGet a reference to the parent <code>Context</code>.\nGet a reference to the parent <code>Context</code>.\nUsed for optionally showing a tooltip and checking for …\nThe total number of completed passes (usually there is one …\nThe total number of completed passes (usually there is one …\nThe number of fully completed passes, of the entire …\nSet current position of the window. If the window is …\nPositions the window but you can still move it.\nThe contents of some editable text (for <code>TextEdit</code> fields).\nWhere the next widget will be put.\nWhen <code>true</code> (default), the cursor will initially be placed …\nCursor at the given position within the galley.\nSet the cursor to this icon.\nSet custom formatter defining how numbers are converted …\nSet custom formatter defining how numbers are converted …\nSet custom parser defining how the text input is parsed …\nSet custom parser defining how the text input is parsed …\nDefault dark theme.\nA dark canvas to draw on.\nIf true, the visuals are overall dark with light text. If …\nThe default style for new <code>Ui</code>:s in dark mode.\nTurn a line into dashes.\nTurn a line into dashes. If you need to create many dashed …\nTurn a line into dashes with different dash/gap lengths …\nTurn a line into dashes with different dash/gap lengths …\nRead-only access to the shared <code>IdTypeMap</code>, which stores …\nRead-only access to <code>IdTypeMap</code>, which stores superficial …\nA user value given to the screenshot command, that will be …\nThis map stores some superficial state for all widgets …\nRead-write access to the shared <code>IdTypeMap</code>, which stores …\nRead-write access to <code>IdTypeMap</code>, which stores superficial …\nOptions to help debug why egui behaves strangely.\nWhether or not to debug widget layout on hover.\nShows where the next widget is going to be placed\nPaint on top of everything else\nThis is an example of how to create a plugin for egui.\nPrint this text next to the cursor at the end of the pass.\nText with a background.\nExtracts uri and frame index\nSpecifies the default fonts if the feature <code>default_fonts</code> …\nThe default is linear for both magnification and …\nThe epaint font texture.\nReturns an area customized for a modal. Makes these …\nThe size used for the <code>Ui::max_rect</code> the first frame.\nThe initial height of the <code>TopBottomPanel</code>, including …\nSet initial height of the window.\nSee <code>Self::default_size</code>.\nPreferred / suggested height. Actual height will depend on …\nBy default, the <code>CollapsingHeader</code> is collapsed. Call …\nSet initial collapsed state of the window\nSet initial position of the window.\nSet initial position and size of the window.\nSet initial size of the window.\nThe size used for the <code>Ui::max_rect</code> the first frame.\nDefault style for this theme.\nDefault visuals for this theme.\nThe initial wrapping width of the <code>SidePanel</code>, including …\nSet initial width of the window.\nSee <code>Self::default_size</code>.\nPreferred / suggested width. Actual width will depend on …\nRepaint after this duration. If zero, repaint as soon as …\nDeletes a range of text <code>char_range</code> from this buffer.\nHow much the pointer moved compared to last frame, in …\nThis can be used by a text-to-speech system to describe …\nThe desired height of the bar. Will use the default …\nSet the number of rows to show by default. The default for …\nThe desired width of the bar. Will use all horizontal …\nSet to 0.0 to keep as small as possible. Set to …\nThe intersection of a source flags value with the …\nCurrent direction of the pointer.\nCalling <code>disable()</code> will cause the <code>Ui</code> to deny all future …\nDisable generation of AccessKit tree updates in all future …\nMake the new <code>Ui</code> disabled, i.e. grayed-out and …\nThe distance from the rect to the position, squared.\nThe distance from the rect to the position.\nCreate something that can be drag-and-dropped.\nSurround the given ui with a frame which changes colors …\nDrag-and-Drop: Return what is being held over this widget, …\nDrag-and-Drop: Return what is being dropped onto this …\nIf the user started dragging this widget this frame, store …\nThe dot-product of two vectors.\nTurn a line into equally spaced dots.\nReturns true if this widget was double-clicked this frame …\nReturns true if this widget was double-clicked this frame …\nSense drags and hover, but not clicks.\nModify an angle. The given angle should be in radians, but …\nModify an angle. The given angle should be in radians, but …\nIf dragged, how many points were we dragged and in what …\nIf dragged, how far did the mouse move? This will use raw …\nThe widget was being dragged, but now it has been released.\nThe widget was being dragged by the button, but now it has …\nDid a drag on this widget begin this frame?\nDid a drag on this widget by the button begin this frame?\nThis widget just started being dragged this pass.\nThe widget was being dragged, but now it has been released.\nThe widget was being dragged by the button, but now it has …\nThis widget was being dragged, but was released this pass\nEnable/disable scrolling on the window by dragging with …\nCan the user drag the scroll area to scroll?\nWhen dragging the value, how fast does it move?\nThe style to use for <code>DragValue</code> text.\nThe widget is being dragged.\nSee <code>Self::dragged</code>.\nThe widget currently being dragged, if any.\nGet the id of the widget being dragged, if any.\nIs something else being dragged?\nIs something else being dragged?\nDragged files dropped into egui.\nSet to true the text was truncated due to …\nIf <code>true</code>, <code>Self::show_viewport_deferred</code> and …\nNo fonts.\nGet a flags value with all bits unset.\nEnable generation of AccessKit tree updates in all future …\nControl the scrolling behavior.\nIf you set this to <code>false</code>, the <code>CollapsingHeader</code> will be …\nIf <code>false</code> the window will be grayed out and non-interactive.\nIf false, no content responds to click and widgets will be …\nWas the widget enabled? If false, there was no interaction …\nWhether the widget is enabled.\nIs the widget enabled?\nCursor to one-past last character.\nCall at the end of each frame if you called …\nCall at the end of each frame if you called …\nMove to the next row in a grid layout or wrapping layout. …\nA good color for error text (e.g. red).\nIf <code>true</code>, pressing escape will act on the widget, and NOT …\nIn-order events received this frame.\nEvents that may be useful to e.g. a screen reader.\nIn-order events received this frame\nThis can be used by a text-to-speech system to describe …\nA <code>Rect</code> that contains every point above a certain y …\nA <code>Rect</code> that contains every point below a certain y …\nIf true, all windows, menus, tooltips, etc., will be …\nA <code>Rect</code> that contains every point to the left of the given …\nA <code>Rect</code> that contains every point to the right of the given …\nEnforce this exact height, including margins.\nEnforce this exact width, including margins.\nAn example color image, useful for tests.\nExpand by this much on each side, keeping the center\nExpand by this much in each direction, keeping the center\nExpand by this much in each direction, keeping the center\nExpand the <code>min_rect</code> and <code>max_rect</code> of this ui to include a …\nEnsure we are big enough to contain the given x-coordinate.\nEnsure we are big enough to contain the given y-coordinate.\nShow tooltips explaining <code>DragValue</code>:s etc when hovered.\nSet <code>Self::wrap_mode</code> to <code>TextWrapMode::Extend</code>, disabling …\nAdd many shapes at once.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nExpand to include the given x coordinate\nExpand to include the given y coordinate\nExtra spacing between letters, in points.\nExtra spacing between letters, in points.\nVery dark or light color (for corresponding theme). Used …\nIf <code>true</code>, quickly fade in the <code>Window</code> when it first appears.\nIf <code>true</code>, quickly fade in the area.\nIf <code>true</code>, quickly fade out the <code>Window</code> when it closes.\nWhen fading out things, we fade the colors towards this.\nSomething just barely different from the background color. …\nSet the <code>TextStyle</code> unless it has already been set\nSet the <code>TextStyle</code> unless it has already been set\nWhich theme to use in case <code>Self::theme_preference</code> is …\nWhich fonts (names) to use for each <code>FontFamily</code>.\nSelect the font family.\nWhat font family to use.\nWhat file had the call that requested the repaint?\nOverride background fill color. Note that this will …\nThe fill color of the bar.\nThe background fill color of the frame, within the …\nThe background fill color of the frame, within the …\nCalculate the <code>fill_rect</code> from the <code>content_rect</code>.\nGet all events that matches the given filter.\nDetermines how the image should shrink/expand/stretch/etc. …\nFit the image to an exact size.\nFit the image to a fraction of the available space.\nFit the image to its original size with some scaling.\nSet an exact number of decimals to display. Values will …\nSet an exact number of decimals to display.\nSets the window position and prevents it from being …\nPositions the window and prevents it from being moved\nSets the window pos and size and prevents it from being …\nSets the window size and prevents it from being resized by …\nFlip the min and the max\nRounded so that two adjacent rects that tile perfectly …\nSenses no clicks or drags, but can be focused with the …\nWhich widget has keyboard focus?\nThe native window has the keyboard focus (i.e. is …\nIs the window focused and able to receive input?\nThe native window has the keyboard focus (i.e. is …\nPick a <code>crate::FontId</code> or <code>TextStyle</code>.\nSelect the font and size. This overrides the value from …\nThe content of a <code>.ttf</code> or <code>.otf</code> file.\nList of font names and their definitions.\nRead the font height of the selected text style.\nRead-only access to <code>Fonts</code>.\nRead-only access to <code>Fonts</code>.\nRead-only access to the shared <code>Fonts</code>.\nAccess all shapes added this frame.\nCurrent force of the touch (average of the forces of the …\nRelease all memory and textures related to images used in …\nRelease all memory and textures related to the given image …\nFormat the given shortcut in a human-readable way (e.g. …\nSet the frame of the modal.\nChange the background color, margins, etc.\nChange the background color, margins, etc.\nChange the background color, margins, etc.\nTurn off the frame\nDefault is <code>true</code>. If set to <code>false</code> there will be no frame …\nChange the background color, margins, etc.\nTurn off the frame\nTextures to free after painting.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nLoad the image from some raw bytes.\nChooses between <code>Self::Dark</code> or <code>Self::Light</code> based on a …\nCreate a <code>ColorImage</code> from flat opaque gray data.\nAlternative method to <code>from_gray</code>. Create a <code>ColorImage</code> from …\nWithout label.\nWithout label.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nLabel shown next to the combo box\nleft-top corner plus a size (stretching right-down).\nConverts <code>&quot;A&quot;</code> to <code>Key::A</code>, <code>Space</code> to <code>Key::Space</code>, etc.\nGet a flags value with the bits of a flag with the given …\nBounding-box around the points.\nA zero-sized rect at a specific point.\nCreate a <code>ColorImage</code> from flat RGB data.\nCreate a <code>ColorImage</code> from flat un-multiplied RGBA data.\nLoad the image from an existing texture.\nReturns the bounding rectangle of the two points.\nLoad the image from a URI.\nAre we in fullscreen mode?\nWas the <code>CollapsingHeader</code> fully closed (and not being …\nWas the <code>CollapsingHeader</code> fully open (and not being …\nTrue if this widget has keyboard focus this frame, but didn…\nAny uncolored parts of the <code>Galley</code> (using …\nPaint text that has already been laid out in a <code>Galley</code>.\nAll text color in the <code>Galley</code> will be replaced with the …\nPaint text that has already been laid out in a <code>Galley</code>.\nUsed to get a unique ID when implementing one of the …\nGet the value of a tag.\nGet the value of a tag.\nAll widgets in this layer, sorted back-to-front.\nCreate a <code>Hyperlink</code> to the current <code>file!()</code> on github.\nCreate a <code>Hyperlink</code> to the current <code>file!()</code> (and line) on …\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nShow larger buttons for switching between light and dark …\nShow a small button to switch to/from dark/light mode …\nRead-only access to <code>GraphicLayers</code>, where painted …\nRead-write access to <code>GraphicLayers</code>, where painted …\nReturned a “grayed out” version of the given color.\nPut into a <code>Frame::group</code>, visually grouping the contents …\nFor when you want to group a few widgets together within a …\nExtend each end of the separator line by this much.\nHelpers for zooming the whole GUI of an app (changing …\nCheck if the layer had focus last frame. returns <code>true</code> if …\nSets the horizontal alignment of the Label to the given …\nChange the shape of the slider handle\nShape of the handle for sliders and similar widgets.\nAre we carrying a payload?\nDoes this widget have keyboard focus?\nThis widget has the keyboard focus (i.e. is receiving key …\nChecks if bytes are gifs\nAre we carrying a payload of the given type?\nDo we have a pointer?\nHas a repaint been requested for the current viewport?\nHas a repaint been requested for the given viewport?\nTrue if we have ever received a touch event.\nThis this <code>crate::Ui</code> a <code>crate::Frame</code> with a visible stroke?\nChecks if bytes are webp\nResponse of the actual clickable header.\nShow large text.\nUse <code>TextStyle::Heading</code>.\nPrefer using <code>RichText</code> directly!\nSet the maximum outer height of the menu.\nThe minimum height of the sides.\nImage height. This should be a multiple of 4.\nThe allowable height range for the panel, including …\nConstruct a <code>crate::Color32</code> from a hex RGB or RGBA string …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nHighlight this widget, to make it look like it is hovered, …\nHighlight this widget, to make it look like it is hovered, …\nSize hint for e.g. rasterizing an svg.\nShow a faint hint text when the text field is empty.\nSet a specific style for the hint text.\nA horizontal line.\nPaints a horizontal line.\nStart a ui with horizontal layout. After you have called …\nExplicitly ask for a horizontal line.\nCreate a horizontal scroll area.\nSet the horizontal align of the inner text.\ne.g. for when aligning text within a button.\nIf <code>true</code>, pressing horizontal arrows will act on the …\nLike <code>Self::horizontal</code>, but allocates the full vertical …\ne.g. for adjusting the placement of something.\nSet the horizontal scroll offset position.\nLike <code>Self::horizontal</code>, but aligns content with top.\nStart a ui with horizontal layout that wraps to a new row …\nSenses no clicks or drags. Only senses mouse hover.\nIf it is a good idea to show a tooltip, where is pointer?\nIf it is a good idea to show a tooltip, where is pointer?\nThe pointer is hovering above this widget or the widget …\nDragged files hovering over egui.\nEnable/disable horizontal scrolling. <code>false</code> by default.\nTurn on/off scrolling on the horizontal axis.\nLink to a web page.\nThe color used for <code>crate::Hyperlink</code>,\nShortcut for <code>add(Hyperlink::from_label_and_url(label, url))</code>…\nUse the provided function to render a different …\nUse the provided function to render a different <code>ComboBox</code> …\nReturns small icon rectangle and big icon rectangle\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nCheckboxes, radio button and collapsing headers have an …\nAssign a unique id to the Window. Required if the title …\nGenerated based on id of parent ui together with an …\nUse if you want to set an explicit <code>Id</code> for this widget.\nLet’s you change the <code>id</code> that you assigned in <code>Self::new</code>.\nAssign an explicit and globally unique id.\nThe <code>Id</code> of the widget/area this response pertains.\nThe globally unique widget id.\nExplicitly set the source of the <code>Id</code> of this widget, …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nSeed the child <code>Ui</code> with this <code>id_salt</code>, which will be mixed …\nExplicitly set the source of the <code>Id</code> of this widget, …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nA source for the unique <code>Id</code>, e.g. …\nId of us and our parent.\nAn image at the given position.\nShow an image available at the given <code>uri</code>.\nCreates a button with an image. The size of the image as …\nAn image at the given position.\nCreates a button with an image to the left of the text. …\nShow a spinner when loading an image.\nIf true, the tint of the image is multiplied by the widget …\nThis is set if, and only if, the user is currently editing …\nAssociate some static bytes with a <code>uri</code>.\nInclude an image in the binary.\nCreate a child ui which is indented to the right.\nIndent collapsing regions etc by this much.\nEnd indented regions with a horizontal line\nDraw a vertical lien left of indented region, in e.g. …\nDisplay an indeterminate state (neither checked nor …\nWhich font face in the file to use. When in doubt, use <code>0</code>.\nDraw as triangles (i.e. the length is always multiple of …\nThe inner response from the content closure\nWhat the user closure returned.\nMargin within the painted frame.\nMargin within the painted frame.\nThe inner rectangle of the native window, in monitor space …\nRead-only access to the shared <code>InputState</code>.\nRead-only access to <code>InputState</code>.\nThis will create a <code>InputState::default()</code> if there is no …\nRead-write access to the shared <code>InputState</code>.\nRead-write access to <code>InputState</code>.\nThis will create a <code>InputState::default()</code> if there is no …\nOptions related to input state handling.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInsert the given widget rect in the given layer.\nInserts text <code>text</code> into this buffer at character index …\nShow the state of egui, including its input and output.\nHelper: equivalent to …\nCheck for clicks, drags and/or hover on a specific region …\nSense more interactions (e.g. sense clicks on a <code>Response</code> …\nUse this style for interactive things. Note that you must …\nInteract with the background of this <code>Ui</code>, i.e. behind all …\nShould the cursor change when the user hovers over an …\nWhere the pointer (mouse/touch) were when this widget was …\nIf you detect a click or drag and wants to know where it …\nThe rectangle sensing interaction.\nWhere the widget is, in local layer coordinates.\nMinimum size of a <code>DragValue</code>, color picker button, and …\nDeprecated: use <code>Self::interact</code> instead.\nIf false, clicks goes straight through to what is behind …\nIf false, clicks goes straight through to what is behind …\nIf false, clicks goes straight through to what is behind …\nHow and when interaction happens.\nRead you what widgets are currently being interacted with.\nDefault is <code>true</code>. If set to <code>false</code> then you cannot interact …\nReturns true if we sense either clicks or drags.\nRegister this widget as being interested in getting …\nThe intersection of two <code>Rect</code>, i.e. the area covered by …\nThe overlap of two ranges, i.e. the range that is …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nDo the two ranges intersect?\nWhether any set bits in a source flags value are also set …\nDoes this Rect intersect the given ray (where <code>d</code> is …\nWhere does a ray from the center intersect the rectangle?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLayout with wrap mode based on the containing <code>Ui</code>.\nThe intrinsic / desired size of the widget.\nShowing UI:s for egui/epaint types.\nMake the contents invisible.\nReturns true if\nWhether all known bits in this flags value are set.\nIs any widget being dragged?\nIs this any kind of <code>crate::Area</code>?\nIs this <code>crate::Ui</code> an <code>crate::Area</code>?\nIs this specific widget being dragged?\nIs this specific widget being dragged?\nIs an egui context menu open?\nJust because the mouse is down doesn’t mean we are …\nTrue if width is zero or color is transparent\nWhether all bits in this flags value are unset.\nIf <code>false</code>, the <code>Ui</code> does not allow any interaction and the …\nTrue if all members are also finite.\nTrue if all members are also finite.\nTrue if all members are also finite.\nReturns <code>true</code> if the chain of bytes, image, or texture …\nIs the pointer currently moving? This is smoothed so a few …\nCan this text be edited?\n<code>width &lt; 0 || height &lt; 0</code>\nChecks if <code>self</code> has length <code>1.0</code> up to a precision of <code>1e-6</code>.\nCheck if the <code>ComboBox</code> with the given id has its popup menu …\nIs this any kind of panel?\nIs this <code>crate::Ui</code> a panel?\nIs the pointer button currently down on this widget?\nIs the pointer (mouse/touch) over any egui area?\nIs the given popup open?\n<code>width &gt; 0 &amp;&amp; height &gt; 0</code>\nCan be used for culling: if <code>false</code>, then no part of <code>rect</code> …\nIs this a root <code>crate::Ui</code>, i.e. created with …\nDo all corners have the same rounding?\nAre the margin on every side the same?\nSet to true in special cases where we do one frame where …\nIs the pointer currently still? This is smoothed so a few …\nWas the tooltip open last frame?\nIs this the topmost modal?\nIs egui currently using the pointer position (e.g. …\nAre all indices within the bounds of the contained …\nIf <code>false</code>, any widgets added to the <code>Ui</code> will be invisible …\nIf <code>false</code>, nothing you paint will show up.\nTilt the characters to the right.\nPrefer using <code>RichText</code> directly!\nHorizontal and vertical spacing between widgets.\nYield a set of contained flags values.\nReturn an iterator that walks the stack from this node to …\nYield a set of contained named flags values.\nThe job that this galley is the result of. Contains the …\nIs the given key currently held down?\nWas the given key pressed this frame?\nWas the given key released this frame?\nChange the <code>UiKind</code> of the arena.\nShow some text.\nThe text on labels, buttons, checkboxes etc.\nAssociate a label with a control for accessibility.\nFor logarithmic sliders, the largest positive value we are …\nAt what time was this area first shown?\nSet by the <code>eframe</code> web backend.\nLatest reported pointer position. When tapping a touch …\nUse this to paint stuff within this <code>Ui</code>.\nWhere we paint\nShow the <code>Ui</code> in a different <code>LayerId</code> from its parent.\nWhich layer the widget is part of.\nWhat layer the widget is on.\nTop-most layer at the given position.\nTop-most layer at the given position.\nAn iterator over all layers. Back-to-front, top is last.\nAll known layers with widgets.\nGet a full-screen painter for a new or existing layer\nReturn how to transform the graphics of the global …\nReturn how to transform the graphics of the given layer …\nThe currently set transform of a layer.\nHandles paint layers, i.e. how things are sometimes …\nRead the <code>Layout</code>.\nWill wrap text at the given width and line break at <code>\\n</code>.\nOverride the layout.\nDo layout and position the galley in the ui, without …\nLay out this text layut job in a galley.\nWill line break at <code>\\n</code>.\nOverride how text is being shown inside the <code>TextEdit</code>.\nThe id should be globally unique, e.g. …\n<code>min.x</code>\n<code>min.x</code>\nPlace elements horizontally, left to right.\nThe left top positions of the area.\nLeft margin, as <code>f32</code>\nLinear interpolation.\nLinearly interpolate towards another point, so that …\nLinearly interpolate so that <code>[0, 0]</code> is <code>Self::min</code> and <code>[1, 1]</code>…\nLinearly self towards other rect.\nDefault light theme.\nThe default style for new <code>Ui</code>:s in light mode.\nA line through many points.\nPaints a line connecting the points. NOTE: all coordinates …\nWhat line number of the call that requested the repaint?\nExplicit line height of the text in points.\nExplicit line height of the text in points.\nMultiplier for the scroll speed when reported in …\nA line between two points. More efficient than calling …\nPaints a line from the first point to the second.\nLooks like a hyperlink.\nImage loading\nLoad the state of an <code>Area</code> from memory.\nErrors\nLoad the image from its <code>Image::source</code>, returning the …\nAllocate a texture.\nThe loaders of bytes, images, and textures.\nWhen <code>false</code> (default), pressing TAB will move focus to the …\nMake this a logarithmic slider. This is great for when the …\nWas this long-pressed on a touch screen?\nThe widget had keyboard focus and lost it, either because …\nThe Mac ⌘ Command key. Should always be set to <code>false</code> on …\nHow to filter when magnifying (when texels are larger than …\nHow to align things on the main axis.\nMain axis direction\nJustify the main axis?\nIf true, wrap around when reading the end of the main …\nWhether or not the <code>ImageFit</code> should maintain the image’s …\nWhether or not the final size should maintain the original …\nUse this to generate widget ids for widgets that have …\nHow much larger than the parent rect are we in each …\nSet margin of text. Default is <code>Margin::symmetric(4.0, 2.0)</code>\nReport the data shown by this widget changed.\nCheck for equality but with proper handling of …\nChecks that the <code>ctrl/cmd</code> matches, and that the <code>shift/alt</code> …\nThe other corner, opposing <code>Self::min</code>. Usually the right …\nSet soft maximum width (wrapping width) of each column.\nSet a maximum number of decimals to display. Values will …\nSet a maximum number of decimals to display.\nReturns the maximum of <code>self.x</code> and <code>self.y</code>.\nMaximum height of the panel, including margins.\nSet maximum height of the window.\nWon’t expand to larger than this\nThe maximum height of the outer frame of the scroll area.\nSet the max height of the image.\nSet the maximum size of the inner <code>Ui</code> that will be created.\nMaximum number of passes to run in one frame.\nNew widgets will <em>try</em> to fit within this rectangle.\nSet the max rectangle, within which widgets will go.\nSet maximum size of the window, equivalent to calling both …\nWon’t expand to larger than this\nSet the max size of the image.\nDetermines the maximum size of the image.\nMaximum size of one side of the font texture.\nMaximum size of one side of a texture.\nMaximum width of the panel, including margins.\nSet maximum width of the window.\nWon’t expand to larger than this\nThe maximum width of the outer frame of the scroll area.\nSet the max width of the image.\nAre we maximized?\nRead-only access to the shared <code>Memory</code>.\nRead-only access to <code>Memory</code>.\nRead-write access to the shared <code>Memory</code>.\nRead-write access to <code>Memory</code>.\nShows the contents of <code>Self::memory</code>.\nMenu bar functionality (very basic so far).\nCreate a menu button that when clicked will show the given …\nCreate a menu button with an image that when clicked will …\nCreate a menu button with an image and a text that when …\nHorizontal and vertical margins within a menu frame.\nHorizontal distance between a menu and a submenu.\nThe default wrapping width of a menu.\nTight bounding box around all the meshes in all the rows. …\nReturns true if this widget was clicked this frame by the …\nIs the middle button currently down?\nWith the <code>eframe</code> web backend, this is set to the mime-type …\nWith the <code>eframe</code> web backend, this is set to the mime-type …\nOne of the corners of the rectangle, usually the left top …\nSet minimum width of each column. Default: …\nSet a minimum number of decimals to display. Normally you …\nSet a minimum number of decimals to display.\nReturns the minimum of <code>self.x</code> and <code>self.y</code>.\nMinimum height of the panel, including margins.\nSet minimum height of the window.\nWon’t shrink to smaller than this\nWhere and how large the <code>Ui</code> is already. All widgets that …\nSet minimum height of each row. Default: …\nThe minimum height of a vertical scroll area which …\nThe minimum width of a horizontal scroll area which …\nSet minimum size of the window, equivalent to calling both …\nSize of content; same as <code>min_rect().size()</code>\nSet the minimum size of the button.\nSet the minimum size of the <code>TextEdit</code>.\nWon’t shrink to smaller than this\nMinimum width of the panel, including margins.\nSet minimum width of the window.\nWon’t shrink to smaller than this\nHow to filter when minifying (when texels are smaller than …\nAre we minimized?\nHow to filter between texture mipmaps.\nWhich modifier keys are down at the start of the frame?\nWhich modifier keys are down at the start of the frame?\nCurrent monitor size in egui points.\nShow monospace (fixed width) text.\nUse <code>TextStyle::Monospace</code>.\nPrefer using <code>RichText</code> directly!\nHow much the mouse moved since the last frame, in …\nIf <code>false</code> the window will be immovable.\nMoveable by dragging the area?\nMoves the given area to the top in its <code>Order</code>.\nCalls <code>InputState::multi_touch</code>.\nReturns details about the currently ongoing multi-touch …\nA <code>TextEdit</code> for multiple lines. Pressing enter key will …\nLike <code>Self::set_opacity</code>, but multiplies the given value …\nLike <code>Self::set_opacity</code>, but multiplies the given value …\nOpacity multiplier in gamma space.\nIs there a mutable <code>TextEdit</code> under the cursor? Use by <code>eframe</code>…\nUsage: …\nDebug-name.\nHuman-readable English name.\nName of the file. Set by the <code>eframe</code> web backend.\nThe number of physical pixels for each logical point on …\nThe OS native pixels-per-point.\nRadius of the rounding of the North-East (right top) …\nRadius of the rounding of the North-East (right top) …\nCreate a scroll area where both direction of scrolling is …\nThe <code>CollapsingHeader</code> starts out collapsed unless you call …\nCreate new <code>ComboBox</code> with id and label\nCreate a new Modal. The id is passed to the area.\nThe id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.\nThe id should be globally unique, e.g. <code>Id::new(&quot;my_panel&quot;)</code>.\nThe window title is used as a unique <code>Id</code> and must be …\nIf you are using egui, use <code>egui::Context::load_texture</code> …\nCreate an image filled with the given color.\nCreate a new <code>Grid</code> with a locally unique identifier.\nCreate a new top-level <code>Ui</code>.\nProgress in the <code>[0, 1]</code> range, where <code>1</code> means “completed”…\nCreates a new horizontal slider.\nThe <code>id</code> must be globally unique.\nNo colors, no margins, no border.\nCreate a scroll area where you decide which axis has …\nCapture the file and line number of the call site.\nYou can also use <code>Self::default</code>.\nGenerate a new <code>Id</code> by hashing some source (e.g. a string or …\nCreate a painter to a specific layer within a certain clip …\nCreate a new <code>UiStackInfo</code> with the given kind and an empty …\nLoad the image from some source.\nCreate a new spinner that uses the style’s <code>interact_size</code> …\nCreate a child <code>Ui</code> with the properties of the given builder.\nCapture the file and line number of the call site, as well …\nIf <code>true</code>, open the url in a new tab. If <code>false</code> open it in …\nThis is the <code>Id</code> that will be assigned to the next widget …\nWhat is the id of the next tooltip for this widget?\nWhere do we expect a zero-sized widget to be placed?\nStyle to use for non-interactive widgets.\nSafe normalize: returns zero if input is zero.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nSetting this will allow the last column to expand to take …\nHow many ui passes is this the sum of?\nTotal number of indices in all the row meshes.\nHow many times was the given key pressed this frame?\nNumber of touches (fingers) on the surface. Value is ≥ 2 …\nTotal number of vertices in all the row meshes.\nHow to format numbers as strings, e.g. in a …\nHow to display numeric color values.\nRadius of the rounding of the North-West (left top) corner.\nRadius of the rounding of the North-West (left top) corner.\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nSet <code>custom_formatter</code> and <code>custom_parser</code> to display and …\nMove the shadow by this much.\nCall the given callback at the start of each pass of each …\nShow this text when hovering if the widget is disabled.\nShow this UI when hovering if the widget is disabled.\nCall the given callback at the end of each pass of each …\nWhen hovered or dragged, use this icon for the mouse …\nWhen hovered, use this icon for the mouse cursor.\nShow this text if the widget was hovered (i.e. a tooltip).\nLike <code>on_hover_text</code>, but show the text next to cursor.\nShow this UI if the widget was hovered (i.e. a tooltip).\nLike <code>on_hover_ui</code>, but show the ui next to cursor.\nRead the current opacity of the underlying painter.\nRead the current opacity of the underlying painter.\nCalling <code>.open(Some(true))</code> will make the collapsing header …\nCall this to add a close-button to the window title bar.\nAlways open this hyperlink in a new browser tab.\nOpen the given popup and close all others.\nOpen an URL in a browser.\nIf set, open this url.\n0.0 if fully closed, 1.0 if fully open, and something …\nRead-only access to <code>Options</code>.\nGlobal egui options.\nRead-write access to <code>Options</code>.\n<code>order(Order::Foreground)</code> for a Window that should always …\n<code>order(Order::Foreground)</code> for an Area that should always be …\nIn which layer, and in which order in that layer?\nVertical or horizontal slider? The default is horizontal.\nWhat operating system are we running on?\nMargin outside the painted frame.\nMargin outside the painted frame.\nCalculate the <code>outer_rect</code> from the <code>content_rect</code>.\nThe outer rectangle of the native window, in monitor space …\nAll the data egui returns to the backend at the end of …\nRead-only access to the shared <code>PlatformOutput</code>.\nRead-only access to <code>PlatformOutput</code>.\nRead-write access to the shared <code>PlatformOutput</code>.\nRead-write access to <code>PlatformOutput</code>.\nIf set this will change the font family and size for all …\nOverride default text color for all text.\nIf set this will change the default <code>TextStyle</code> for all …\nHow to vertically align text.\nPaint this frame as a shape.\nPaint the image in the given rectangle.\nPaint the spinner in the given rectangle.\nDraw a debug rectangle over the response displaying the …\nUse this to paint stuff within this <code>Ui</code>.\nCreate a painter for a sub-region of this Ui.\nPanel background color\nParent viewport, if known.\nId of our parent viewport.\nReturn the <code>ViewportId</code> of his parent.\nIf true, hide the letters from view and prevent copying …\nUpdate this <code>ViewportBuilder</code> with a delta, returning a list …\nSet by the <code>egui-winit</code> backend.\nSet by the <code>egui-winit</code> backend.\nRetrieve the payload, if any.\nSize of a physical pixel in logical gui coordinates …\nWhere the “root” of the window is.\nWhere the “root” of the area is.\nThe anchor point of the area, i.e. where on the area the …\nLast known position of the pivot.\nThe pixels, row by row, from top to bottom.\nThe coverage value.\nNumber of physical pixels for each logical UI point.\nThe number of physical pixels for each logical point.\nAlso known as device pixel ratio, &gt; 1 for high resolution …\nNumber of physical pixels for each logical UI point.\nPixels per point.\nThe number of physical pixels for each logical point. …\nThe number of physical pixels per logical ui point, for …\nAlso known as device pixel ratio, &gt; 1 for high resolution …\nNon-rendering related output.\nState of the mouse or simple touch gestures which can be …\nIf it is a good idea to show a tooltip, where is pointer?\nIf you detect a click or drag and wants to know where it …\nLatest reported pointer position.\nShows a popup above or below another widget.\nHelper for <code>popup_above_or_below_widget</code>.\n<code>pos2(x, y) == Pos2::new(x, y)</code>\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns a 0-width Rect.\nReturns the point on the rect’s frame or in the center …\nThe desired outer position of the window.\nShould be set to the expected time between frames when …\nEstimated time until next frame (provided we repaint right …\nShow a prefix before the number, e.g. “x: “\nShow a prefix before the number, e.g. “x: “\nIf true, the most common glyphs (ASCII) are pre-rendered …\nWhere did the current click/drag originate? <code>None</code> if no …\nWhen did the current click/drag originate? <code>None</code> if no …\nThe previous text value.\nWas the primary button clicked this frame?\nIs the primary button currently down?\nWas the primary button pressed this frame?\nWas the primary button released this frame?\nWhat to paint - either a <code>Mesh</code> or a <code>PaintCallback</code>.\nCreate a child Ui with an explicit <code>Id</code>.\nPush another level onto the <code>UiStack</code>.\nAdd a <code>Widget</code> to this <code>Ui</code> at a specific location (manual …\nShow a <code>RadioButton</code>. Often you want to use <code>Self::radio_value</code>…\nShow radio-buttons to switch between light mode, dark mode …\nShow a <code>RadioButton</code>. It is selected if …\nAlign text to top. Only applicable together with …\nPrefer using <code>RichText</code> directly!\nSets valid range for dragging the value.\nThe raw input we got this frame from the backend.\nYou probably want to use <code>Self::smooth_scroll_delta</code> instead.\nRead the response of some widget, which may be called …\nExplicit reason; human readable.\nWhere the area is on screen.\nSee also <code>Self::rect_filled</code> and <code>Self::rect_stroke</code>.\nWhere to paint.\nBounding rect.\nThe area of the screen we are talking about.\nThe full widget rectangle, in local layer coordinates.\nIs the pointer (mouse/touch) above this rectangle in this …\nDoes the given rectangle contain the mouse pointer?\nSee also <code>Self::rect_stroke</code>.\nSee also <code>Self::rect_filled</code>.\nIf <code>true</code>, <code>egui</code> will discard the loaded image data after the …\nCreate a new image from a patch of the current image.\nClone a sub-region as a new image.\nHelper function to handle pan and zoom interactions on a …\nThis is called by <code>Response::widget_info</code>, but can also be …\nLinearly remap a value from one range to another, so that …\nLike <code>remap</code>, but also clamps the value so that the returned …\nThe intersection of a source flags value with the …\nWhy are we repainting?\nSchedule a repaint of this viewport after this delay.\nIf any widget moves or changes id, repaint everything.\nReplaces all contents of this string with <code>text</code>\nRequest to discard the visual output of this pass, and to …\nWas <code>crate::Context::request_discard</code> called during the …\nGive keyboard focus to a specific widget. See also …\nRequest that this widget get keyboard focus.\nCall this if there is need to repaint the UI, i.e. if you …\nRequest repaint after at most the specified duration …\nRequest repaint after at most the specified duration …\nRepaint after this many seconds.\nCall this if there is need to repaint the UI, i.e. if you …\nWas <code>crate::Context::request_discard</code> called?\nWas a repaint requested last pass for the current viewport?\nWas a repaint requested last pass for the given viewport?\nThis command requires the parent viewport to repaint.\nMake room for this many additional triangles (will reserve …\nMake room for this many additional vertices. See also …\nForget window positions, sizes etc. Can be used to …\nShow a button to reset a value to its default. The button …\nShow a button to reset a value to its default. The button …\nReset to the default style set in <code>Context</code>.\nCan panel be resized by dragging the edge of it?\nCan panel be resized by dragging the edge of it?\nCan the user resize the window by dragging its edges?\nCan you resize it with the mouse?\nUsage: …\nLook up this <code>TextStyle</code> in <code>Style::text_styles</code>.\nRead the <code>Ui</code>s background <code>Response</code>. It’s <code>Sense</code> will be …\nThe response of the modal contents\nThe response of the area.\nSet the return key combination.\nRGBA pixels, with separate/unmultiplied alpha.\nThe id should be globally unique, e.g. …\n<code>max.x</code>\n<code>max.x</code>\nPlace elements horizontally, right to left.\nRight margin, as <code>f32</code>\nRotates the vector by 90°, i.e positive X to positive Y …\nRotate by some angle about an origin, in-place.\nRotate the image about an origin by some angle\nRotate the bounds (will expand the <code>Rect</code>)\nRotate the image about an origin by some angle\nRotation in radians. Moving fingers around each other will …\nUseful for pixel-perfect rendering of lines that are one …\nUseful for pixel-perfect rendering.\nUseful for pixel-perfect rendering.\nUseful for pixel-perfect rendering of filled shapes.\nRounded so that two adjacent rects that tile perfectly …\nUseful for pixel-perfect rendering of lines that are one …\nRounded so that two adjacent rects that tile perfectly …\nRounded so that two adjacent rects that tile perfectly …\nUseful for pixel-perfect rendering.\nThe rounding of the <em>outer</em> corner of the <code>Self::stroke</code> (or, …\nRound the corners of the image.\nSet rounding for the <code>ImageButton</code>.\nRows of text, from top to bottom.\nRun the ui code for one frame.\nSame rounding on all four corners.\nThe same margin on every side.\nScale the shape by <code>factor</code>, in-place.\nScale the font’s glyphs by this much. this is only a …\nScale up by this factor in each direction, keeping the …\nScale up by this factor in each direction, keeping the …\nCreate a scoped child ui.\nCreate a child, add content to it, and then allocate only …\nCreate a child, add content to it, and then allocate only …\nThis is a signal to any backend that we want the …\nPosition and size of the egui area.\nPosition and size of the area that egui should use, in …\nPosition and size of the egui area.\nFull size of the screen, in pixels.\nEnable/disable horizontal/vertical scrolling. <code>false</code> by …\nTurn on/off scrolling on the horizontal/vertical axes.\nControls the spacing of a <code>crate::ScrollArea</code>.\nEnable/disable horizontal/vertical scrolling. <code>false</code> by …\nTurn on/off scrolling on the horizontal/vertical axes.\nThe animation that should be used when scrolling a …\nSpecify within which screen-space rectangle to show the …\nSets the <code>ScrollBarVisibility</code> of the window.\nSet the visibility of both horizontal and vertical scroll …\nSet the horizontal and vertical scroll offset position.\nAdjust the scroll position of any parent <code>crate::ScrollArea</code> …\nSame as <code>Self::scroll_to_cursor</code>, but allows you to specify …\nAdjust the scroll position until this UI becomes visible.\nLike <code>Self::scroll_to_me</code>, but allows you to specify the …\nAdjust the scroll position of any parent <code>crate::ScrollArea</code> …\nSame as <code>Self::scroll_to_rect</code>, but allows you to specify …\nScroll this many points in the given direction, in the …\nSame as <code>Self::scroll_with_delta</code>, but allows you to specify …\nControls the speed at which we zoom in when doing ctrl/cmd …\nRadius of the rounding of the South-East (right bottom) …\nRadius of the rounding of the South-East (right bottom) …\nWas the secondary button clicked this frame?\nReturns true if this widget was clicked this frame by the …\nIs the secondary button currently down?\nWas the secondary button pressed this frame?\nWas the secondary button released this frame?\nCan the user select the text with the mouse?\nShow a label which can be selected or not.\nShow selectable text. It is selected if …\nIf <code>true</code>, mark this button as “selected”.\ncheckboxes, radio-buttons etc\nIf <code>true</code>, mark this button as “selected”.\nThe current value of checkboxes and radio buttons.\nWhat we show as the currently selected value\nAdd a command to <code>PlatformOutput::commands</code>, for the …\nSend a command to the current viewport.\nSend a command to a specific viewport.\nBy default, buttons senses clicks. Change this to a …\nMake the label respond to clicks and/or drags.\nExplicitly set a sense.\nSet if you want sense clicks and/or drags. Default is …\nMake the image respond to clicks and/or drags.\nBy default, buttons senses clicks. Change this to a …\nThe senses (click and/or drag) that the widget was …\nHow the widget responds to interaction.\nShortcut for <code>add(Separator::default())</code>\nAssign a new image to an existing texture.\nModify an existing <code>Shape</code>.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nNew or changed textures. Apply before painting.\n<code>max.y</code>\nKeep size\nScreen-space rectangle for clipping what we paint in this …\nEverything painted in this <code>Painter</code> will be clipped against …\nSet the cursor icon.\nTurn on/off whether or not to debug widget layout on hover.\nSet which widget is being dragged.\nSet which widget is being dragged.\nIf <code>true</code>, <code>Self::show_viewport_deferred</code> and …\nCalling <code>set_enabled(false)</code> will cause the <code>Ui</code> to deny all …\nIf true, all windows, menus, tooltips etc are to be …\nIf set, colors will be modified to look like this\nSet an event filter for a widget.\nTell <code>egui</code> which fonts to use.\nkeep min\nSet both the minimum and maximum height.\n<code>ui.set_height_range(min..=max);</code> is equivalent to …\nFor integrations: Set this to render a sync viewport.\nCalling <code>set_invisible()</code> will cause all further widgets to …\nIf <code>false</code>, nothing added to the painter will be visible\nRedirect where you are painting.\n<code>min.x</code>\nMove the left top positions of the area.\nSet the maximum height of the ui. You won’t be able to …\nSet the maximum size of the ui. You won’t be able to …\nSet the maximum width of the ui. You won’t be able to …\nSet the minimum height of the ui. This can’t shrink the …\nSet the minimum size of the ui. This can’t shrink the …\nSet the minimum width of the ui. This can’t shrink the …\nLimit focus to widgets on the given layer and above. If …\nMake the widget in this <code>Ui</code> semi-transparent.\nSet the opacity (alpha multiplier) of everything painted …\nSet the operating system we are running on.\nAssign a new image to a subregion of the whole texture.\nSet a drag-and-drop payload.\nSet the number of physical pixels for each logical point. …\nFor integrations: this callback will be called when an …\n<code>max.x</code>\nSet row height in horizontal wrapping layout.\nSet to true in special cases where we do one frame where …\nChanges apply to this <code>Ui</code> and its subsequent children.\nThe currently active <code>Style</code> used by all new windows, panels …\nThe <code>Style</code> used by all new windows, panels etc. Use …\nMark the <code>child</code> layer as a sublayer of <code>parent</code>.\nThe <code>Theme</code> used to select between dark and light <code>Self::style</code>\n<code>min.y</code>\nTransform the graphics of the given layer.\nCalling <code>set_visible(false)</code> will cause all further widgets …\nThe <code>crate::Visuals</code> used by all subsequent windows, panels …\nThe <code>crate::Visuals</code> used by all subsequent windows, panels …\nkeep min\nSet both the minimum and maximum width.\n<code>ui.set_width_range(min..=max);</code> is equivalent to …\nSets zoom factor of the UI. Will become active at the …\nShow a ui for settings (style and tessellation options).\nOptional drop-shadow behind the frame.\nOptional drop-shadow behind the frame.\nWhat to paint.\nEither of the shift keys are down.")