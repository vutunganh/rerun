searchState.loadedDescShard("re_sdk_comms", 0, "TCP communications between a Rerun logging SDK and …\nSend <code>LogMsg</code>es to a server over TCP.\nServer connection error.\nComes after version.\nAdded <code>PROTOCOL_HEADER</code>. Introduced for Rerun 0.16.\nOnly used for diagnostics, not for communication after …\nThe default amount of time to wait for the TCP connection …\nThe default address of a Rerun TCP server which an SDK …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf the latency in the <code>LogMsg</code> channel is greater than this, …\nTurns <code>info</code>-level logs into <code>debug</code>-level logs.\nListen to multiple SDK:s connecting to us over TCP.\nSend <code>LogMsg</code>es to a server over TCP.\nSwitch to a mode where we drop messages if disconnected.\nSent to prematurely quit (before flushing).\nQuite immediately, dropping any unsent message.\nSent to prematurely quit (before flushing).\nOnly used for diagnostics, not for communication after …\nWait until everything has been sent.\nSwitch to a mode where we drop messages if disconnected.\nStall until all messages so far has been sent.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConnect via TCP to this log server.\nDecides how many messages to drop so that we achieve a …\nFigures out how large fraction of messages to send based on\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf the latency in the <code>LogMsg</code> channel is greater than this, …\nTurns <code>info</code>-level logs into <code>debug</code>-level logs.\nListen to multiple SDK:s connecting to us over TCP.\nA healthy <code>TcpStream</code> ready to send packets\nThe <code>TcpStream</code> is yet to be connected.\nConnect to a rerun server and send log messages.\nState of the <code>TcpStream</code>\nReturns <code>false</code> on failure. Does nothing if already …\nWait until all logged data have been sent.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCheck if the underlying <code>TcpStream</code> is in the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBlocks until it is sent.")