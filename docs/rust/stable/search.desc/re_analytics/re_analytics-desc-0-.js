searchState.loadedDescShard("re_analytics", 0, "Rerun’s analytics SDK.\nAppend a new event to the time series associated with this …\nAn analytics event.\nWhat kind of event this is.\nThe name of the event.\nTrait representing the properties of an analytics event.\nUpdate the permanent state associated with this analytics …\nThe path of the config file.\nThe directory where pending data is stored.\nAll analytics events collected by the Rerun viewer are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a new string property that is a hex representation …\nInsert a property into the event, overwriting any existing …\nInsert a property into the event, but only if its <code>value</code> is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this the first time the user runs the app?\nInitialize an analytics pipeline which flushes events …\nOpt-in meta-data you can set via <code>rerun analytics</code>.\n<code>None</code> if analytics are disabled.\nRecord a single event.\nRecord an event.\nA unique ID for this session.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nRecords a crash caused by a panic.\nFor user applications we hash the id.\nHolds information about the user’s environment.\nWhen running an example application we record the full id.\nSent when a new recording is opened.\nSent when a Wasm file is served.\nBasic information about a recording’s chunk store.\nSome sparse information about the runtime environment the …\nSent when the viewer is first started.\nThe environment in which the viewer is running.\nThe environment in which the viewer is running.\nName of the application.\nInfo on how the <code>re_viewer</code> crate was built.\nHow data is being loaded into the viewer.\nGiven a URL, extract the root domain.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe wgpu graphics backend used by the viewer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the viewer is started directly from within Windows …\nOpt-in meta-data you can set via <code>rerun analytics</code>.\nThe device tier <code>re_renderer</code> identified for the graphics …\nName of the recording.\nSparse information about the runtime environment the …\nWhere data is being logged.\nThe Rerun version that was used to encode the RRD data.\nThe URL on which the web viewer is running.\nThe URL on which the web viewer is running.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe path of the config file.\nThe directory where pending data is stored.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs this the first time the user runs the app?\nOpt-in meta-data you can set via <code>rerun analytics</code>.\nA unique ID for this session.\nAn eventual, at-least-once(-ish) event pipeline, backed by …\nAppends the <code>event</code> to the active <code>session_file</code>.\nSends all events currently buffered in the <code>session_file</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOur public telemetry endpoint.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe “public” API key can be obtained at …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")