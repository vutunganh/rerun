(function() {var implementors = {
"re_types_builder":[["impl&lt;T: <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a>&gt; <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"struct\" href=\"re_types_builder/codegen/rust/arrow/struct.OptionTokenizer.html\" title=\"struct re_types_builder::codegen::rust::arrow::OptionTokenizer\">OptionTokenizer</a>&lt;T&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"struct\" href=\"re_types_builder/codegen/cpp/forward_decl/struct.ForwardDecls.html\" title=\"struct re_types_builder::codegen::cpp::forward_decl::ForwardDecls\">ForwardDecls</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"struct\" href=\"re_types_builder/codegen/cpp/includes/struct.Includes.html\" title=\"struct re_types_builder::codegen::cpp::includes::Includes\">Includes</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"enum\" href=\"re_types_builder/codegen/cpp/method/enum.MethodDocumentation.html\" title=\"enum re_types_builder::codegen::cpp::method::MethodDocumentation\">MethodDocumentation</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"struct\" href=\"re_types_builder/codegen/rust/api/struct.TypeTokenizer.html\" title=\"struct re_types_builder::codegen::rust::api::TypeTokenizer\">TypeTokenizer</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"struct\" href=\"re_types_builder/codegen/rust/api/struct.ObjectFieldTokenizer.html\" title=\"struct re_types_builder::codegen::rust::api::ObjectFieldTokenizer\">ObjectFieldTokenizer</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"enum\" href=\"re_types_builder/codegen/cpp/forward_decl/enum.ForwardDecl.html\" title=\"enum re_types_builder::codegen::cpp::forward_decl::ForwardDecl\">ForwardDecl</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"struct\" href=\"re_types_builder/codegen/rust/arrow/struct.ArrowFieldTokenizer.html\" title=\"struct re_types_builder::codegen::rust::arrow::ArrowFieldTokenizer\">ArrowFieldTokenizer</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for &amp;<a class=\"enum\" href=\"re_types_builder/objects/enum.ElementType.html\" title=\"enum re_types_builder::objects::ElementType\">ElementType</a>"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"struct\" href=\"re_types_builder/codegen/rust/arrow/struct.ArrowDataTypeTokenizer.html\" title=\"struct re_types_builder::codegen::rust::arrow::ArrowDataTypeTokenizer\">ArrowDataTypeTokenizer</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"https://docs.rs/quote/1.0.32/quote/to_tokens/trait.ToTokens.html\" title=\"trait quote::to_tokens::ToTokens\">ToTokens</a> for <a class=\"struct\" href=\"re_types_builder/codegen/rust/arrow/struct.StrStrMapTokenizer.html\" title=\"struct re_types_builder::codegen::rust::arrow::StrStrMapTokenizer\">StrStrMapTokenizer</a>&lt;'_&gt;"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()