searchState.loadedDescShard("re_redap_browser", 0, "This crates implements the Redap browser feature, …\nOrigin used to show the examples ui in the redap browser.\nOrigin used to show the local ui in the redap browser.\nAll servers known to the viewer, and their catalog data.\nWhen deserializing we can’t construct the <code>Server</code>s right …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nContext structure for the redap browser.\nSender to queue new commands.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvert a <code>SorbetBatch</code> to a <code>DisplayRecordBatch</code> and generate …\nDescriptor for the generated <code>RecordingUri</code> component.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAll the entries of a server.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>list_item::ListItem</code>-based UI for the datasets.\nAll servers known to the viewer, and their catalog data.\nAdd a server to the hub.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhether we already know about a given server (or have it …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPer-frame housekeeping.\nWhen deserializing we can’t construct the <code>Server</code>s right …\nCentral panel UI for when a server is selected.")