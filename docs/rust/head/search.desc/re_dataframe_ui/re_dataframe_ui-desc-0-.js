searchState.loadedDescShard("re_dataframe_ui", 0, "Rich table widget over <code>datafusion</code>.\nA single column of data in a record batch.\nA handle to an object that is requested asynchronously.\nIntermediate data structures to make <code>re_datastore</code>’s row …\nA single column of component data.\nA single column of data in a record batch.\nDisplay some data from the column.\nDisplay some data in the column.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the number of instances for the given row index.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCompute a quick partial hash of an image data buffer, …\nTry to decode the time from the given row index.\nCreate a new <code>DisplayRecordBatch</code> from a <code>RecordBatch</code> and its …\nA handle to an object that is requested asynchronously.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new <code>Self</code> with the given future.\nCreate a new <code>Self</code> with the given future and automatically …\nCheck if the future has completed and, if so, update our …\nGet a reference to the received object, if the request has …\nThis applies some fixes so that the column resize bar is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a table config, creating it if it doesn’t exist.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")