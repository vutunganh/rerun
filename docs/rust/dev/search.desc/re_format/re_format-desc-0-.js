searchState.loadedDescShard("re_format", 0, "Miscellaneous tools to format and parse numbers, …\nDefault options for formatting an <code>f32</code>.\nDefault options for formatting an <code>f64</code>.\nOptions for how to format a floating point number, e.g. an …\nThe minus character: …\nAn unsigned type which is large enough to hold the …\nAdd thousands separators to a number, every three steps, …\nAlways show the sign, even if it is positive (<code>+</code>).\nPretty format a large number by using SI notation (base …\nThe returned value is for human eyes only, and can not be …\nPretty format a number of bytes by using SI notation …\nFormat a number with about 7 decimals of precision.\nFormat a number with about 15 decimals of precision.\nPretty format a signed number by using thousands …\nFormat a latitude or longitude value.\nFormats a timestamp in seconds to a string.\nPretty format an unsigned integer by using thousands …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nOnly add thousands separators to decimals if there are at …\nWhen showing grid-lines representing time.\nMax number of decimals to show after the decimal point.\nParses a number, ignoring whitespace (e.g. thousand …\nParses a number, ignoring whitespace (e.g. thousand …\nParses seconds from a string.\nMaximum digits of precision to use.\nComputes the absolute value of <code>self</code> without any wrapping …\nAlways show the sign, even if it is positive (<code>+</code>).\nMax number of decimals to show after the decimal point.\nShow at most this many digits of precision, including both …\nStrip trailing zeros from decimal expansion?\nFormats a timestamp in seconds to a string.\nWhen showing grid-lines representing time.\nParses seconds from a string.")