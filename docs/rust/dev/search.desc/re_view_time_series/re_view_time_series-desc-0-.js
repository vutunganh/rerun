searchState.loadedDescShard("re_view_time_series", 0, "Rerun time series View\n<code>1.0</code> for raw data.\nWhat kind of aggregation was used to compute the graph?\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nId used for this series in the egui plot view.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLabel of the series.\nEarliest time an entity was recorded at on the current …\nComputes a deterministic, globally unique ID for the plot …\nRadius of markers, or stroke radius for lines.\nRadius of markers, or stroke radius for lines.\nShared functionality for querying time series data.\nWhether the individual series is visible.\nImplements aggregation behaviors for <code>Average</code>.\nKeep only the maximum values in the range.\nKeep only the minimum values in the range.\nKeep both the minimum and maximum values in the range.\nImplements aggregation behaviors for <code>Min</code>, <code>Max</code>, <code>MinMax</code>, and …\nFind both the minimum and maximum values in the range, …\n<code>aggregation_factor</code>: the width of the aggregation window.\nAdjacent plot points may have the same <code>PlotPoint::time</code>, if …\nAre two <code>PlotPoint</code>s safe to aggregate?\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe system for rendering <code>archetypes::SeriesLines</code> …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe system for rendering <code>archetypes::SeriesPoints</code> …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAllocates all points for the series.\nCollects colors for the series into pre-allocated plot …\nCollects <code>radius_ui</code> for the series into pre-allocated plot …\nAllocates scalars per series into pre-allocated plot …\nCollects series names for the series into pre-allocated …\nQueries the visibility flags for all series in a query.\nDetermines how many series there are in the scalar chunks.\nApply the given aggregation to the provided points.\nFind the number of time units per physical pixel.\nConfigures the vertical axis of the plot.\nChoose the default visualizers to enable for this entity.\nDefault names for entities, used when no label is provided.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the user dragging the cursor this frame?\nMake sure the range is finite and positive, or <code>egui_plot</code> …\nConfigures the legend of the plot.\nWhether to reset the plot bounds next frame.\nState of <code>egui_plot</code>’s auto bounds before the user started …\nThe range of the scalar values currently on screen.\nWe offset the time values of the plot so that unix …\nConfigures which range on each timeline is shown by this …\nWas the user dragging the cursor last frame?")